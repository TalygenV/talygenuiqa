{"version":3,"sources":["webpack:///./src/views/ItemGroupList/Manage.vue","webpack:///src/views/ItemGroupList/Manage.vue","webpack:///./src/views/ItemGroupList/Manage.vue?038a","webpack:///./src/views/ItemGroupList/Manage.vue?d654"],"names":["render","_vm","this","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","DataLoaded","buttons","FormSchema","on","onSubmit","_e","staticRenderFns","data","group_id","TagsSelectedArray","Groupname","ReaderData","UsersData","UserList","Status","GroupDetail","Reader","Users","layoutType","Data","astype","label","name","value","placeholder","validationRules","config","options","mode","rows","type","class","text","onClick","onCancel","created","GetDeviceList","$route","params","id","GetNotficationUsers","ManageItemsGroup","methods","DataService","then","response","forEach","item","push","url","NAME","DEPARTMENT_NAME","USER_ID","console","log","formfields","vm","jsonobj","GroupId","GroupName","LocationId","ReaderId","UserIds","Array","prototype","map","call","join","GroupDetails","GroupDescription","StatusId","poststring","JSON","stringify","AddGroup","ShowAlert","$router","GetItemsGroupById","length","group_name","reader_id","user_ids","split","obj","find","x","status_id","group_details","component"],"mappings":"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","file":"js/chunk-2d0d7694.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('AddGroup')))])])])])]),_c('div',{staticClass:\"border p-3\"},[(_vm.DataLoaded)?_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}}):_vm._e(),_c('div',{staticClass:\"col-lg-6\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"en\">\r\n<section class=\"main-content\">\r\n    <loader :is-visible=\"isLoading\"></loader>\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 padding-t_8\">\r\n                <div class=\"theme-primary partition-full\">\r\n                    <span class=\"p-name text-white\">{{$t('AddGroup')}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"border p-3\">\r\n        <dynamic-form lang=\"en\" v-if=\"DataLoaded\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\">\r\n        </dynamic-form>\r\n        <div class=\"col-lg-6\">\r\n            <small class=\"text-danger\">{{$t('MandatoryString')}}</small>\r\n        </div>\r\n    </div>\r\n</section>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nexport default {\r\n    data() {\r\n        return {\r\n            group_id: 0,\r\n            TagsSelectedArray: [],\r\n            isLoading: false,\r\n            Groupname: '',\r\n            ReaderData: [],\r\n            UsersData: [],\r\n            UserList: [],\r\n            Status: '',\r\n            GroupDetail: '',\r\n            Reader: '',\r\n            Users: '',\r\n            DataLoaded: 0,\r\n            FormSchema: [{\r\n                layoutType: \"double\",\r\n                Data: [{\r\n                    astype: \"TextField\",\r\n                    label: this.$t('GroupName'),\r\n                    name: \"GroupName\",\r\n                    value: \"\",\r\n                    placeholder: \"\",\r\n                    validationRules: {\r\n                        \"required\": true\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"SelectField\",\r\n                    label: this.$t('Reader'),\r\n                    name: \"Reader\",\r\n                    value: \"\",\r\n                    placeholder: \"\",\r\n                    validationRules: {\r\n                        \"required\": true\r\n                    },\r\n                    config: {\r\n                        // option_request_url:process.env.VUE_APP_API_URL+'/GetDeviceList',\r\n                        // token:this.GetUserInfo.Token,\r\n                        options: []\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"MultiSelectField\",\r\n                    label: this.$t('Users'),\r\n                    name: \"Users\",\r\n                    value: \"\",\r\n                    mode: \"tag\",\r\n                    placeholder: \"\",\r\n                     validationRules: {\r\n                        \"required\": true\r\n                    },\r\n                    config: {\r\n                        options: []\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"SelectField\",\r\n                    label: this.$t('Status'),\r\n                    name: \"Status\",\r\n                    value: \"\",\r\n                    placeholder: \"\",\r\n                    validationRules: {\r\n                        \"required\": true\r\n                    },\r\n                    config: {\r\n                        options: [{\r\n                            value: \"1001\",\r\n                            name: 'Active'\r\n                        }, {\r\n                            value: \"1002\",\r\n                            name: 'InActive'\r\n                        }]\r\n                    },\r\n                }\r\n                ]\r\n            },\r\n            {\r\n                Data: [{\r\n                    astype: \"TextAreaField\",\r\n                    label: this.$t('GroupDetails'),\r\n                    name: \"GroupDescription\",\r\n                    value: \"\",\r\n                    placeholder: \"\",\r\n                    validationRules: \"\",\r\n                    config: {\r\n                        rows: 5\r\n                    }\r\n                }]\r\n            }\r\n            ],\r\n            buttons: [{\r\n                type: \"submit\",\r\n                class: \"btn btn-success\",\r\n                text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n            },\r\n\r\n            {\r\n                type: \"button\",\r\n                class: \"btn btn-danger\",\r\n                text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                onClick: this.onCancel\r\n            }\r\n            ],\r\n        }\r\n    },\r\n    created: async function () {\r\n        await this.GetDeviceList();\r\n        if (this.$route.params.id != null) {\r\n            await this.GetNotficationUsers();\r\n            await this.ManageItemsGroup();\r\n        }\r\n        this.DataLoaded = 1;\r\n    },\r\n    methods: {\r\n        GetDeviceList: async function () {\r\n            await DataService.GetDeviceList().then(response => {\r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[1].config.options.push({\r\n                        name: `${item.name}`,\r\n                        value: `${item.value}`\r\n                    })\r\n                })\r\n            });\r\n        },\r\n        GetNotficationUsers: async function () {\r\n            var url = `moduleName=ASSETASSIGNMENT`;\r\n            await DataService.GetNotficationUsers(url).then(response => {\r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[2].config.options.push({\r\n                        name: `${item.NAME}(${item.DEPARTMENT_NAME})`,\r\n                        value: `${item.USER_ID}`\r\n                    })\r\n                })\r\n                console.log((this.FormSchema)[0].Data[2].config.options);\r\n            });\r\n        },\r\n        onSubmit: function (formfields) {\r\n            debugger;\r\n\r\n            var vm = this;\r\n            var jsonobj = {\r\n                GroupId: vm.group_id,\r\n                GroupName: formfields.GroupName,\r\n                LocationId: 0,\r\n                ReaderId: formfields.Reader,\r\n                UserIds: Array.prototype.map.call(formfields.Users, function (item) {\r\n                    return item.value;\r\n                }).join(\",\"),\r\n                GroupDetails: formfields.GroupDescription,\r\n                StatusId: formfields.Status\r\n            }\r\n            var poststring = JSON.stringify(jsonobj);\r\n            DataService.AddGroup(poststring).then(response => {\r\n                debugger;\r\n\r\n                if (response.data == 'insert') {\r\n                    vm.ShowAlert(vm.$t('AddedSuccess', [vm.$t('Group_Item')]), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.onCancel();\r\n                }\r\n                else if (response.data == 'update') {\r\n                    vm.ShowAlert(vm.$t('UpdatedSuccess', [vm.$t('Group_Item')]), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.onCancel();\r\n                }\r\n\r\n                else if (response.data == 'duplicate') {\r\n\r\n                    vm.ShowAlert(vm.$t(\"Duplicate Group name\"), \"warning\", true, vm.$t('Alert'));\r\n\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t(\"Something went Wrong\"), \"failure\", true, vm.$t('Alert'));\r\n                }\r\n            });\r\n        },\r\n        onCancel: function () {\r\n            this.$router.push({\r\n                name: 'GroupList'\r\n            });\r\n        },\r\n        ManageItemsGroup: async function () {\r\n            var vm = this;\r\n            var url = `id=${this.$route.params.id}`\r\n            await DataService.GetItemsGroupById(url).then(response => {\r\n                if (response.data.length > 0) {\r\n                    (this.FormSchema)[0].Data[0].value = response.data[0].group_name;\r\n                    (this.FormSchema)[0].Data[1].value = response.data[0].reader_id;\r\n                    vm.group_id = response.data[0].group_id;\r\n                    vm.UserList = response.data[0].user_ids.split(\",\");\r\n                    vm.UserList.forEach((item) => {\r\n                        var obj = (this.FormSchema)[0].Data[2].config.options.find(x => x.value == item);\r\n                        vm.TagsSelectedArray.push({\r\n                            label: obj.name,\r\n                            value: obj.value\r\n                        })\r\n                    });\r\n                    (this.FormSchema)[0].Data[2].value = vm.TagsSelectedArray;\r\n                    (this.FormSchema)[0].Data[3].value = response.data[0].status_id;\r\n                    (this.FormSchema)[1].Data[0].value = response.data[0].group_details;\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=331c7554&lang=en&\"\nimport script from \"./Manage.vue?vue&type=script&lang=js&\"\nexport * from \"./Manage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}