{"version":3,"sources":["webpack:///./src/views/Asset/AssetGroupingList.vue","webpack:///./src/views/Asset/AssetGroupingListSchema.js","webpack:///src/views/Asset/AssetGroupingList.vue","webpack:///./src/views/Asset/AssetGroupingList.vue?2081","webpack:///./src/views/Asset/AssetGroupingList.vue?63b9"],"names":["render","_vm","this","_c","_self","attrs","isLoading","PageSize","$t","AssetGroupingList","Headers","widgets","FetchData","listheaderbuttons","TotalRecords","leftSearchFields","renderActions","LegendArray","sortExp","sortBy","on","leftCommonSearch","pagerMethod","commonHeaderButtonClick","actionButtonClick","sortdata","scopedSlots","_u","key","fn","data","column","COLUMN_NAME","staticClass","directives","name","rawName","value","row","StatusId","expression","class","$event","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","$set","multiple","DrpdownUpdataStatus","ParentRelatedInfoId","_v","_e","Action","_s","$options","filters","formatDateTimeMMDDYYY","CreatedAt","staticRenderFns","buttons","title","iconClass","callbackfunction","additionalClass","isdisabled","isvisible","checkPrivilege","id","isEnabledOnSelectedRow","leftsearchSchema","fieldName","fieldType","fieldIcon","paramName","fieldSearchConditionName","isSearch","listOptions","async","bindleftCommonSearchdropdown","instance","modulename","filtername","vm","LocationData","params","DataService","GetLocationByCompanyId","then","response","json","MakeNormalArray","$","each","proxy","index","item","groupId","PARENT_LOCATION_ID","chkGroup","grep","element","length","returnedData","LOCATION_NAME","objGroup","label","icon","children","COMPANY_LOCATION_ID","push","console","log","Schema","listActions","pageNum","search","PageNumber","isPaged","PageSizeOption","StatusListForListing","DetalisData","settings","isInSlot","noRecord","CurrentPage","TotalPages","locationId","locationfrom","searchcondition","CreateAt","ths","GetPageSize","privilegeParams","methods","GetConfigurationValueForCompanyByKey","parseInt","actionParameter","vueObj","CheckPrivilege","ShowAlert","error","columnDataFormatter","result","Params","searchCondition","GetAssetGrouping","TotalRecord","Math","ceil","searchConditionJson","currentPageMethod","GetPageSizeOption","list","defaultPageSize","i","event","AddAssetGroup","UpdateActiveAddGroup","UpdateInActiveAddGroup","DeleteContainer","s","SortDir","attr","StatusID","ID","Id","confirmR","url","UpdateContainerStatus","status","$router","not","UpdateActiveInactiveAddGroup","postJSON","ids","tblname","primarycolname","poststing","JSON","stringify","DeleteItemsGroup","component"],"mappings":"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","file":"js/chunk-2d0b93eb.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('tg-list',{attrs:{\"IsShowAction\":false,\"listType\":['List'],\"ModuleName\":\"Asset\",\"SubModuleCode\":\"Asset\",\"IdentityColumn\":\"ParentRelatedInfoId\",\"PageSize\":_vm.PageSize,\"HeaderText\":_vm.$t('AssetsGroup'),\"ListData\":_vm.AssetGroupingList,\"HeaderData\":_vm.Headers,\"widgets\":_vm.widgets,\"showCheckBox\":true,\"callbackfunction\":_vm.FetchData,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"SearchFields\":_vm.leftSearchFields,\"RenderRowActionMethod\":_vm.renderActions,\"ListDataCallBackFunction\":_vm.FetchData,\"LegendArray\":_vm.LegendArray,\"SortExp\":_vm.sortExp,\"SortBy\":_vm.sortBy,\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"ActionButtonClick\":_vm.actionButtonClick,\"SortdataButtonClick\":_vm.sortdata},scopedSlots:_vm._u([{key:\"slotdata\",fn:function({ data }){return [(data.column.COLUMN_NAME == 'Status')?[_c('td',{staticClass:\"text-center single-action\"},[_c('div',{staticClass:\"cstm-drop-btn\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.row.StatusId),expression:\"data.row.StatusId\"}],class:data.row.StatusId == 1001 ? 'ddlupdatestatus w-80 btn-success' : 'ddlupdatestatus w-80 btn-danger',on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(data.row, \"StatusId\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){return _vm.DrpdownUpdataStatus(data.row.StatusId, data.row.ParentRelatedInfoId);}]}},[_c('option',{attrs:{\"value\":\"1001\",\"selected\":\"selected\"}},[_vm._v(\"Active\")]),_c('option',{attrs:{\"value\":\"1002\"}},[_vm._v(\"Inactive\")])])])])]:_vm._e(),(data.column.COLUMN_NAME == 'CreatedAt')?[_c('span',{staticClass:\"text-dark\",attrs:{\"title\":data.row.Action}},[_c('label',[_vm._v(_vm._s(_vm.$options.filters.formatDateTimeMMDDYYY(data.row.CreatedAt)))])])]:_vm._e()]}}])})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import DataService  from '../../service/DataService'\r\nlet buttons =\r\n[\r\n    {\r\n        title: 'Add',\r\n        iconClass: 'fa fa-plus',\r\n        callbackfunction: 'AddGroup',\r\n        additionalClass: '',\r\n        isdisabled: false,\r\n        isvisible: true,\r\n        checkPrivilege: false,\r\n        id:\"addProductcontainer\"\r\n        \r\n    },\r\n    {\r\n        title: 'Active',\r\n        iconClass: 'fa fa-check',\r\n        callbackfunction: 'UpdateActiveAddGroup',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: false,\r\n        isEnabledOnSelectedRow: true ,\r\n        id:'activeProduct'        \r\n        \r\n    },\r\n    {\r\n        title: 'Inactive',\r\n        iconClass: 'fa fa-close',\r\n        callbackfunction: 'UpdateInActiveAddGroup',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: false,\r\n        isEnabledOnSelectedRow: true,\r\n        id:'InactiveProduct'         \r\n        \r\n    },\r\n    {\r\n        title: 'Delete',\r\n        id: 'DeleteMultiple',\r\n        iconClass: 'fa fa-trash',\r\n        callbackfunction: 'DeleteContainer',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        id:'DeleteMultiple',\r\n        checkPrivilege: false,\r\n        isEnabledOnSelectedRow: true     \r\n        \r\n    },\r\n     \r\n];\r\nlet leftsearchSchema = [\r\n    {\r\n        fieldName: \"Products Container List\",\r\n        fieldType: \"text\",\r\n        fieldIcon: \"fa fa-list\",\r\n        paramName:\"search\",\r\n        fieldSearchConditionName: [''],\r\n        isSearch: false,\r\n        value: \"\",\r\n        listOptions: []\r\n    },\r\n  \r\n]\r\n \r\nasync function bindleftCommonSearchdropdown(instance,modulename, filtername) {\r\n   // debugger\r\n    var vm = instance;\r\n    var LocationData=[];\r\n   \r\n    if (filtername == \"Location\" ||filtername == \"Locationto\") {\r\n       // debugger;\r\n        var params  = `reqForm=`\r\n        await  DataService.GetLocationByCompanyId(params)\r\n         .then(function (response) {\r\n            var json =vm.MakeNormalArray(response.data);\r\n            json=json.data;\r\n            $.each(json, $.proxy(function (index, item) {\r\n                var  groupId = item.PARENT_LOCATION_ID;\r\n                                    var chkGroup = $.grep(LocationData, function (element, index) {\r\n                                        return element.id == groupId;\r\n                                    });\r\n                                    if (chkGroup.length == 0) {\r\n                                    var returnedData = $.grep(json, function (element, index) {\r\n                                            return element.PARENT_LOCATION_ID == groupId;\r\n                                        });\r\n                                        if (returnedData.length > 0 && returnedData[0].LOCATION_NAME) {                                         \r\n                                            var objGroup = {\r\n                                                id: groupId,\r\n                                                label: returnedData[0].LOCATION_NAME,\r\n                                                icon:'fa fa-map-marker',\r\n                                                children: returnedData.map((item) => {                                              \r\n                                            return {id:item.COMPANY_LOCATION_ID,label:item.LOCATION_NAME,icon:'fa fa-map-marker'}\r\n                                            })\r\n                                            };\r\n                                            LocationData.push(objGroup);\r\n                                        }\r\n                                      }\r\n                })) \r\n                console.log(LocationData);               \r\n                vm.leftSearchFields[0].listOptions =LocationData;\r\n               \r\n         });\r\n     }\r\n\r\n     \r\n\r\n     \r\n}\r\nexport default { buttons,leftsearchSchema,bindleftCommonSearchdropdown,\r\n\r\n};","<template>\r\n    <section>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <tg-list :IsShowAction=\"false\" :listType=\"['List']\" ModuleName=\"Asset\" SubModuleCode=\"Asset\"\r\n            IdentityColumn=\"ParentRelatedInfoId\" :PageSize=\"PageSize\" :HeaderText=\"$t('AssetsGroup')\"\r\n            :ListData=\"AssetGroupingList\" :HeaderData=\"Headers\" :widgets=\"widgets\" :showCheckBox=\"true\"\r\n            :callbackfunction=\"FetchData\" :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecords\"\r\n            :SearchFields=\"leftSearchFields\" :RenderRowActionMethod=\"renderActions\"\r\n            :ListDataCallBackFunction=\"FetchData\" :LegendArray=\"LegendArray\" :SortExp=\"sortExp\" :SortBy=\"sortBy\"\r\n            v-on:LeftsearchButtonClick=\"leftCommonSearch\" v-on:PagerButtonClick=\"pagerMethod\"\r\n            v-on:HeaderButtonClick=\"commonHeaderButtonClick\" v-on:ActionButtonClick=\"actionButtonClick\"\r\n            v-on:SortdataButtonClick=\"sortdata\" :NorecordfoundText=\"$t('NoRecordfound')\">\r\n\r\n            <template v-slot:slotdata=\"{ data }\">\r\n\r\n                <template v-if=\"data.column.COLUMN_NAME == 'Status'\">\r\n                    <td class=\"text-center single-action\">\r\n                        <div class=\"cstm-drop-btn\">\r\n                            <select v-model=\"data.row.StatusId\"\r\n                                @change=\"DrpdownUpdataStatus(data.row.StatusId, data.row.ParentRelatedInfoId);\"\r\n                                :class=\"data.row.StatusId == 1001 ? 'ddlupdatestatus w-80 btn-success' : 'ddlupdatestatus w-80 btn-danger'\">\r\n                                <option value=\"1001\" selected=\"selected\">Active</option>\r\n                                <option value=\"1002\">Inactive</option>\r\n                            </select>\r\n                        </div>\r\n                    </td>\r\n                </template>\r\n                <template v-if=\"data.column.COLUMN_NAME == 'CreatedAt'\">\r\n                    <span class=\"text-dark\" :title=\"data.row.Action\">\r\n                        <label>{{ $options.filters.formatDateTimeMMDDYYY(data.row.CreatedAt)\r\n                            }}</label>\r\n                    </span>\r\n                </template>\r\n            </template>\r\n        </tg-list>\r\n\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../service/DataService'\r\nimport Schema from '../Asset/AssetGroupingListSchema'\r\n\r\nexport default {\r\n\r\n    data() {\r\n        return {\r\n            listheaderbuttons: Schema.buttons,\r\n            leftSearchFields: Schema.leftsearchSchema,\r\n            listActions: Schema.listActions,\r\n            LegendArray: [],\r\n            widgets: [],\r\n            AssetGroupingList: [],\r\n            pageNum: 1,\r\n            search: \"\",\r\n            PageSize: 10,\r\n            PageNumber: 1,\r\n            isPaged: 1,\r\n            PageSizeOption: null,\r\n            StatusListForListing: [],\r\n            DetalisData: [],\r\n            Headers: [{\r\n                \"COLUMN_NAME\": \"UniqueName\",\r\n                \"DATA_TYPE\": \"text\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": this.$t('Container'),\r\n                \"DISPLAY_ORDER\": 1,\r\n\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"ItemCode\",\r\n                \"DATA_TYPE\": \"text\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": this.$t('ItemCode'),\r\n                \"DISPLAY_ORDER\": 2\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"GroupAssets\",\r\n                \"DATA_TYPE\": \"text\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": this.$t('Items'),\r\n                \"DISPLAY_ORDER\": 3\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"LocationName\",\r\n                \"DATA_TYPE\": \"text\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": this.$t('Location'),\r\n                \"DISPLAY_ORDER\": 4,\r\n\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"CreatedBy\",\r\n                \"DATA_TYPE\": \"text\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": this.$t('CreatedBy'),\r\n                \"DISPLAY_ORDER\": 4,\r\n\r\n\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"CreatedAt\",\r\n                \"DATA_TYPE\": \"text\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": this.$t('CreatedAt'),\r\n                \"DISPLAY_ORDER\": 4,\r\n                settings: {\r\n                    isInSlot: true,\r\n                },\r\n\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"Status\",\r\n                \"DATA_TYPE\": \"text\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": this.$t('Status'),\r\n                \"DISPLAY_ORDER\": 4,\r\n                settings: {\r\n                    isInSlot: true\r\n                }\r\n\r\n            },\r\n            ],\r\n            noRecord: true,\r\n            TotalRecords: 0,\r\n            CurrentPage: 1,\r\n            TotalPages: 0,\r\n            sortBy: \"\",\r\n            sortExp: \"\",\r\n            pageNum: 1,\r\n            locationId: '',\r\n            locationfrom: '',\r\n            searchcondition: '',\r\n            CreateAt: '',\r\n            isLoading: false\r\n\r\n        }\r\n    },\r\n    async created() {\r\n        var ths = this;\r\n        await ths.GetPageSize();\r\n\r\n        ths.privilegeParams = `controller=Asset&action=`;\r\n        Schema.bindleftCommonSearchdropdown(ths, \"Asset\", \"Location\");\r\n        Schema.bindleftCommonSearchdropdown(ths, \"Asset\", \"Locationto\");\r\n        await ths.FetchData();\r\n\r\n    },\r\n    methods: {\r\n        async GetPageSize() {\r\n            var vm = this;\r\n            var params = 'key=DefaultPageSize'\r\n            await DataService.GetConfigurationValueForCompanyByKey(params).then((response) => {\r\n                if (response.data != null) {\r\n                    vm.PageSize = parseInt(response.data);\r\n                }\r\n            });\r\n        },\r\n\r\n        async CheckPrivilege(actionParameter) {\r\n            var vueObj = this;\r\n            try {\r\n                let response = await DataService.CheckPrivilege(vueObj.privilegeParams + actionParameter);\r\n\r\n                if (response.data) {\r\n                    return response.data;\r\n                } else {\r\n                    vueObj.ShowAlert(vueObj.$t('NotAuthorizedSection'), \"failure\", true, \"Alert\");\r\n                    return false; // Indicate not authorized\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error checking privilege:\", error);\r\n                vueObj.ShowAlert(\"Error checking privilege\", \"failure\", true, \"Alert\");\r\n                return false; // Handle error\r\n            }\r\n        },\r\n\r\n\r\n        columnDataFormatter: function (row, column) {\r\n            return row[column.COLUMN_NAME];\r\n        },\r\n\r\n        async FetchData() {\r\n            var vm = this;\r\n            //  vm.isLoading = true;\r\n\r\n            let result = await vm.CheckPrivilege(\"AssetGrouping\");\r\n\r\n            if (result === true) {\r\n                var Params = `&pageSize=${vm.PageSize}&pageNum=${vm.PageNumber}&sortBy=${vm.sortBy}&sortExp=${vm.sortExp}&${vm.searchCondition}`;\r\n                await DataService.GetAssetGrouping(Params).then(response => {\r\n                    if (response.data != null) {\r\n                        // vm.isLoading = false;\r\n                        console.log('resp', response.data)\r\n                        if (response.data.length > 0) {\r\n                            vm.AssetGroupingList = response.data;\r\n                            vm.TotalRecords = response.data[0].TotalRecord;\r\n                            vm.TotalPages = Math.ceil(vm.TotalRecords / vm.PageSize);\r\n                            vm.CurrentPage = vm.PageNumber;\r\n                            vm.noRecord = false;\r\n                            vm.listheaderbuttons[1].isdisabled = true;\r\n                            vm.listheaderbuttons[2].isdisabled = true;\r\n                            vm.listheaderbuttons[3].isdisabled = true;\r\n\r\n\r\n                            // $(\"[id^='chkAll']\").prop(\"checked\", false).removeAttr('checked');\r\n                            // $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                        } else {\r\n                            vm.noRecord = true;\r\n                            vm.isLoading = false;\r\n                            vm.AssetGroupingList = [];\r\n                            vm.TotalRecords = 0\r\n                        }\r\n                    }\r\n                    // setTimeout(function () {\r\n                    //     vm.ResponsiveDataTable('tablelistingdata')\r\n                    // }, 500);\r\n                });\r\n\r\n            }\r\n            else {\r\n                //\r\n            }\r\n        },\r\n        leftCommonSearch: function (value) {\r\n\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchConditionJson;\r\n            } else {\r\n                this.searchCondition = \"\";\r\n            }\r\n            this.FetchData();\r\n        },\r\n\r\n        currentPageMethod: function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            this.FetchData();\r\n        },\r\n        GetPageSizeOption: function () {\r\n            var list = [];\r\n            var defaultPageSize = 10;\r\n            for (var i = defaultPageSize; i < defaultPageSize + 95; i += 5) {\r\n                list.push(i);\r\n            }\r\n            this.PageSizeOption = list;\r\n        },\r\n        pagerMethod: function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            this.FetchData();\r\n        },\r\n\r\n        commonHeaderButtonClick(event) {\r\n            switch (event.callbackfunction) {\r\n                case \"AddGroup\":\r\n                    this.AddAssetGroup();\r\n                    break;\r\n                case \"UpdateActiveAddGroup\":\r\n                    this.UpdateActiveAddGroup();\r\n                    break;\r\n                case \"UpdateInActiveAddGroup\":\r\n                    this.UpdateInActiveAddGroup();\r\n                    break;\r\n                case \"DeleteContainer\":\r\n                    this.DeleteContainer();\r\n                    break;\r\n            }\r\n        },\r\n        sortdata: function (s) {\r\n            var SortDir = \"sort tb_headerSortDown\";\r\n            this.sortBy = s;\r\n            if (s === this.sortBy) {\r\n                if (this.sortBy == \"\") {\r\n                    this.sortBy = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                } else if (this.sortExp == \"ASC\") {\r\n                    this.sortExp = \"DESC\";\r\n                    SortDir = \"sort tb_headerSortUp\";\r\n                } else {\r\n                    this.sortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n            }\r\n\r\n            this.FetchData();\r\n            $(\"#\" + s + '  span:first-child').attr(\"class\", SortDir);\r\n        },\r\n\r\n        async DrpdownUpdataStatus(StatusID, ID) {\r\n\r\n            let result = await vm.CheckPrivilege(\"UpdateContainerStatus\");\r\n\r\n            if (result === true) {\r\n\r\n                var vm = this;\r\n                var StatusId = StatusID\r\n                var Id = ID;\r\n                vm.confirmR(vm.$t('Are you sure to update this record?'), true, false, function (result) {\r\n                    var url = `id=${Id}&statusId=${StatusId}`\r\n                    DataService.UpdateContainerStatus(url).then(\r\n                        response => {\r\n                            if (response.data.status == 'success') {\r\n                                vm.ShowAlert(vm.$t('StatusUpdated', \"Success\", true, vm.$t('Alert')));\r\n                                vm.FetchData();\r\n                            }\r\n                        }\r\n                    )\r\n                })\r\n\r\n\r\n                vm.FetchData();\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        async AddAssetGroup() {\r\n\r\n            var vm = this;\r\n            let result = await vm.CheckPrivilege(\"AddAssetGrouping\");\r\n            if (result === true) {\r\n                vm.$router.push({ name: 'AddProductContainer' });\r\n            } else {\r\n                console.log(\"Not authorized to add asset group.\");\r\n            }\r\n        },\r\n\r\n\r\n        async UpdateActiveAddGroup() {\r\n\r\n            var vm = this;\r\n\r\n            let result = await vm.CheckPrivilege(\"UpdateContainerStatus\");\r\n\r\n            if (result === true) {\r\n                var val = \"\";\r\n                $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                    if (val.length > 0)\r\n                        val += ',';\r\n                    val += $(this).val();\r\n                });\r\n\r\n                if (val.length > 0) {\r\n                    vm.confirmR(vm.$t('Are you sure, you want to mark the selected status from Inactive to Active?'), true, false, function (result) {\r\n                        var url = `id=${val}&statusId=1001`\r\n                        DataService.UpdateActiveInactiveAddGroup(url).then(response => {\r\n                            if (response.data) {\r\n                                // $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                                vm.ShowAlert(vm.$t('StatusUpdated', \"Success\", true, vm.$t('Alert')));\r\n                                vm.FetchData();\r\n\r\n                            }\r\n                            else {\r\n                                vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Group_Container')]), \"failure\", true, vm.$t('Alert'));\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n            }\r\n            else {\r\n                //\r\n            }\r\n\r\n\r\n        },\r\n\r\n        async UpdateInActiveAddGroup() {\r\n            var vm = this;\r\n\r\n            let result = await vm.CheckPrivilege(\"UpdateContainerStatus\");\r\n\r\n            if (result === true) {\r\n\r\n                var val = \"\";\r\n                $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                    if (val.length > 0)\r\n                        val += ',';\r\n                    val += $(this).val();\r\n                });\r\n\r\n                if (val.length > 0) {\r\n                    vm.confirmR(vm.$t('Are you sure, you want to mark the selected status from Inactive to Active?'), true, false, function (result) {\r\n                        var url = `id=${val}&statusId=1002`\r\n                        DataService.UpdateActiveInactiveAddGroup(url).then(response => {\r\n                            if (response.data) {\r\n                                // $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                                vm.ShowAlert(vm.$t('StatusUpdated', \"Success\", true, vm.$t('Alert')));\r\n                                vm.FetchData();\r\n                            }\r\n                            else {\r\n                                vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Group_Container')]), \"failure\", true, vm.$t('Alert'));\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n            }\r\n            else {\r\n                //\r\n            }\r\n\r\n\r\n        },\r\n\r\n\r\n        actionButtonClick() {\r\n\r\n        },\r\n\r\n\r\n        async DeleteContainer() {\r\n\r\n            var vm = this;\r\n\r\n            let result = await vm.CheckPrivilege(\"DeleteContainer\");\r\n\r\n            if (result === true) {\r\n\r\n                var val = \"\";\r\n                $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                    if (val.length > 0)\r\n                        val += ',';\r\n                    val += $(this).val();\r\n                });\r\n\r\n                if (val.length > 0) {\r\n                    vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Group_Container\")), function () {\r\n                        var postJSON = {\r\n                            ids: val,\r\n                            tblname: \"TALYGEN_ASSET_GROUP\",\r\n                            primarycolname: \"parent_asset_related_info_id\"\r\n                        };\r\n                        vm.isLoading = true;\r\n                        var poststing = JSON.stringify(postJSON);\r\n                        DataService.DeleteItemsGroup(poststing).then(response => {\r\n                            vm.isLoading = false;\r\n                            if (response.data) {\r\n\r\n                                vm.AssetGroupingList = [];\r\n                                vm.FetchData();\r\n                                // $(\"[id^='chkAll']\").prop(\"checked\", false).removeAttr('checked');\r\n                                // $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                                //vm.listheaderbuttons[3].isdisabled = true;\r\n                                vm.ShowAlert(vm.$t('DeletedSuccess', [vm.$t('Group_Container')]), \"Success\", true, vm.$t('Alert'));\r\n\r\n\r\n                            }\r\n                            else {\r\n                                vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Group_Container')]), \"failure\", true, vm.$t('Alert'));\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n            }\r\n            else {\r\n                //\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AssetGroupingList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AssetGroupingList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AssetGroupingList.vue?vue&type=template&id=1682e010&\"\nimport script from \"./AssetGroupingList.vue?vue&type=script&lang=js&\"\nexport * from \"./AssetGroupingList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}