{"version":3,"sources":["webpack:///./src/views/ProductAssignment/Manage.vue?db51","webpack:///./src/views/ProductAssignment/Manage.vue","webpack:///src/views/ProductAssignment/Manage.vue","webpack:///./src/views/ProductAssignment/Manage.vue?948b","webpack:///./src/views/ProductAssignment/Manage.vue?3c2b","webpack:///./src/views/ProductAssignment/Manage.vue?339f","webpack:///./src/views/ProductAssignment/Manage.vue?51f9"],"names":["___CSS_LOADER_API_IMPORT___","exports","push","module","i","render","_vm","this","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","on","BackTolist","ref","buttons","FormSchema","scopedSlots","_u","key","fn","data","popover","DateofAssignment","inputValue","togglePopover","_g","class","domProps","$event","inputEvents","model","value","callback","$$v","expression","DateofAssignmentTill","DataLoaded","GetParentDetails","GetDetails","AssestArrayData","_e","SubmitData","onCancel","staticRenderFns","components","SearchAsset","UsersData","Users","Remarks","Groupname","Users1","Users2","visibility","UserId","SelfCheckout","RequestFrom","isUsedFor","selectedOption","checked","unchecked","txtAssignUserType","disabled","dataArray","pendingItem","checkAvailability","dept_ids","layoutType","Data","astype","label","name","mode","placeholder","config","options","onChange","GetCompanyUsers","onRemove","removeRecord","validationRules","AssignUserType","format","minDate","Date","rows","Timezone","departmentData","TagsSelectedArray","created","GetDepartment","GetNotificationUser","GetCompanyClients","GetUserInfo","ID","currentDate","setDate","getDate","TimeZone","$route","params","reqForm","items","USER_ID","obj","find","x","department_id","DEPARTMENT_ID","department_name","FROM_TIME","TO_TIME","methods","event","field","target","getAttribute","attributes","id","$router","vm","url","DataService","then","response","forEach","item","GetNotficationUsers","NAME","department_ids","length","currentTarget","textContent","USERNAME","$refs","FieldUpdate","UpdateKeyValue","meta","toString","user_id","userid","DepartmentID","txtDepartment","UserID","GetNotificationUserID","FromDate","TillDate","pendingItems","checkAvailabilities","sessionStorage","setItem","JSON","stringify","_vm$$children$","DateAssignment","parse","DateTill","ShowAlert","RequstionList","$children","GetRequstionList","ProductAssignmentForm","fields","Departments","failed","required","validate","result","errors","formData","FormData","files","uniquenames","issueToName","AssetUniqueName","parseInt","hasEmptyRequestQuantity","RequestQuantity","isNaN","undefined","itm","ChildUniqueId","RequisitionBatchId","ChildUniqueName","mainObj","DepartmentId","AssignedFrom","AssignedTill","AssignedFromDateTime","$options","filters","formatDateTimeYYMMDD","AssignedTillDateTime","StartTime","EndTime","Comment","NotificationUsers","IsRequestFromRequisition","IssueToName","RFID","GroupRequistionAssestInfostring","itemNames","map","join","append","SaveGroupAssign","status","existIds","query","formatTimeToCustomFormat","inputTime","inputLuxonDateTime","DateTime","fromJSDate","zone","targetTimeZone","outputLuxonDateTime","setZone","formattedDateTime","toFormat","component","content","__esModule","default","locals","add"],"mappings":"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","file":"js/chunk-30c845e8.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".dynamic-multiselect .multiselect__tags{padding:10px 40px 4px 8px!important}.dynamic-multiselect .multiselect__placeholder{margin-bottom:5px;padding-top:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ASSET_ASSIGN_Desc')))]),_c('span',{staticClass:\"p-actions float-right\"},[_c('a',{staticClass:\"p-action-btn text-white\",attrs:{\"title\":\"BacktoList\"},on:{\"click\":_vm.BackTolist}},[_c('em',{staticClass:\"fa fa-angle-double-left pr-2\"}),_c('br'),_c('span',[_vm._v(_vm._s(_vm.$t('BacktoList')))])])])])])])]),_c('div',{staticClass:\"border p-3\"},[_c('div',{staticClass:\"col-md-12 p-0\",attrs:{\"id\":\"dynmicForm\"}},[_c('Form',{ref:\"ProductAssignmentForm\"},[_c('dynamic-form',{ref:\"FieldUpdate\",attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},scopedSlots:_vm._u([{key:\"tgslot-DateofAssignment\",fn:function({ data }){return [_c('div',{staticClass:\"input-group\"},[_c('v-date-picker',{staticClass:\"timedate input-group\",attrs:{\"popover\":_vm.popover,\"name\":_vm.DateofAssignment,\"mode\":\"dateTime\",\"minute-increment\":5},scopedSlots:_vm._u([{key:\"default\",fn:function({ inputValue, togglePopover }){return [_c('input',_vm._g({class:{'form-control' : true},attrs:{\"placeholder\":\"M/D/YYYY h:mm A\"},domProps:{\"value\":inputValue},on:{\"click\":function($event){return togglePopover()}}},_vm.inputEvents)),_c('div',{staticClass:\"input-group-append\",on:{\"click\":function($event){return togglePopover()}}},[_c('span',{staticClass:\"input-group-text\"},[_c('em',{staticClass:\"fa fa-calendar\"})])])]}}],null,true),model:{value:(_vm.DateofAssignment),callback:function ($$v) {_vm.DateofAssignment=$$v},expression:\"DateofAssignment\"}})],1)]}},{key:\"tgslot-DateofAssignmentTill\",fn:function({ data }){return [_c('div',{staticClass:\"input-group\"},[_c('v-date-picker',{staticClass:\"timedate input-group\",attrs:{\"popover\":_vm.popover,\"name\":_vm.DateofAssignmentTill,\"min-date\":_vm.DateofAssignment,\"mode\":\"dateTime\",\"minute-increment\":5},scopedSlots:_vm._u([{key:\"default\",fn:function({ inputValue, togglePopover }){return [_c('input',_vm._g({class:{ 'form-control': true },attrs:{\"placeholder\":\"M/D/YYYY h:mm A\"},domProps:{\"value\":inputValue},on:{\"click\":function($event){return togglePopover()}}},_vm.inputEvents)),_c('div',{staticClass:\"input-group-append\",on:{\"click\":function($event){return togglePopover()}}},[_c('span',{staticClass:\"input-group-text\"},[_c('em',{staticClass:\"fa fa-calendar\"})])])]}}],null,true),model:{value:(_vm.DateofAssignmentTill),callback:function ($$v) {_vm.DateofAssignmentTill=$$v},expression:\"DateofAssignmentTill\"}})],1)]}}])})],1),(_vm.DataLoaded)?_c('SearchAsset',{attrs:{\"GetParentDetails\":_vm.GetParentDetails},on:{\"GetDetailsofParent\":_vm.GetDetails,\"AssestArrayData\":_vm.AssestArrayData}}):_vm._e(),_c('div',{staticClass:\"row flex-row-reverse py-3\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success formbtn text-white mr-1\",attrs:{\"href\":\"javascript:void(0);\",\"title\":_vm.$t('Save')},on:{\"click\":_vm.SubmitData}},[_c('i',{staticClass:\"fa fa-save pr-2\"}),_c('span',[_vm._v(_vm._s(_vm.$t('Save')))])]),_c('a',{staticClass:\"btn btn-danger formbtn text-white\",attrs:{\"href\":\"javascript:;\",\"title\":_vm.$t('Cancel')},on:{\"click\":function($event){return _vm.onCancel()}}},[_c('i',{staticClass:\"fa fa-close pr-2\"}),_c('span',[_vm._v(_vm._s(_vm.$t('Cancel')))])])]),_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"py-2\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])])])],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"en\">\r\n<section class=\"main-content\">\r\n    <loader :is-visible=\"isLoading\"></loader>\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 padding-t_8\">\r\n                <div class=\"theme-primary partition-full\">\r\n                    <span class=\"p-name text-white\">{{$t('ASSET_ASSIGN_Desc')}}</span>\r\n                    <span class=\"p-actions float-right\">\r\n                        <a title=\"BacktoList\" class=\"p-action-btn text-white\" @click=\"BackTolist\"><em class=\"fa fa-angle-double-left pr-2\"></em><br>\r\n                            <span>{{$t('BacktoList')}}</span>\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"border p-3\">\r\n        <div class=\"col-md-12 p-0\" id=\"dynmicForm\">\r\n            <Form ref=\"ProductAssignmentForm\">\r\n                <dynamic-form lang=\"en\" ref=\"FieldUpdate\" :buttons=\"buttons\" :schema=\"FormSchema\">\r\n                    <template v-slot:tgslot-DateofAssignment=\"{ data }\">\r\n                        <div class=\"input-group\">\r\n                            <v-date-picker :popover=\"popover\" v-bind:name=\"DateofAssignment\" mode=\"dateTime\" :minute-increment=\"5\" class=\"timedate  input-group\" v-model=\"DateofAssignment\">\r\n                                <template v-slot=\"{ inputValue, togglePopover }\">\r\n                                    <input placeholder=\"M/D/YYYY h:mm A\" @click=\"togglePopover()\" v-bind:class=\"{'form-control' : true}\" :value=\"inputValue\" v-on=\"inputEvents\" />\r\n                                    <div @click=\"togglePopover()\" class=\"input-group-append\"><span class=\"input-group-text\"><em class=\"fa fa-calendar\"></em></span></div>\r\n                                </template>\r\n                            </v-date-picker>\r\n                        </div>\r\n                    </template>\r\n                    <template v-slot:tgslot-DateofAssignmentTill=\"{ data }\">\r\n                        <div class=\"input-group\">\r\n                            <v-date-picker :popover=\"popover\" v-bind:name=\"DateofAssignmentTill\" :min-date=\"DateofAssignment\" mode=\"dateTime\" :minute-increment=\"5\" class=\"timedate  input-group\" v-model=\"DateofAssignmentTill\">\r\n                                <template v-slot=\"{ inputValue, togglePopover }\">\r\n                                    <input placeholder=\"M/D/YYYY h:mm A\" @click=\"togglePopover()\" v-bind:class=\"{ 'form-control': true }\" :value=\"inputValue\" v-on=\"inputEvents\" />\r\n                                    <div @click=\"togglePopover()\" class=\"input-group-append\"><span class=\"input-group-text\"><em class=\"fa fa-calendar\"></em></span></div>\r\n                                </template>\r\n                            </v-date-picker>\r\n                        </div>\r\n                    </template>\r\n                </dynamic-form>\r\n\r\n            </Form>\r\n            <SearchAsset v-if=\"DataLoaded\" :GetParentDetails=\"GetParentDetails\" @GetDetailsofParent=\"GetDetails\" @AssestArrayData=\"AssestArrayData\"></SearchAsset>\r\n            <div class=\"row flex-row-reverse py-3\">\r\n                <div class=\"col-lg-6 text-right\">\r\n                    <a href=\"javascript:void(0);\" v-on:click=\"SubmitData\" class=\"btn btn-success formbtn text-white mr-1\" :title=\"$t('Save')\"><i class=\"fa fa-save pr-2\"></i>\r\n                        <span>{{$t('Save')}}</span></a>\r\n                    <a href=\"javascript:;\" @click=\"onCancel()\" :title=\"$t('Cancel')\" class=\"btn btn-danger formbtn text-white\"><i class=\"fa fa-close pr-2\"></i><span>{{$t('Cancel')}}</span></a>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                    <div class=\"py-2\">\r\n                        <small class=\"text-danger\">{{$t('MandatoryString')}}</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nimport SearchAsset from '../../components/Modal/SearchAsset.vue'\r\nimport {\r\n    DateTime\r\n} from 'luxon';\r\n\r\nexport default {\r\n    components: {\r\n        SearchAsset\r\n    },\r\n    data() {\r\n        return {\r\n            DataLoaded: 0,\r\n            isLoading: false,\r\n            UsersData: [],\r\n            DateofAssignment: '',\r\n            Users: '',\r\n            Remarks: '',\r\n            DateofAssignmentTill: '',\r\n            Groupname: '',\r\n            Users1: '',\r\n            Users2: '',\r\n            popover: {\r\n                visibility: 'click'\r\n            },\r\n            UserId: null,\r\n            GetParentDetails: null,\r\n            SelfCheckout: null,\r\n            RequestFrom: '',\r\n            isUsedFor: '',\r\n            selectedOption: '',\r\n            checked: true,\r\n            unchecked: false,\r\n            txtAssignUserType: 'User',\r\n            disabled: false,\r\n            dataArray: [],\r\n            buttons: [],\r\n            pendingItem: '',\r\n            checkAvailability: '',\r\n            dept_ids: '',\r\n            FormSchema: [{\r\n                    layoutType: \"four\",\r\n                    Data: [{\r\n                            astype: \"MultiSelectField\",\r\n                            label: this.$t('Departments'),\r\n                            name: \"Departments\",\r\n                            mode: \"tag\",\r\n                            value: \"\",\r\n                            placeholder: \"Departments\",\r\n                            disabled: false,\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.GetCompanyUsers,\r\n                                onRemove: this.removeRecord,\r\n                            },\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('AssignTo'),\r\n                            name: \"AssignTo\",\r\n                            value: \"User\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{\r\n                                    value: \"User\",\r\n                                    name: \"User\"\r\n                                }, {\r\n                                    value: \"Client\",\r\n                                    name: \"Client\"\r\n                                }],\r\n                                onChange: this.AssignUserType\r\n                            },\r\n                            validationRules: {\r\n                                \"required\": true\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('SelectUser'),\r\n                            name: \"User\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": true\r\n                            },\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.GetDetails\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('ExistingClient'),\r\n                            name: \"Client\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            validationRules: {\r\n                                \"required\": true\r\n                            },\r\n                            config: {\r\n                                options: []\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('NotificationUser'),\r\n                            name: \"NotificationUser\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"slotField\",\r\n                            label: this.$t('DateofAssignmentt'),\r\n                            name: \"DateofAssignment\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            validationRules: \"required\",\r\n                            config: {\r\n                                format: \"MM/DD/YYYY HH:MM A\",\r\n                                minDate: (new Date())\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"slotField\",\r\n                            label: this.$t('DateofAssignmentTilll'),\r\n                            name: \"DateofAssignmentTill\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            validationRules: \"required\",\r\n                            config: {\r\n                                format: \"MM/DD/YYYY HH:MM A\",\r\n                                minDate: (new Date())\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    Data: [{\r\n                        astype: \"TextAreaField\",\r\n                        label: this.$t('Remarks'),\r\n                        name: \"Remarks\",\r\n                        value: \"\",\r\n                        placeholder: \"\",\r\n                        validationRules: \"\",\r\n                        config: {\r\n                            rows: 5\r\n                        }\r\n                    }]\r\n                }\r\n            ],\r\n            Timezone: '',\r\n            departmentData: [],\r\n            TagsSelectedArray: []\r\n        }\r\n    },\r\n    created: async function () {\r\n        await this.GetDepartment();\r\n        await this.GetNotificationUser();\r\n        await this.GetCompanyUsers();\r\n        await this.GetCompanyClients();\r\n        this.UserId = this.GetUserInfo.ID;\r\n        this.DataLoaded = 1;\r\n        const currentDate = new Date();\r\n        this.DateofAssignment = new Date();\r\n        currentDate.setDate(currentDate.getDate() + 7);\r\n        this.DateofAssignmentTill = currentDate;\r\n        this.Timezone = this.GetUserInfo.TimeZone;\r\n\r\n        if (this.$route.params.reqForm == 'myitems') {\r\n            (this.FormSchema)[0].Data[2].value = this.UserId;\r\n        } else if (this.$route.params.reqForm == 'pendingRequest') {\r\n            //debugger\r\n            this.pendingItem = this.$route.params.items;\r\n            if (this.pendingItem != null && this.pendingItem != '' && this.pendingItem != 'undefined') {\r\n                (this.FormSchema)[0].Data[2].value = this.pendingItem.USER_ID;\r\n\r\n                //(this.FormSchema)[0].Data[0].value = this.pendingItem.DEPARTMENT_ID;\r\n\r\n                let obj = this.departmentData.find(x => x.department_id == this.pendingItem.DEPARTMENT_ID);\r\n\r\n                this.TagsSelectedArray.push({\r\n                    label: obj.department_name,\r\n                    value: obj.department_id\r\n                })\r\n\r\n                this.FormSchema[0].Data[0].value = this.TagsSelectedArray;\r\n\r\n                this.DateofAssignment = this.pendingItem.FROM_TIME;\r\n                this.DateofAssignmentTill = this.pendingItem.TO_TIME;\r\n            }\r\n        } else if (this.$route.params.reqForm == 'checkAssetAvailability') {\r\n            this.checkAvailability = this.$route.params.items;\r\n            if (this.checkAvailability != null && this.checkAvailability != '' && this.checkAvailability != 'undefined') {\r\n                //debugger;\r\n                // this.DateofAssignment=this.checkAvailability.FROM_TIME;\r\n                // this.DateofAssignmentTill=this.checkAvailability.TO_TIME;\r\n            }\r\n        }\r\n\r\n    },\r\n    methods: {\r\n        AssignUserType: async function (event, field) {\r\n            field.value = event.target.getAttribute('data-value');\r\n            if (event.target.attributes.id.value == 'AssignTo_1') {\r\n                (this.FormSchema)[0].Data[2].visibility = false;\r\n                (this.FormSchema)[0].Data[3].visibility = true;\r\n                (this.FormSchema)[0].Data[0].disabled = true;\r\n                // vm.$refs.ProductAssignmentForm.fields.Departments.failed=false;\r\n                //(vm.FormSchema)[0].Data[0].validationRules.required=false;        \r\n            } else {\r\n                (this.FormSchema)[0].Data[2].visibility = true;\r\n                (this.FormSchema)[0].Data[3].visibility = false;\r\n                (this.FormSchema)[0].Data[0].disabled = false;\r\n                //vm.$refs.ProductAssignmentForm.fields.Departments.failed=true;\r\n                //(vm.FormSchema)[0].Data[0].validationRules.required=true;\r\n            }\r\n        },\r\n        BackTolist: function () {\r\n            this.$router.push({\r\n                name: 'ProductAssignment'\r\n            });\r\n        },\r\n        onCancel: function () {\r\n            var vm = this;\r\n            if (vm.$route.params.reqForm == 'pendingRequest') {\r\n                vm.$router.push({\r\n                    name: 'PendingRequestList'\r\n                });\r\n            } else {\r\n                vm.$router.push({\r\n                    name: 'ProductAssignment'\r\n                });\r\n            }\r\n\r\n        },\r\n        GetDepartment: async function () {\r\n            var vm = this;\r\n            let url = `includeInactiveStatus=true&isTicketHandler=false`;\r\n            await DataService.GetDepartment(url).then(response => {\r\n                vm.departmentData = response.data;\r\n                vm.departmentData.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[0].config.options.push({\r\n                        name: `${item.department_name}`,\r\n                        value: `${item.department_id}`\r\n                    })\r\n                })\r\n            });\r\n        },\r\n        GetNotificationUser: async function () {\r\n            let url = `moduleName=ASSETASSIGNMENT&department_ids=`;\r\n            await DataService.GetNotficationUsers(url).then(response => {\r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[4].config.options.push({\r\n                        name: `${item.NAME}`,\r\n                        value: `${item.USER_ID}`\r\n                    })\r\n                })\r\n            });\r\n        },\r\n        GetCompanyUsers: async function () {\r\n            var vm = this;\r\n            (vm.FormSchema)[0].Data[2].config.options = [];\r\n            vm.isLoading = true;\r\n            var department_ids = ''; // (vm.FormSchema)[0].Data[0].value;\r\n\r\n            if ((vm.FormSchema)[0].Data[0].value.length > 0) {\r\n                (vm.FormSchema)[0].Data[0].value.forEach(item => {\r\n                    department_ids += item.value + ',';\r\n                });\r\n            }\r\n            (this.FormSchema)[0].Data[0].config.options.forEach(item => {\r\n                if (event.currentTarget.textContent == item.name) {\r\n\r\n                    department_ids += item.value;\r\n                }\r\n            });\r\n            vm.dept_ids = department_ids;\r\n            let url = `moduleName=ASSETASSIGNMENT&department_ids=${department_ids}`;\r\n            await DataService.GetCompanyUsers(url).then(response => {\r\n                this.UsersData = response.data;\r\n                response.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[2].config.options.push({\r\n                        name: `${item.USERNAME}`,\r\n                        value: `${item.USER_ID}`\r\n                    })\r\n\r\n                    vm.isLoading = false;\r\n                    this.$refs.FieldUpdate.UpdateKeyValue();\r\n\r\n                })\r\n                if (response.data.length <= 0) {\r\n                    (this.FormSchema)[0].Data[2].config.options = [];\r\n                    vm.isLoading = false;\r\n                }\r\n            });\r\n        },\r\n        removeRecord: async function (event, field, meta) {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            const department_ids = [];\r\n\r\n            (vm.FormSchema)[0].Data[0].value.forEach(item => {\r\n                //debugger\r\n                if (item.value != event.value) {\r\n                    department_ids.push(item.value);\r\n                }\r\n            });\r\n            let url = `moduleName=ASSETASSIGNMENT&department_ids=${department_ids.toString()}`;\r\n            await DataService.GetCompanyUsers(url).then(response => {\r\n                this.UsersData = response.data;\r\n                (this.FormSchema)[0].Data[2].config.options = [];\r\n                response.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[2].config.options.push({\r\n                        name: `${item.USERNAME}`,\r\n                        value: `${item.USER_ID}`\r\n                    })\r\n                    vm.isLoading = false;\r\n                    this.$refs.FieldUpdate.UpdateKeyValue();\r\n\r\n                })\r\n                if (response.data.length <= 0) {\r\n                    (this.FormSchema)[0].Data[2].config.options = [];\r\n                    vm.isLoading = false;\r\n                }\r\n            });\r\n\r\n        },\r\n        GetCompanyClients: async function () {\r\n            let url = `moduleName=ASSETASSIGNMENT&department_ids=`;\r\n            await DataService.GetCompanyClients(url).then(response => {\r\n                response.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[3].config.options.push({\r\n                        name: `${item.USERNAME}`,\r\n                        value: `${item.user_id}`\r\n                    })\r\n                })\r\n            });\r\n        },\r\n        GetDetails: function () {\r\n            var vm = this;\r\n            var userid = (this.FormSchema)[0].Data[2].value\r\n            vm.GetParentDetails = {\r\n                DepartmentID: vm.txtDepartment,\r\n                UserID: userid,\r\n                GetNotificationUserID: vm.Users1,\r\n                FromDate: vm.DateofAssignment,\r\n                TillDate: vm.DateofAssignmentTill,\r\n                SelfCheckout: null,\r\n                RequestFrom: 'assetassignment',\r\n                isUsedFor: 'search',\r\n                pendingItems: vm.pendingItem,\r\n                checkAvailabilities: vm.checkAvailability,\r\n            }\r\n            sessionStorage.setItem(\"GetParentDetails\", JSON.stringify(vm.GetParentDetails));\r\n        },\r\n        AssestArrayData(AssestArrayData) {\r\n            //debugger;\r\n            this.dataArray = AssestArrayData;\r\n        },\r\n        SubmitData: function () {\r\n            var vm = this;\r\n            var DateAssignment = new Date(Date.parse(vm.DateofAssignment));\r\n            var DateTill = new Date(Date.parse(vm.DateofAssignmentTill));\r\n\r\n            // Comparing dates\r\n            if ((DateAssignment > DateTill)) {\r\n                vm.ShowAlert(vm.$t(\"DateAssignTillMsg\"), \"failure\", vm.$t('Alert'));\r\n                return false;\r\n            } else {\r\n                // console.log(\"DateAssignment is less than or equal to DateTill\");\r\n            }\r\n            // var RequstionList = '';\r\n            // this.$children.forEach(child => {\r\n            //     //debugger;\r\n            //     if (child.$options.name === 'List_Of_Asset') {\r\n            //         RequstionList = child.GetRequstionList();\r\n            //     }\r\n            // });\r\n\r\n             var RequstionList= vm.$children[2]?.$children[3]?.GetRequstionList;\r\n\r\n            if ((vm.FormSchema)[0].Data[1].value == 'Client') {\r\n                vm.$refs.ProductAssignmentForm.fields.Departments.failed = false;\r\n                (vm.FormSchema)[0].Data[0].validationRules.required = false;\r\n            } else {\r\n                vm.$refs.ProductAssignmentForm.fields.Departments.failed = true;\r\n                (vm.FormSchema)[0].Data[0].validationRules.required = false;\r\n            }\r\n            vm.$refs.ProductAssignmentForm.validate().then(result => {\r\n                //debugger;\r\n                if (vm.$refs.ProductAssignmentForm.errors['Assign To'].length > 0) {\r\n                    result = true;\r\n                }\r\n                if (vm.FormSchema[0].Data[2].value == \"\" && vm.FormSchema[0].Data[3].value == \"\") {\r\n                    result = false;\r\n                }\r\n                if (result) {\r\n                    //debugger;\r\n                    var formData = new FormData();\r\n                    var files = [];\r\n                    let uniquenames = \"\";\r\n                    var issueToName = \"\";\r\n                    for (let i = 0; i < vm.dataArray.length; i++) {\r\n                        if (vm.dataArray.length > 1) {\r\n                            uniquenames = vm.dataArray[0].AssetUniqueName;\r\n                        } else {\r\n                            uniquenames = uniquenames + \",\" + vm.dataArray[i].AssetUniqueName;\r\n                        }\r\n                    }\r\n                    vm.UsersData.forEach(item => {\r\n                        if (item.USER_ID == parseInt((vm.FormSchema)[0].Data[2].value)) {\r\n                            issueToName = item.USERNAME;\r\n                        }\r\n                    })\r\n                    var hasEmptyRequestQuantity = false;\r\n                    vm.dataArray.forEach(item => {\r\n                        if (item.RequestQuantity === null || item.RequestQuantity === '' || item.RequestQuantity === 0 || isNaN(item.RequestQuantity) || item.RequestQuantity === 'undefined') {\r\n                            hasEmptyRequestQuantity = true;\r\n                        }\r\n                    });\r\n                    if (hasEmptyRequestQuantity) {\r\n                        vm.ShowAlert(vm.$t('RequestQuantityRequired'), \"warning\", true, vm.$t('Alert'));\r\n                        return false;\r\n                    }\r\n                    ////debugger\r\n\r\n                    if (RequstionList != undefined) {\r\n\r\n                        RequstionList.forEach(itm => {\r\n\r\n                            var obj = {\r\n                                \"AssetCatalogUniqueId\": itm.ChildUniqueId,\r\n                                \"RequestFromRequsition\": 1,\r\n                                \"IsGroup\": null,\r\n                                \"ParentAssetCatalogUniqueId\": itm.ChildUniqueId,\r\n                                \"AssetQuantity\": parseInt(itm.RequestQuantity),\r\n                                \"RequestQuantity\": parseInt(itm.RequestQuantity),\r\n                                \"BatchId\": itm.RequisitionBatchId,\r\n                                \"AssetUniqueName\": itm.ChildUniqueName\r\n                            }\r\n                            vm.dataArray.push(obj);\r\n                        })\r\n\r\n                    }\r\n\r\n                    var mainObj = {\r\n                        UserId: (vm.FormSchema)[0].Data[1].value == 'Client' ? (vm.FormSchema)[0].Data[3].value : (vm.FormSchema)[0].Data[2].value,\r\n                        DepartmentId: (vm.FormSchema)[0].Data[0].value,\r\n                        AssignedFrom: null,\r\n                        AssignedTill: null,\r\n                        AssignedFromDateTime: vm.$options.filters.formatDateTimeYYMMDD(vm.DateofAssignment),\r\n                        AssignedTillDateTime: vm.$options.filters.formatDateTimeYYMMDD(vm.DateofAssignmentTill),\r\n                        StartTime: null,\r\n                        EndTime: null,\r\n                        Comment: (vm.FormSchema)[1].Data[0].value,\r\n                        NotificationUsers: (vm.FormSchema)[0].Data[4].value,\r\n                        RequestFrom: 'AssetAssign',\r\n                        IsRequestFromRequisition: false,\r\n                        IssueToName: issueToName,\r\n                        RFID: 0,\r\n                        // GroupRequistionAssestInfostring: vm.dataArray,\r\n                        // itemNames: uniquenames\r\n                        GroupRequistionAssestInfostring: vm.dataArray,\r\n                        itemNames: vm.dataArray.map(item => item.AssetUniqueName).join(\",\"),\r\n\r\n                    };\r\n\r\n                    if (files.length > 0) {\r\n                        formData.append(\"postString\", JSON.stringify(mainObj));\r\n                    } else {\r\n                        formData.append(\"postString\", JSON.stringify(mainObj));\r\n                    }\r\n\r\n                    if (vm.dataArray.length > 0) {\r\n                        DataService.SaveGroupAssign(formData).then(response => {\r\n                            if (response.data.status == 0) {\r\n                                if (response.data.existIds == '') {\r\n                                    vm.ShowAlert(vm.$t(\"Itemassignedsuccessfully\"), \"success\", vm.$t('Alert'));\r\n                                    if (vm.$route.query.reqForm == 'MyItems') {\r\n\r\n                                    } else if (vm.$route.query.reqForm == 'pendingRequest') {\r\n\r\n                                    } else {\r\n                                        vm.onCancel();\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                vm.ShowAlert(vm.$t(\"ErrorWhileProcessingRequest\"), \"failure\", vm.$t('Alert'));\r\n                            }\r\n                        });\r\n                    } else {\r\n                        vm.ShowAlert(vm.$t(\"AddAtLeastOne\"), \"failure\", vm.$t('Alert'));\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        formatTimeToCustomFormat(inputTime) {\r\n            if (inputTime != null && inputTime !== '') {\r\n                const inputLuxonDateTime = DateTime.fromJSDate(new Date(inputTime), {\r\n                    zone: 'utc'\r\n                }); // Assume the input time is in UTC               \r\n                const targetTimeZone = `Etc/GMT${this.Timezone}`;\r\n                const outputLuxonDateTime = inputLuxonDateTime.setZone(targetTimeZone);\r\n                const formattedDateTime = outputLuxonDateTime.toFormat(\"MM/dd/yyyy h:mm\");\r\n                return formattedDateTime;\r\n            } else {\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dynamic-multiselect .multiselect__tags {\r\n    padding: 10px 40px 4px 8px !important;\r\n}\r\n\r\n.dynamic-multiselect .multiselect__placeholder {\r\n    margin-bottom: 5px;\r\n    padding-top: 0px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=4d25083e&lang=en&\"\nimport script from \"./Manage.vue?vue&type=script&lang=js&\"\nexport * from \"./Manage.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Manage.vue?vue&type=style&index=0&id=4d25083e&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=style&index=0&id=4d25083e&prod&lang=css&\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=style&index=0&id=4d25083e&prod&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"be5a013a\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"sourceRoot":""}