{"version":3,"sources":["webpack:///./src/views/CRM/Lead/ManageLeadCustomLayout.vue?02ec","webpack:///src/views/CRM/Lead/ManageLeadCustomLayout.vue","webpack:///./src/views/CRM/Lead/ManageLeadCustomLayout.vue?6c7c","webpack:///./src/views/CRM/Lead/ManageLeadCustomLayout.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","isLoading","callFrom","_v","on","$event","setTourGuideSteps","_e","ref","buttons","FormSchema","saveForm","showaddindustryModal","UpdateSelectJson","showaddroletitleModal","showaddleadsourceModal","staticRenderFns","props","components","modaladdindustry","modaladdroletitle","modaladdleadsource","data","leadId","phoneError","UserName","UserId","type","class","text","onclick","onClick","isVisible","created","vm","methods","getForm","ths","DataService","group","field","stateObj","label","value","obj","mode","format","minDate","openaddIndustrypopup","openaddRoleTitlepopup","openaddLeadSourcepopup","json","name","onChangeEventForFields","id","y","GetDropDownData","url","options","CustomFieldArray","x","moduleCode","subModuleCode","onCancel","component"],"mappings":"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","file":"js/CRMManageLead.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{attrs:{\"id\":\"divMainLeadData\"}},[(_vm.callFrom!='Wizard')?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(\"Manage Lead\")]),_c('span',{staticClass:\"float-right\"},[_c('a',{staticClass:\"p-action-btn text-white\",attrs:{\"href\":\"javascript:;\",\"title\":\"Page Tour\"},on:{\"click\":function($event){return _vm.setTourGuideSteps(0)}}},[_c('em',{staticClass:\"fa fa-road\",attrs:{\"aria-hidden\":\"true\"}}),_c('br'),_vm._v(\"Page Tour \")])])])])]):_vm._e(),_c('div',{staticClass:\"border p-3\"},[_c('Form',{ref:\"LeadForm\"},[_c('dynamic-form',{ref:\"ManageLeadForm\",attrs:{\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.saveForm}})],1),(_vm.showaddindustryModal)?_c('modaladdindustry',{attrs:{\"callFrom\":\"lead\"},on:{\"close\":function($event){_vm.showaddindustryModal=false},\"updatedata\":_vm.UpdateSelectJson}}):_vm._e(),(_vm.showaddroletitleModal)?_c('modaladdroletitle',{on:{\"close\":function($event){_vm.showaddroletitleModal=false},\"updatedata\":_vm.UpdateSelectJson}}):_vm._e(),(_vm.showaddleadsourceModal)?_c('modaladdleadsource',{attrs:{\"callFrom\":\"lead\"},on:{\"close\":function($event){_vm.showaddleadsourceModal=false},\"updatedata\":_vm.UpdateSelectJson}}):_vm._e()],1)])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n     <section class=\"main-content\">\r\n         <loader :is-visible=\"isLoading\"></loader>\r\n       <div id=\"divMainLeadData\" v-cloak>\r\n \r\n        <div class=\"row\" v-if=\"callFrom!='Wizard'\">\r\n           <div class=\"col-md-12 padding-t_8\">\r\n             <div class=\"theme-primary partition-full\">\r\n               <span class=\"p-name text-white\">Manage Lead</span>\r\n               <span class=\"float-right\">\r\n                 <a href=\"javascript:;\" class=\"p-action-btn text-white\" title=\"Page Tour\" @click=\"setTourGuideSteps(0)\">\r\n                   <em class=\"fa fa-road\" aria-hidden=\"true\"></em>\r\n                   <br />Page Tour\r\n                 </a>\r\n               </span>\r\n             </div>\r\n           </div>\r\n         </div>\r\n         <div class=\"border p-3\">\r\n            <Form ref=\"LeadForm\">\r\n                <dynamic-form ref=\"ManageLeadForm\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"saveForm\" />\r\n            </Form>\r\n            <modaladdindustry v-if=\"showaddindustryModal\" callFrom='lead' @close=\"showaddindustryModal=false\" @updatedata=\"UpdateSelectJson\"></modaladdindustry>\r\n            <modaladdroletitle v-if=\"showaddroletitleModal\" @close=\"showaddroletitleModal=false\" @updatedata=\"UpdateSelectJson\"></modaladdroletitle>  \r\n           <modaladdleadsource v-if=\"showaddleadsourceModal\" callFrom=\"lead\" @close=\"showaddleadsourceModal=false\" @updatedata=\"UpdateSelectJson\"></modaladdleadsource>                  \r\n         </div>\r\n       </div>\r\n     </section>\r\n </div>\r\n </template>\r\n <script>\r\nimport DataService from \"../../../services/DataService\";\r\nimport modaladdindustry from '../../../components/Common/Modal/modaladdindustry.vue';\r\nimport modaladdroletitle from '../../../components/Common/Modal/modaladdroletitle.vue';\r\nimport modaladdleadsource from '../../../components/Common/Modal/modaladdleadsource.vue';\r\nexport default {\r\n    props:{\r\n        callFrom:null\r\n    },\r\n    components: {\r\n        modaladdindustry,\r\n        modaladdroletitle,\r\n        modaladdleadsource\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading:false,\r\n            leadId:this.$route.params.id,\r\n            showaddindustryModal:false,\r\n            showaddroletitleModal:false,\r\n            showaddleadsourceModal:false,\r\n            phoneError:false,\r\n            UserName:null,\r\n            UserId:null,\r\n            FormSchema:[],\r\n            buttons: [{\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    onclick: this.saveForm\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.onCancel,\r\n                    isVisible: true,\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    async created(){\r\n        var vm =this;\r\n        vm.UserId = vm.GetUserInfo.ID;\r\n        vm.UserName = vm.GetUserInfo.Name;\r\n        vm.getForm(vm.leadId);\r\n    },\r\n    methods:{\r\n        getForm: function (id) {\r\n            var ths = this;\r\n            ths.isLoading = true;\r\n            var url = `recordId=${id}&moduleName=CRM&subModuleCode=CRM_LEADS&langCode=en`;\r\n            DataService.GetDynamicForm(url).then(function (response) {\r\n                if (response != null && response.data != null) {                    \r\n                    ths.FormSchema = ths.$refs.ManageLeadForm.ConvertCustomFieldIntoDynamicFormObj(response.data.data);\r\n                    ths.FormSchema.forEach((group, gi) => {\r\n                        group.Data.forEach(async  (field, fi) => {\r\n                            if (field.name == 'industry_type_id') {\r\n                                field.config.showAddIcon = true;\r\n                                field.config.onAddButtonClick = ths.openaddIndustrypopup;\r\n                            }\r\n                            if (field.name == \"channel_id\") {\r\n                                field.config.showAddIcon = true;\r\n                                field.config.onAddButtonClick = ths.openaddLeadSourcepopup;\r\n                            }\r\n                            if (field.name == \"role_title_id\") {\r\n                                field.config.showAddIcon = true;\r\n                                field.config.onAddButtonClick = ths.openaddRoleTitlepopup;\r\n                            }\r\n                            if (field.name == 'lead_state' && field.value=='') {\r\n                                field.config.options = null;\r\n                            }\r\n                            if (field.name == 'lead_country' && field.value !='') {\r\n                                var stateObj = group.Data.filter(x=>x.name=='lead_state')[0];\r\n                                await ths.GetDropDownData('ACCOUNT_STATE', stateObj, field.value,'EDIT');\r\n                            }\r\n                            if (field.name == 'lead_date' && field.value == '') {\r\n                                field.value = new Date();\r\n                            }\r\n                            if (field.name == 'status_id' && field.value == '') {\r\n                                field.value = field.config.options.filter(x=>x.name.toLowerCase()=='active')[0].value;\r\n                            }\r\n                            if (field.name == 'lead_owner_id' ) {\r\n                                if(field.value == ''){\r\n                                    field.value={label:ths.UserName,value:ths.UserId}\r\n                                }\r\n                                else{\r\n                                    if(field.config.options !=null){\r\n                                        var obj = field.config.options.filter(x=>x.value==field.value)[0];\r\n                                        field.value={label:obj.name,value:obj.value}\r\n                                    }else{\r\n                                        field.value={label:ths.UserName,value:ths.UserId}\r\n                                    }\r\n                                }\r\n                            }\r\n                            if(field.name=='lead_date'){\r\n                                field.config = { mode: 'date', format: \"M/D/YYYY\" }\r\n                            }\r\n                            if(field.name=='expected_close_date'){\r\n                                field.config = { mode: 'date', format: \"M/D/YYYY\", minDate: new Date() }\r\n                            }\r\n                            field.config.onChange = ths.onChangeEventForFields;\r\n                        });\r\n                    });          \r\n                    ths.isLoading = false;\r\n                }\r\n            });\r\n        },\r\n        openaddIndustrypopup: function () { \r\n            var vm =this;\r\n            vm.showaddindustryModal = true;\r\n        },\r\n        openaddRoleTitlepopup: function () {\r\n            var vm =this;\r\n            vm.showaddroletitleModal = true;\r\n        },\r\n        openaddLeadSourcepopup: function () {\r\n            var vm =this;\r\n            vm.showaddleadsourceModal = true;\r\n        },\r\n        UpdateSelectJson:function(name,json){\r\n            let ths = this;\r\n            ths.FormSchema.forEach((group, gi) => {\r\n                group.Data.forEach((field, fi) => {\r\n                    if(field.name==name){\r\n                        if(json !=null){\r\n                            field.config.options=[];\r\n                            json.forEach(x=>{\r\n                                field.config.options.push({name:x.name,value:x.value});\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        onChangeEventForFields: function (x, y, z) {\r\n            let ths = this;\r\n            var vm = this;\r\n            if (y.name == \"lead_country\") {\r\n                ths.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach(async (field, fi) => {\r\n                        if(field.name=='lead_state'){\r\n                            let id = y.value;\r\n                            await vm.GetDropDownData('ACCOUNT_STATE', field, id,null);\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        },\r\n        GetDropDownData: async function (type, field, id, action) {\r\n            var vm=this;\r\n            var url = `id=&moduleName=CRM&type=${type}&refId=${id}`;\r\n            await DataService.getDDLData(url+ \"&search=\").then(response => {\r\n                if(response.data.DATA != undefined){\r\n                    var options = response.data.DATA;\r\n                    field.config.options = [];\r\n                    if(action !='EDIT'){\r\n                        field.value='';\r\n                    }\r\n                    if(type=='ACCOUNT_STATE'){\r\n                        options.forEach((item) => {\r\n                            field.config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                    }\r\n                    vm.$refs.ManageLeadForm.UpdateKeyValue();\r\n                }\r\n            });\r\n        },\r\n        saveForm(){\r\n            var ths = this;\r\n            ths.$refs.LeadForm.validate().then(result => {\r\n                if (result) {\r\n                    ths.isLoading = true;\r\n                    var CustomFieldArray = ths.$refs.ManageLeadForm.ConvertDynamicFormObjToCustomFieldObj(ths.FormSchema);\r\n                    \r\n                    CustomFieldArray.forEach((x) => {\r\n                        if(x.field_name=='lead_owner_id'){\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                x.field_value = x.field_value.value;\r\n                            }\r\n                        }\r\n                        if(x.field_name=='modified_by'){\r\n                            x.field_value = vm.UserId;\r\n                        }\r\n                    })\r\n                    var obj = {\r\n                        data: CustomFieldArray,\r\n                        moduleCode: \"CRM\",\r\n                        subModuleCode: \"CRM_LEADS\"\r\n                    }\r\n                    DataService.SaveDynamicForm(JSON.stringify(obj)).then(function (response) {\r\n                        if (response != null && response.data != null && response.data[0].Status == \"Success\") {\r\n                            if(ths.leadId > 0)\r\n                            {\r\n                                ths.ShowAlert(ths.$t('UpdatedSuccess',[ths.$t('Lead')]),\"success\", true, ths.$t(\"Alert\"));\r\n                                ths.$router.push({ name: 'CRMLead' });\r\n                            }\r\n                            else\r\n                            {\r\n                                ths.ShowAlert(ths.$t('AddedSuccess',[ths.$t('Lead')]), \"success\", true,  ths.$t(\"Alert\"));\r\n                                ths.$router.push({ name: 'CRMLead' });\r\n                            }\r\n                        }\r\n                    })\r\n                    ths.isLoading = false;\r\n                }\r\n            })\r\n        },\r\n        onCancel:function(){\r\n            var vm =this;\r\n            if (vm.callFrom == 'Wizard') {\r\n                vm.$emit('closewizard');\r\n            } else {\r\n                vm.$router.push({ name: 'CRMLead' });\r\n            }\r\n    },\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ManageLeadCustomLayout.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ManageLeadCustomLayout.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ManageLeadCustomLayout.vue?vue&type=template&id=69b65d71&\"\nimport script from \"./ManageLeadCustomLayout.vue?vue&type=script&lang=js&\"\nexport * from \"./ManageLeadCustomLayout.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}