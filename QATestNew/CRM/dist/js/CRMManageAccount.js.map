{"version":3,"sources":["webpack:///./src/views/CRM/Accounts/Manage.vue?ee04","webpack:///src/views/CRM/Accounts/Manage.vue","webpack:///./src/views/CRM/Accounts/Manage.vue?75d3","webpack:///./src/views/CRM/Accounts/Manage.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","ref","scopedSlots","_u","key","fn","valid","errors","GroupBy","dateformat","on","openaddIndustrypopup","FillDropdown","onSearch","setSelectedValue","$event","ChkContactbox","staticStyle","_e","touched","invalid","directives","name","rawName","value","expression","class","domProps","target","composing","txtfirstname","txtlastname","txtemailid","onInputMobilePhone","model","callback","$$v","txtmobile","disabled","SubmitData","onCancel","showaddindustryModal","UpdateSelectJson","staticRenderFns","components","DynamicForm","modaladdindustry","data","LeadData","LeadOwner","Channel","IndustryType","Status","ApiURL","options","selected","selectoptions","submited","IscheckContact","IndustryItemObject","cityItemObject","showaddcityModal","accountID","divchkhide","CountryData","phoneList","Id","phoneError","AccountCode","created","vm","reqid","methods","phone","phoneObject","input","IsPaste","evt","isNumber","onKeyDown1","ajaxRequestComplete","refId","search","typeCode","item","itemname","url","LeadDataService","json","$","element","openaddcitypopup","GetValidation","obj","values","field_name","required","length","type","accname","accowner","Cname","adrs1","adrs2","cty","zipc","Isvalidcnt","fieldValue","field_value","custom_field_id","validation","accountcontact","IdExist","previousItem","first_name","last_name","email_id","mobile_number","postJSON","FetchData","id","then","groupId","first_value","second_value","IsActive","Compphone","fieldItem","group_id","group_name","group_display_name","Data","setTimeout","searchSelectData","ShowSearchData","objItem","selctedValue","component"],"mappings":"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AA,6BACA,kDACAC,wBAzCA,yGAAA9E,GA+CAD,iCACA,0BACA,8BAEAgF,6BACA,sBACA,0BAEAC,0BACA,SAuCA,OAtCA,gBACAC,kBAEA,aACAA,mBAEA,6BACAA,eAEA,oBACAA,gFAEA,uBACAA,gBAEA,wCACAA,iBAEA,mBACAA,6BAEA,kCACAA,oDAEA,6BACAA,gBACAA,WACAA,aAEA,sBACAA,iBAEA,yBACAA,2BAEA,oBACAA,oOAEA,GAEAtD,WAvJA,SAuJAuD,GACA,WAoBA,KACA,KACA,KACA,KACA,KACA,KAEAxB,0CAEA,GADAA,qBACA,GACAA,eACA,iBACA,KACA,KACA,KAEA,IACAmB,wBACA,OACAM,kBACAC,uBACAC,gBACAC,wBAmBA,GAjBA,yBACAC,WAEA,yBAEAC,QAEA,yBACAC,WACA,4BACAC,WACA,6BACAC,WACA,yBACAC,WACA,6BACAC,WACA,iBACA,8EACA,aACArB,oBACA,yCACAK,uBACAiB,MAIA,+CAIA,GAHA,oBACAC,WAEA,uBACA,yCACA,yBAEAA,cAEA,uBACA,IACAA,mDACA,UAEA,OACAZ,kBACAa,cACAC,mCAEA9D,UACA+D,UACAC,aAEA,kDACA,iBACA,qBACA,UACAC,KAEA,+DACA,qDACA,oFACA,eACA,CACA,gCACA,oEACAC,gBAEA,qBACA,uEACA,aACA3C,uBACA,eACAmB,2BACAiB,MAIA,OAEA,SAEA,OACAQ,0BACAC,wBACAC,sBACAC,2BAEA,OAEAC,EADA,iBACAA,CACAvE,OACA+D,aACAC,kBAIAO,CACAvE,OACA+D,cAGA,wBACAvB,4CACAjB,eACA,qBACA,cACAA,iFAGAA,+EAEAA,gBAAAhD,sBAGA,oBACAgD,2EAGAA,qFAOA5B,+BACA+C,mCACAA,6BACA,YACAC,2BAKA6B,qBACA,WACAjD,eACA,sCACA,IAAAkD,wDAAAlG,qBACA,wCACAiE,wDACAkC,MAAA,YAKA,GAFAnD,eACAA,uBACA,uCACA,6BACAmB,yCACAiC,aACA,kDACA,iBACA,2BAyCA,GAxCA,0BACAtC,iBAEA,UACA4B,KAEA,oBACA5B,kCAEA,sCACAA,kBAEA,wBACAA,mCAEA,yCACAA,8DAGA,0BACA,aACAA,sBACAA,SAAA9D,oBAAAE,WAAAmG,iBAAAC,mBACAxC,mBAAA9D,oBAAAE,WAAAmG,iBAAAC,qBAGAxC,sDAGA,qBACAyC,QAEA,kDACAzC,iBACAA,uBAEA,4BACAd,iBAGA,yCACA,gBACA,+CACAmB,wBACA,0BACAnB,gCAEAA,mCAGAA,yBAGA,wCACAA,yBAEA,iBACAwD,QAEA,sCACA,wBAEA,gBACA,uCACA,wBAmBA,GAjBA,eACArC,wBACA,yDACAsC,qDACAA,gCACA,oDACAA,8BAGA,gEACAA,+BAEA,oBACAA,oBAIA,YACA,OACAC,WACAC,2BACAC,2CACAC,QAEA7D,sBAGAA,IACA8D,uBAAA9D,wBAAA,KACA8D,uBACA,+CACA,QACA3C,wBACA,0BACAnB,gCAEAA,iCAEA,UAMAzD,yBACA,mCAEAwH,mCACA,8BAEAC,eAhdA,SAgdApD,EAAAZ,EAAAiE,EAAAC,GACA,wBACAA,KAEA,8CACA,2BACAlD,gBAEAC,0CACAkC,MAAA,YACA,SAOA,OANA,OAEA,aACAjC,UAEA+C,wBACA,qBAGAzH,+BACA,WACA,IACA,iBACAsE,cAGA,wBACAd,4BAGA,mBACAmB,wCACAA,6BACA,0DACAnB,sCAGA,OAGAc,WAGA,cCtjB8W,I,YCO1WqD,EAAY,eACd,EACArJ,EACAuD,GACA,EACA,KACA,KACA,MAIa,aAAA8F,E","file":"js/CRMManageAccount.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"main-content\"},[_c('div',{attrs:{\"id\":\"divMainLeadData\"}},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('Manage'))+\" \"+_vm._s(_vm.$t('Account')))]),_c('span',{staticClass:\"p-actions float-right\"},[_c('RouterLink',{staticClass:\"p-action-btn text-white float-right\",attrs:{\"to\":'/CRM/Accounts',\"title\":\"\",\"id\":\"backtolist\",\"data-original-title\":_vm.$t('BacktoList')}},[_c('em',{staticClass:\"fa fa-angle-double-left pr-2\"}),_c('br'),_vm._v(_vm._s(_vm.$t('BacktoList')))])],1)])])]),_c('div',{staticClass:\"border p-3\"},[_c('Form',{ref:\"form\",scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar valid = ref.valid;\nvar errors = ref.errors;\nreturn [_c('DynamicForm',{attrs:{\"schema\":_vm.GroupBy,\"dateformat\":_vm.dateformat,\"subModuleCode\":\"ManageAccount\"},on:{\"openaddIndustrypopup\":_vm.openaddIndustrypopup,\"FillDropdown\":_vm.FillDropdown,\"onSearchDDL\":_vm.onSearch,\"setSelectedValue\":_vm.setSelectedValue}}),(_vm.divchkhide)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12 float-left my-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"float-left\"},[_c('input',{staticClass:\"ml-3\",attrs:{\"id\":\"chkcontactinfo\",\"value\":\"1\",\"type\":\"checkbox\"},on:{\"change\":function($event){return _vm.ChkContactbox($event)}}})]),_c('div',{staticClass:\"float-left pt-1\"},[_c('span',{staticStyle:{\"font-weight\":\"500\"}},[_vm._v(\"Tick to add Contact.\")])])])])]):_vm._e(),(_vm.IscheckContact)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-12 mt-4\"},[_c('div',{staticClass:\"heading-border mb-2\"},[_c('h5',{staticClass:\"h5\"},[_c('span',[_vm._v(_vm._s(_vm.$t('ContactInformation')))])])])]),_c('div',{staticClass:\"col-sm-12 col-md-12 float-left col-lg-6 col-xl-6\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('FirstName'))+\":\"),_c('span',{staticClass:\"text-danger\"},[_vm._v(\"*\")])]),_c('Field',{attrs:{\"name\":\"FirstName\",\"rules\":{'required':true},\"label\":\"First Name\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar touched = ref.touched;\nvar invalid = ref.invalid;\nreturn [_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtfirstname),expression:\"txtfirstname\"}],class:{'form-control' : true,'is-invalid': touched && invalid},attrs:{\"type\":\"text\",\"name\":\"FirstName\",\"maxlength\":\"100\"},domProps:{\"value\":(_vm.txtfirstname)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtfirstname=$event.target.value}}}),_c('span',{staticClass:\"invalid-feedback\",attrs:{\"name\":\"FirstName\"}},[_vm._v(_vm._s(errors[0]))])]}}],null,true)})],1)]),_c('div',{staticClass:\"col-sm-12 col-md-12 float-left col-lg-6 col-xl-6\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('LastName'))+\":\"),_c('span',{staticClass:\"text-danger\"},[_vm._v(\"*\")])]),_c('Field',{attrs:{\"name\":\"LastName\",\"rules\":{'required':true},\"label\":\"Last Name\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar touched = ref.touched;\nvar invalid = ref.invalid;\nreturn [_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtlastname),expression:\"txtlastname\"}],class:{'form-control' : true,'is-invalid': touched && invalid },attrs:{\"type\":\"text\",\"name\":\"LastName\",\"maxlength\":\"100\"},domProps:{\"value\":(_vm.txtlastname)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtlastname=$event.target.value}}}),(touched && invalid )?_c('span',{staticClass:\"invalid-feedback\",attrs:{\"name\":\"LastName\"}},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}],null,true)})],1)]),_c('div',{staticClass:\"col-sm-12 col-md-12 float-left col-lg-6 col-xl-6\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('Email'))+\":\"),_c('span',{staticClass:\"text-danger\"},[_vm._v(\"*\")])]),_c('Field',{attrs:{\"name\":\"Email\",\"rules\":{'required':true,'email':true},\"label\":\"Email\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar touched = ref.touched;\nvar invalid = ref.invalid;\nreturn [_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtemailid),expression:\"txtemailid\"}],class:{'form-control':true,'is-invalid': touched && invalid},attrs:{\"type\":\"text\",\"id\":\"Emailid\",\"name\":\"Email\"},domProps:{\"value\":(_vm.txtemailid)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtemailid=$event.target.value}}}),_c('span',{staticClass:\"invalid-feedback\",attrs:{\"name\":\"Email\"}},[_vm._v(_vm._s(errors[0]))])]}}],null,true)})],1)]),_c('div',{staticClass:\"col-sm-12 col-md-12 float-left col-lg-6 col-xl-6\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('Mobile'))+\": \")]),_c('vue-tel-input',{attrs:{\"id\":\"txtmobile\",\"mode\":\"international\",\"name\":\"txtmobile\"},on:{\"input\":_vm.onInputMobilePhone},model:{value:(_vm.txtmobile),callback:function ($$v) {_vm.txtmobile=$$v},expression:\"txtmobile\"}}),_c('span',{staticClass:\"invalid-feedback d-block\",attrs:{\"name\":_vm.txtmobile}},[_vm._v(_vm._s(errors[0]))]),(_vm.phoneError)?_c('span',{staticClass:\"invalid-feedback d-block\"},[_vm._v(\"Enter valid number.\")]):_vm._e()],1)])]):_vm._e(),_c('div',{staticClass:\"row flex-row-reverse mt-2\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success formbtn\",class:{ disabled: false },attrs:{\"href\":\"javascript:;\",\"title\":\"Save\"},on:{\"click\":function($event){return _vm.SubmitData(valid,errors)}}},[_c('em',{staticClass:\"fa fa-save pr-2\"}),_vm._v(_vm._s(_vm.$t('Save'))+\" \")]),_vm._v(\"  \"),_c('a',{staticClass:\"btn btn-danger\",attrs:{\"href\":\"javascript:void(0)\",\"title\":\"Cancel\"},on:{\"click\":_vm.onCancel}},[_c('em',{staticClass:\"fa fa-close pr-2\"}),_vm._v(_vm._s(_vm.$t('Cancel'))+\" \")])]),_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"py-2\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])])]),(_vm.showaddindustryModal)?_c('modaladdindustry',{on:{\"close\":function($event){_vm.showaddindustryModal=false},\"updatedata\":_vm.UpdateSelectJson}}):_vm._e()]}}])})],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<script>\r\nimport LeadDataService from \"../../../services/DataService\";\r\nimport DynamicForm from \"../../../components/Common/DynamicForm.vue\";\r\nimport modaladdindustry from '../../../components/Common/Modal/modaladdindustry.vue'\r\nexport default {\r\n    components: {\r\n        DynamicForm,\r\n        modaladdindustry\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading:false,\r\n            value: \"\",\r\n            LeadData: null,\r\n            LeadOwner: null,\r\n            GroupBy: [],\r\n            Channel: null,\r\n            IndustryType: null,\r\n            Status: null,\r\n            ApiURL: `moduleName=CRM&subModuleCode=CRM_ACCOUNTS&langCode=en`,\r\n            options: null,\r\n            selected: false,\r\n            selectoptions: [],\r\n            submited: false,\r\n            IscheckContact: false,\r\n            showaddindustryModal: false,\r\n            IndustryItemObject: null,\r\n            cityItemObject: null,\r\n            showaddcityModal: false,\r\n            txtfirstname: '',\r\n            txtlastname: '',\r\n            txtemailid: '',\r\n            txtmobile: '',\r\n            accountID: 0,\r\n            divchkhide: false,\r\n            CountryData: null,\r\n            phoneList: [],\r\n            name: null,\r\n            Id: null,\r\n            dateformat: null,\r\n            phoneError:false,\r\n            AccountCode:''\r\n        }\r\n    },\r\n    created: function () {\r\n        this.name = this.GetUserInfo.Name;\r\n        this.Id = this.GetUserInfo.ID;\r\n        this.dateformat = this.GetUserInfo.DateFormat;\r\n        var vm = this;\r\n        vm.accountID=this.$route.query.id?this.$route.query.id:0;\r\n        vm.AccountCode=this.$route.query.AccountCode?this.$route.query.AccountCode:'';\r\n        var reqid = this.$route.query.id?this.$route.query.id:0;\r\n            reqid = reqid == \"\" ? 0 : reqid;\r\n        if (reqid == 0)\r\n            vm.divchkhide = true;\r\n        vm.FetchData();\r\n    },\r\n    methods: {\r\n        onInputMobilePhone(phone, phoneObject, input) {\r\n            if(phone){\r\n                if(phoneObject && phoneObject?.formatted.length >0 && (!phoneObject?.valid || phoneObject?.valid==undefined)){\r\n                 this.phoneError=true;\r\n            }else\r\n             if (phoneObject?.formatted && phoneObject?.valid) {\r\n                 phone=phoneObject.formatted;\r\n                 this.fieldInfo.value = phoneObject.formatted;\r\n                 this.phoneError=false;\r\n             }\r\n    }\r\n        },\r\n        onCancel: function () {\r\n            this.$router.push({ name: 'CRMAccounts' });\r\n        },\r\n        IsPaste: function (evt, name) {\r\n            var nameArray = [\"commission_percentage\", \"txtmobile\", \"annual_revenue\"]\r\n            if (nameArray.indexOf(name) > -1) {\r\n                if (!IsNumeric(evt.clipboardData.getData('text'))) {\r\n                    evt.preventDefault();\r\n                }\r\n            }\r\n        },\r\n        isNumber: function (evt, name) {\r\n            var nameArray = [\"commission_percentage\", \"txtmobile\"]\r\n         if (nameArray.indexOf(name) > -1) {\r\n                var charCode = (evt.which) ? evt.which : evt.keyCode;\r\n                if (((charCode > 31 && (charCode < 48 || charCode > 57)) && charCode !== 46) || evt.currentTarget.value.length > 15) {\r\n                    evt.preventDefault();\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        },           \r\n        ChkContactbox: function (e) {\r\n                var vm=this;\r\n                vm.IscheckContact=$(e.target).prop(\"checked\");\r\n                if (!vm.IscheckContact) {\r\n                    vm.txtfirstname = ''\r\n                    vm.txtlastname = '',\r\n                    vm.txtemailid = '',\r\n                    vm.txtmobile = ''\r\n            }\r\n            if (vm.IscheckContact) {\r\n                var reqid =vm.$route.query.id?vm.$route.query.id:0;\r\n                    reqid = reqid == \"\" ? 0 : reqid;\r\n               \r\n            }\r\n        },\r\n        onKeyDown1: function () {\r\n            ajaxRequestComplete = true;\r\n        },\r\n        FillDropdown:async  function (item, action) {            \r\n            var vm = this;\r\n            vm.Loading= true;\r\n            var refId = '';\r\n            var search = '';\r\n            var typeCode = '';\r\n            if (item.name != \"status_id\") {\r\n                if (item.name == 'account_country') {\r\n                    typeCode = 'ACCOUNT_STATE';\r\n                }\r\n                else {\r\n                    typeCode = '';\r\n                }\r\n                var itemname = item.name;\r\n                refId = item.value;\r\n                if (refId != '') {\r\n                    var url = `id=&moduleName=CRM&type=${typeCode}&refId=${refId}`;\r\n                  await LeadDataService.getDDLData(url + \"&search=\" + escape(search)).then(function (response) {\r\n                    vm.Loading= false;\r\n                        var json = [];\r\n                        if (response.data != null) {\r\n                            json = response.data.DATA;\r\n                        }\r\n                        $.each(vm.GroupBy, function (index, item) {\r\n                            $.each(item.Data, function (index, element) {\r\n                                if (element.name == 'account_state' && itemname == 'account_country') {\r\n                                    element.select_options = json;\r\n                                }\r\n                                else if (element.name == 'account_city' && itemname == 'account_state') {\r\n                                    element.select_options = json;\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                    });\r\n                }\r\n            }\r\n            else if (item.name == \"status_id\") {\r\n                $.each(this.GroupBy, function (index, itm) {\r\n                    $.each(itm.Data, function (index, element) {\r\n                        if ((element.name == 'account_state' || element.name == 'account_city')) {\r\n                            element.is_required = false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        openaddIndustrypopup: function (item) {\r\n            this.IndustryItemObject = item;\r\n            this.showaddindustryModal = true;\r\n        },\r\n        openaddcitypopup: function (item) {\r\n            this.cityItemObject = item;\r\n            this.showaddcityModal = true;\r\n        },\r\n        GetValidation: function (object) {\r\n            var obj = {};\r\n            if (object.is_required) {\r\n                obj['required'] = true;\r\n            }\r\n            if (object.length > 0) {\r\n                obj['max'] = object.length;\r\n            }\r\n            if (object.validation_type == \"email\") {\r\n                obj['email'] = true;\r\n            }\r\n            if (object.dt_code == \"date\") {\r\n                obj['date_format'] = String(Globalize.culture().calendar.patterns.d).toUpperCase();\r\n            }\r\n            if (object.dt_code == \"decimal\") {\r\n                obj['decimal'] = 2;\r\n            }\r\n            if (object.dt_code == \"int\" || object.dt_code == \"bigint\") {\r\n                obj['numeric'] = true;\r\n            }\r\n            if (object.dt_code == \"url\") {\r\n                obj['url'] = 'require_protocol';\r\n            }\r\n            if (object.name == \"commission_percentage\") {\r\n                obj['min_value'] = 0; obj['max_value'] = 100; obj['decimal'] = 2;\r\n            }\r\n            if (object.name == \"account_zip_code\") {\r\n                obj['numeric'] = true;\r\n                obj['min'] = 5;\r\n                obj['max'] = 15;\r\n            }\r\n            if (object.name == \"employees\") {\r\n                obj['numeric'] = true;\r\n            }\r\n            if (object.name == \"account_city\") {\r\n                obj['regex'] = /^[a-zA-Z ]*$/;\r\n            }\r\n            if (object.name == \"website\") {\r\n                obj['regex'] = /^(https?: \\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})*$/\r\n            }\r\n            return obj;\r\n        },\r\n        SubmitData(values) {\r\n          var vm=this;\r\n            // this.$refs.form.setFieldTouched('Email', true);\r\n            // this.$refs.form.setFieldTouched('LastName', true);\r\n            // this.$refs.form.setFieldTouched('FirstName', true);             \r\n            // this.LeadData.forEach((item) => {\r\n            //     if (item.astype != '' && item.form_field_visibility == 'YES') {\r\n            //         if (item.dt_code == \"select\" && item.value) {\r\n            //             try {\r\n            //                 values[item.name] = String((typeof item.value === 'object' && item.value !== null) ? item.value.value : item.value);\r\n            //                 vm.$refs.form.setFieldTouched(item.name, false);\r\n            //             } catch (ex) { console.log('error while get dropdown parse data') }\r\n            //         }\r\n            //         if (item.dt_code == 'date' && item.value) {\r\n            //             values[item.name] =vm.$options.filters.formatDate(item.value);\r\n            //             vm.$refs.form.setFieldTouched(item.name, false);\r\n            //         } else {\r\n            //             vm.$refs.form.setFieldTouched(item.name, true);\r\n            //         }                 \r\n            //     }\r\n            // });            \r\n            var Cname = \"\";\r\n            var adrs1 = \"\";\r\n            var adrs2 = \"\";\r\n            var cty = \"\";\r\n            var zipc = \"\";\r\n            var accname = \"\";\r\n            var accowner=\"\";\r\n            vm.$refs.form.validate().then((result) => {\r\n                vm.vSelectValidate = true;\r\n                if (result) {\r\n                    vm.isLoading=true;\r\n                    var fullJson = vm.LeadData;\r\n                    var data = [];\r\n                    var validation = [];\r\n                    var accountcontact = [];\r\n\r\n                    var Isvalidcnt = 0;\r\n                    $.each(fullJson, function (key, item) {\r\n                        var validationObject = {\r\n                            field_name: item.name,\r\n                            required: item.is_required,\r\n                            length: item.length,\r\n                            type: item.validation_type\r\n                        };\r\n                        if (item.name == \"account_name\") {\r\n                            accname = item.value;\r\n                        }\r\n                        if (item.name == \"account_owner\") {\r\n                            // item.value = values[item.name];\r\n                            accowner=item.value;\r\n                        }\r\n                        if (item.name == \"company_name\")\r\n                            Cname = item.value;\r\n                        if (item.name == \"account_address\")\r\n                            adrs1 = item.value;\r\n                        if (item.name == \"account_address2\")\r\n                            adrs2 = item.value;\r\n                        if (item.name == \"account_city\")\r\n                            cty = item.value;\r\n                        if (item.name == \"account_zip_code\")\r\n                            zipc = item.value;\r\n                        if (item.name == \"phone\") {\r\n                            var datalist = vm.phoneList.filter(v => v.field_id == item.custom_field_id);\r\n                            if (datalist.length > 0) {\r\n                                item.value = datalist[0].value;\r\n                                if (!datalist[0].isValid && $.trim(item.value).length > 0) {\r\n                                    $(\"#spanPhone\").show();\r\n                                    Isvalidcnt++;\r\n                                }\r\n                            }\r\n                        }\r\n                        var fieldValue = (item.name == \"account_id\" ? vm.accountID : item.value);\r\n                        if (item.dt_code == \"date\") {\r\n                            fieldValue = item.value;\r\n                        }\r\n                        if (item.dt_code == \"checkbox\") {\r\n                            var filtered = item.select_value.filter(function (el) {\r\n                                return (el != null && el != \"\");\r\n                            });\r\n                            fieldValue = filtered.join(',');\r\n                        }\r\n                        if (item.dt_code == \"select\") {\r\n                            try {\r\n                                fieldValue = (typeof fieldValue === 'object' && fieldValue !== null) ? fieldValue.value : fieldValue\r\n                            } catch (ex) { }\r\n                        }\r\n                        var dataObject = {\r\n                            field_name: item.name,\r\n                            field_value: fieldValue,\r\n                            custom_field_id: item.custom_field_id\r\n                        };\r\n                        data.push(dataObject);\r\n                        validation.push(validationObject);\r\n                        accountcontact.push(accountcontactobject);\r\n                    });\r\n                    const urlParams = new URLSearchParams(window.location.search);\r\n                    var IdExist = urlParams.get('id') || 0;\r\n                    var AccType = urlParams.get('AccountCode') || \"\";\r\n                    if (IdExist == null) {\r\n                        IdExist = 0;\r\n                    }\r\n                    var stateName = $('select[name=\"account_state\"] option:selected').text();\r\n                    var companyaddr = Cname + \" \" + adrs1 + \" \" + adrs2 + \" \" + cty + \" \" + (stateName == \"Select\" ? \"--\" : stateName) + \" \" + zipc;\r\n                    var contactaddr = vm.txtfirstname + \" \" + vm.txtlastname + \" \" + adrs1 + \" \" + adrs2 + \" \" + cty + \" \" + (stateName == \"Select\" ? \"--\" : stateName) + \" \" + zipc;\r\n                    if (IdExist == 0 && accname == '')  \r\n                    {\r\n                        var newAddres = Cname != '' ? $.trim(companyaddr) : $.trim(contactaddr);\r\n                        var previousItem = data[data.findIndex(x => x.field_name == \"account_name\")];\r\n                        previousItem.field_value = newAddres;\r\n                    }\r\n                    if (vm.IscheckContact) {\r\n                        var MobPhone = vm.phoneList.filter(v => v.field_id == 'txtmobile');\r\n                        if (MobPhone.length > 0) {\r\n                            vm.txtmobile = MobPhone[0].value;\r\n                            if (!MobPhone[0].isValid) {\r\n                                $(\"#spantxtmobile\").show();\r\n                                Isvalidcnt++;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (Isvalidcnt > 0) {\r\n\r\n                        return false;\r\n                    }\r\n                    var accountcontactobject = {\r\n                        first_name: vm.txtfirstname,\r\n                        last_name: vm.txtlastname,\r\n                        email_id: vm.txtemailid,\r\n                        mobile_number: vm.txtmobile\r\n                    };\r\n                    var postJSON = null;\r\n                    if (vm.IscheckContact) {\r\n                        postJSON = {\r\n                            data: data,\r\n                            validation: validation,\r\n                            accountcontact: accountcontactobject\r\n                        };\r\n                    }\r\n                    else {\r\n                        postJSON = {\r\n                            data: data,\r\n                            validation: validation\r\n                        };\r\n                    }\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    LeadDataService.SaveAccountInfo(objectPostString).then(function (response) {\r\n                        vm.isLoading=false;\r\n                        if (response.data[0].Code == \"1\") {\r\n                            if (vm.accountID > 0) {\r\n                                vm.ShowAlert(vm.$t('UpdatedSuccess', [vm.$t('Account')]), \"success\", true, vm.$t(\"Alert\"));\r\n\r\n                            } else {\r\n                                vm.ShowAlert(vm.$t('AddedSuccess', [vm.$t('Account')]), \"success\", true, vm.$t(\"Alert\"));\r\n                            }\r\n                            vm.$router.push({ name: 'CRMAccounts' });\r\n                        }\r\n\r\n                        else if (response.data[0].Code == \"2\") {\r\n                            vm.ShowAlert(vm.$t(\"Account name already exist\"), \"warning\", true, vm.$t(\"Alert\"));\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t('AddedError', [vm.$t('Account')]), \"failure\", true, vm.$t(\"Alert\"));\r\n                        }\r\n\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        UpdateSelectJson: function (name, json) {\r\n            $.each(this.GroupBy, function (index, item) {\r\n                $.each(item.Data, function (index, element) {\r\n                    if (element.name == name) {\r\n                        element.select_options = json;\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        FetchData: function () {\r\n            var vm = this;\r\n            vm.isLoading=true;\r\n            var AccountID = vm.accountID == \"0\" ? \"\" : vm.accountID;\r\n            var otherData = [{ id: vm.$route.query.AccountId?vm.$route.query.AccountId:'', name: vm.AccountCode }];\r\n            var convertJson = encodeURIComponent(JSON.stringify(otherData))\r\n            LeadDataService.getFormLayout(vm.ApiURL + \"&id=\" + AccountID + \"&otherData=\" + convertJson)\r\n                .then(function (response) {\r\n                    var IsActive = true;\r\n                    var Compphone = '';\r\n                    vm.isLoading=false;\r\n                    vm.LeadData = response.data.data;\r\n                    if (vm.LeadData != null && vm.LeadData.length > 0) {\r\n                        var groupId = vm.LeadData[0].group_id;\r\n                        $.each(vm.LeadData, $.proxy(function (index, item) {\r\n                            groupId = item.group_id;\r\n                            const urlParams = new URLSearchParams(window.location.search);\r\n                            var IdExist = urlParams.get('id') || 0;\r\n                            var AccType = urlParams.get('AccountCode') || \"\";\r\n                            if (item.name == 'industry_name') {\r\n                                item.isPlusIcon = true;\r\n                            }\r\n                            if (IdExist == null) {\r\n                                IdExist = 0;\r\n                            }\r\n                            if (item.dt_code == 'date') {\r\n                                item.value = item.value == '' ? null : item.value;\r\n                            }\r\n                            if (IdExist == 0 && AccType != \"\" && item.name == \"account_name\") {\r\n                                item.is_required = true;\r\n                            }\r\n                            if (item.dt_code == 'checkbox') {\r\n                                item.select_value = item.value.split(',');\r\n                            }\r\n                            if (item.name == 'account_type' && vm.accountID == 0) {\r\n                                item.value = vm.$route.query.AccountId?vm.$route.query.AccountId:''\r\n                            }\r\n\r\n                            if (item.name == 'account_owner') {\r\n                                if (item.value == \"\") {\r\n                                    item.select_value = vm.name;\r\n                                    item.value = {name:item.select_value,value:vm.Id,first_value: null, second_value: null};                                    \r\n                                    item.select_options=[{name:item.select_value,value:vm.Id,first_value: null, second_value: null}]\r\n                                }\r\n                                else {\r\n                                    item.select_options =vm.MakeNormalArray(item.select_options);\r\n                                }\r\n                            }\r\n                            if (item.name == \"status_id\") {\r\n                                IsActive = item.value;\r\n                            }\r\n                            if (item.name == 'account_state' || item.name == \"account_city\") {\r\n                                item.is_required = false;\r\n                                item.select_options = null;\r\n                            }\r\n                            if (item.name == 'account_country') {\r\n                                vm.CountryData = item;\r\n                            }\r\n                            \r\n                            if (item.name == 'account_country' && vm.accountID > 0) {\r\n                                if (item.value == '') {\r\n                                    var cntrydata = JSON.parse(vm.CountryData.select_options);\r\n                                    $.each(cntrydata, function (index, element) {\r\n                                        if (element.name == \"United States\")\r\n                                            vm.CountryData.value = element.value;\r\n                                    });\r\n                                    vm.FillDropdown(vm.CountryData);\r\n                                }\r\n                                else {\r\n                                    vm.FillDropdown(item, 'Edit');\r\n                                }\r\n                            }\r\n                            if (item.name == 'account_state' && vm.accountID > 0) {\r\n                                vm.FillDropdown(item, 'Edit');\r\n                            }\r\n                            if (item.name == \"phone\") {\r\n                                Compphone = item.value;\r\n                            }\r\n                            var chkGroup = $.grep(vm.GroupBy, function (element, index) {\r\n                                return element.group_id == groupId;\r\n                            });\r\n                            if (chkGroup.length == 0) {\r\n                                var returnedData = $.grep(vm.LeadData, function (element, index) {\r\n                                    return element.group_id == groupId;\r\n                                });\r\n                                if (vm.accountID > 0) {\r\n                                    $.each(returnedData, function (filedIndex, fieldItem) {\r\n                                        if (fieldItem.dropdown_type == \"custom\" && fieldItem.picklist_options == \"Lookup\") {\r\n                                            fieldItem.select_options = vm.MakeNormalArray(fieldItem.select_options);\r\n                                            fieldItem.select_value = fieldItem.select_options;\r\n                                            if (fieldItem.select_options != null && fieldItem.select_options.length > 0) {\r\n                                                fieldItem.value = fieldItem.select_options[0];\r\n                                            }\r\n                                        }\r\n                                        else if (fieldItem.dt_code == \"decimal\" && fieldItem.form_field_visibility == \"YES\" && fieldItem.value > 0) {\r\n                                            fieldItem.value = parseFloat(fieldItem.value, 10);\r\n                                        }\r\n                                        else if (fieldItem.dt_code == \"date\") {\r\n                                            fieldItem.value = fieldItem.value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                                if (returnedData.length > 0) {\r\n                                    var objGroup = {\r\n                                        group_id: groupId,\r\n                                        group_name: returnedData[0].group_name,\r\n                                        group_display_name: returnedData[0].group_display_name,\r\n                                        Data: returnedData\r\n                                    };\r\n                                    vm.GroupBy.push(objGroup);\r\n                                }\r\n                            }\r\n                        }, vm));\r\n                        setTimeout(function () { vm.CheckBoxBootstrap() }, 100);\r\n                        setTimeout(function () {                            \r\n                            var cntrydata = JSON.parse(vm.CountryData.select_options);\r\n                            if (AccountID == \"\") {\r\n                                $.each(cntrydata, function (index, item) {\r\n                                    if (item.name == \"United States\")\r\n                                        vm.CountryData.value = item.value;\r\n                                });\r\n                                vm.FillDropdown(vm.CountryData);                               \r\n                            }\r\n                        }, 300);\r\n                       \r\n                        //  vm.$refs.form.resetForm({values:frmFields});\r\n                    }\r\n                });\r\n        },\r\n        onSearch: function onSearch(search, objItem,selctedValue) { \r\n            this.searchSelectData(search, this, objItem,selctedValue);       \r\n        },\r\n        searchSelectData: function (search, vm, objItem,selctedValue) {\r\n            this.ShowSearchData(search, vm, objItem,selctedValue);\r\n        },\r\n        ShowSearchData(search, vm, objItem,selctedValue) {\r\n            if (typeof (selctedValue) == 'undefined') {\r\n                    selctedValue = 0;\r\n                }\r\n            var url = \"id=&moduleName=CRM\"+\"&type=\"+objItem.field_code;\r\n            if (objItem.dependent_type != 'fill') {\r\n                    url += \"&refId=\" + selctedValue;\r\n                }\r\n                LeadDataService.getDDLData(url + \"&search=\" + escape(search))\r\n                .then(response => {\r\n                    var json = [];\r\n                    if(response.data==''){                       \r\n                    }\r\n                    if (response.data != '') {\r\n                        json = response.data;\r\n                    } \r\n                        objItem.select_options = json.DATA;                       \r\n                        return objItem.select_options;           \r\n                });\r\n        },\r\n        setSelectedValue: function (item, val) { \r\n                var vm = this;\r\n                try {\r\n                    if (Array.isArray(val)) {\r\n                        item.value = val[0];\r\n                    }\r\n                    else {\r\n                        if (item.name == 'account_owner') {\r\n                            vm.ShowSearchData('', vm, item, '');\r\n                        }\r\n                        else {\r\n                          if (item.has_dependent > 0) {\r\n                                $.each(vm.GroupBy, $.proxy(function (key, parentItem) {\r\n                                    $.each(parentItem.Data, function (childKey, childItem) {\r\n                                        if (childItem.parent_id == item.custom_field_id && childItem.dependent_type == 'fill') {\r\n                                            vm.ShowSearchData('', vm, childItem, val.value);\r\n                                        }\r\n                                    });\r\n                                }, this));\r\n                            }\r\n                        }\r\n                        item.value = val;\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                }\r\n            },\r\n    }\r\n}\r\n</script>\r\n<template>\r\n\r\n   <section class=\"main-content\">\r\n     \r\n        <div id=\"divMainLeadData\" v-cloak>\r\n            <loader :is-visible=\"isLoading\"></loader>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{$t('Manage')}} {{$t('Account')}}</span>\r\n                        <span class=\"p-actions float-right\">\r\n                            <!-- <a href=\"javascript:;\" class=\"p-action-btn text-white\" :title=\"$t('PageTour')\"\r\n                            @click=\"setTourGuideSteps(0)\"><em class=\"fa fa-road\"\r\n                                    aria-hidden=\"true\"></em><br>{{$t('PageTour')}}</a> -->\r\n                            <RouterLink :to=\"'/CRM/Accounts'\" title=\"\" id=\"backtolist\"\r\n                                class=\"p-action-btn text-white float-right\" :data-original-title=\"$t('BacktoList')\"><em class=\"fa fa-angle-double-left pr-2\"></em><br />{{ $t('BacktoList') }}</RouterLink>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"border p-3\">\r\n                <Form v-slot=\"{ valid,errors}\" ref=\"form\">\r\n                    <DynamicForm :schema=\"GroupBy\" :dateformat=\"dateformat\" v-on:openaddIndustrypopup=\"openaddIndustrypopup\"\r\n                    v-on:FillDropdown=\"FillDropdown\" v-on:onSearchDDL=\"onSearch\"  v-on:setSelectedValue=\"setSelectedValue\" subModuleCode=\"ManageAccount\" />\r\n                    <div class=\"row\" v-if=\"divchkhide\">\r\n                        <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12 float-left my-2\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"float-left\">\r\n                                    <input id=\"chkcontactinfo\" class=\"ml-3\" value=\"1\" \r\n                                        type=\"checkbox\" v-on:change=\"ChkContactbox($event)\">\r\n                                </div>\r\n                                <div class=\"float-left pt-1\">\r\n                                    <span style=\"font-weight: 500;\">Tick to add Contact.</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\" v-if=\"IscheckContact\">\r\n                        <div class=\"col-lg-12 mt-4\">\r\n                            <div class=\"heading-border mb-2\">\r\n                                <h5 class=\"h5\">\r\n                                    <span>{{$t('ContactInformation')}}</span>\r\n                                </h5>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-12 float-left col-lg-6 col-xl-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{$t('FirstName')}}:<span class=\"text-danger\">*</span></label>\r\n                                <Field name=\"FirstName\" :rules=\"{'required':true}\" label=\"First Name\"\r\n                                    v-slot=\"{errors,touched,invalid}\">\r\n                                    <input type=\"text\" v-model=\"txtfirstname\"\r\n                                        v-bind:class=\"{'form-control' : true,'is-invalid': touched && invalid}\"\r\n                                        name=\"FirstName\" maxlength=\"100\">\r\n                                    <span   name=\"FirstName\"\r\n                                        class=\"invalid-feedback\">{{errors[0]}}</span>\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-12 float-left col-lg-6 col-xl-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{$t('LastName')}}:<span class=\"text-danger\">*</span></label>\r\n                                <Field name=\"LastName\" :rules=\"{'required':true}\" label=\"Last Name\"\r\n                                    v-slot=\"{errors,touched,invalid}\">\r\n                                    <input type=\"text\" v-model=\"txtlastname\"\r\n                                        v-bind:class=\"{'form-control' : true,'is-invalid': touched && invalid }\"\r\n                                        name=\"LastName\" maxlength=\"100\">\r\n                                    <span v-if=\"touched && invalid \" name=\"LastName\"\r\n                                        class=\"invalid-feedback\">{{errors[0]}}</span>\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-12 float-left col-lg-6 col-xl-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{$t('Email')}}:<span class=\"text-danger\">*</span></label>\r\n                                <Field name=\"Email\" :rules=\"{'required':true,'email':true}\" label=\"Email\"\r\n                                    v-slot=\"{errors,touched,invalid}\">\r\n                                    <input type=\"text\" v-model=\"txtemailid\" id=\"Emailid\" name=\"Email\"\r\n                                        v-bind:class=\"{'form-control':true,'is-invalid': touched && invalid}\">\r\n                                    <span   name=\"Email\" class=\"invalid-feedback\">{{ errors[0] }}</span>\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-12 float-left col-lg-6 col-xl-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{$t('Mobile')}}: </label>\r\n                                <vue-tel-input id=\"txtmobile\" mode=\"international\" @input=\"onInputMobilePhone\" v-model=\"txtmobile\" name=\"txtmobile\"></vue-tel-input>\r\n                                <span   :name=\"txtmobile\" class=\"invalid-feedback d-block\" >{{errors[0]}}</span>\r\n                                <span v-if=\"phoneError\"  class=\"invalid-feedback d-block\" >Enter valid number.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            <div class=\"row flex-row-reverse mt-2\">\r\n              <div class=\"col-lg-6 text-right\">\r\n                <a href=\"javascript:;\"               \r\n                  v-bind:class=\"{ disabled: false }\"\r\n                  v-on:click=\"SubmitData(valid,errors)\"\r\n                   class=\"btn btn-success formbtn\"\r\n                  title=\"Save\"\r\n                >\r\n                  <em class=\"fa fa-save pr-2\"></em>{{$t('Save')}}\r\n                </a>&nbsp;\r\n                <a href=\"javascript:void(0)\" class=\"btn btn-danger\" title=\"Cancel\" @click=\"onCancel\">\r\n                  <em class=\"fa fa-close pr-2\"></em>{{$t('Cancel')}}\r\n                </a>                \r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"py-2\">\r\n                 <small class=\"text-danger\">{{$t('MandatoryString')}}</small>\r\n                </div>\r\n              </div>\r\n            </div>   \r\n            <modaladdindustry v-if=\"showaddindustryModal\" @close=\"showaddindustryModal=false\" @updatedata=\"UpdateSelectJson\"></modaladdindustry>\r\n          </Form>\r\n        </div>\r\n    </div>\r\n    </section>\r\n\r\n</template>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=b0833238&\"\nimport script from \"./Manage.vue?vue&type=script&lang=js&\"\nexport * from \"./Manage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}