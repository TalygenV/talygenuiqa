{"version":3,"sources":["webpack:///./src/views/CRM/CommunicationModes/ManageCommunicationModes.vue?3b3d","webpack:///src/views/CRM/CommunicationModes/ManageCommunicationModes.vue","webpack:///./src/views/CRM/CommunicationModes/ManageCommunicationModes.vue?2b05","webpack:///./src/views/CRM/CommunicationModes/ManageCommunicationModes.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","ref","buttons","FormSchema","on","onSubmit","staticRenderFns","data","id","modeTypeId","layoutType","Data","astype","label","name","value","placeholder","validationRules","max","config","options","rows","cols","type","class","text","onClick","created","methods","onCancel","goHome","GetStatusList","CommunicationModesDataService","response","vm","EditCommunicationModeType","formfields","val","CommunicationTypeName","CommunicationTypeDescription","StatusId","ModeTypeId","component"],"mappings":"8HAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,UAAU,CAACE,YAAY,eAAeC,MAAM,CAAC,GAAK,iBAAiB,CAACH,EAAG,SAAS,CAACG,MAAM,CAAC,aAAaP,EAAIQ,aAAaJ,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,gCAAgC,CAACF,EAAG,OAAO,CAACE,YAAY,qBAAqB,CAACN,EAAIS,GAAGT,EAAIU,GAAGV,EAAIW,GAAG,oCAAoCP,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,eAAe,CAACQ,IAAI,OAAOL,MAAM,CAAC,KAAO,KAAK,QAAUP,EAAIa,QAAQ,OAASb,EAAIc,YAAYC,GAAG,CAAC,SAAWf,EAAIgB,YAAYZ,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,QAAQ,CAACA,EAAG,OAAO,CAACE,YAAY,eAAe,CAACN,EAAIS,GAAG,IAAIT,EAAIU,GAAGV,EAAIW,GAAG,8BAA8B,MAAM,MAClyBM,EAAkB,G,4CCwBP,GACfC,KADA,WAEA,OACAC,yBACAC,aACAZ,aACAM,YACA,CACAO,oBACAC,MACA,CACAC,mBACAC,uCACAC,6BACAC,SACAC,kDACAC,iBAAA,YAAAC,UAEA,CACAN,qBACAC,wBACAC,cACAC,aACAC,eACAG,QACAC,eAKA,CACAV,oBACAC,MACA,CACAC,uBACAC,6BACAC,6BACAC,SACAC,wCACAG,QACAE,OACAC,YAOApB,SACA,CACAqB,cACAC,6BACAC,8CAEA,CACAF,cACAC,uBACAC,8CACAC,0BAMAC,mBACA,iCACA,0BACA,uDAGAC,SACAC,oBACA,mBAAAf,gCAEAgB,kBACA,gDAEAC,4BACA,WACA,mDACAC,0CACAC,4BACA,OACAnB,cACAC,mBAEAmB,kDAEAA,kCAGAC,sCACA,WACAH,qDACA,eACAE,kCACAA,qEACAA,8DACAA,sDAIA7B,SAhCA,SAgCA+B,EAAAC,GACA,WACAH,eACA,OACAI,8CACAC,qDACAC,kBACAC,yBAEA,oBACAT,kDACA,aACAE,4FACAA,YAEA,aACAA,0FACAA,YAEA,YACAA,2FAGAA,wFAEAA,qBCxJgY,I,YCO5XQ,EAAY,eACd,EACAtD,EACAkB,GACA,EACA,KACA,KACA,MAIa,aAAAoC,E","file":"js/ManageCommunication.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('section',{staticClass:\"main-content\",attrs:{\"id\":\"main-content\"}},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"col-md-12 p-0\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ManageCommunicationModes')))])])]),_c('div',{staticClass:\"col-md-12 p-0\"},[_c('div',{staticClass:\"border p-3\"},[_c('dynamic-form',{ref:\"form\",attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}}),_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"py-2\"},[_c('small',[_c('span',{staticClass:\"text-danger\"},[_vm._v(\" \"+_vm._s(_vm.$t('MandatoryString')))])])])])],1)])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <section id=\"main-content\" class=\"main-content\">\r\n            <loader :is-visible=\"isLoading\"></loader>\r\n            <div class=\"col-md-12 p-0\">\r\n                <div class=\"theme-primary partition-full\">\r\n                    <span class=\"p-name text-white\">{{ $t('ManageCommunicationModes') }}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12 p-0\">\r\n                <div class=\"border p-3\">\r\n                    <dynamic-form lang=\"en\" ref=\"form\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\">\r\n                    </dynamic-form>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"py-2\"><small><span class=\"text-danger\">\r\n                                    {{ $t('MandatoryString') }}</span></small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script>\r\nimport CommunicationModesDataService from \"../../../services/DataService\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            id: this.$route.params.id,\r\n            modeTypeId: 0,\r\n            isLoading: false,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('communicationTypeName'),\r\n                            name: \"CommunicationTypeName\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('EntercommunicationTypeName'),\r\n                            validationRules: { \"required\": true, max: 400 },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Status'),\r\n                            name: \"Status\",\r\n                            value: \"1001\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: this.$t('Description'),\r\n                            name: \"CommunicationTypeName\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('EnterDescription'),\r\n                            config: {\r\n                                rows: 4,\r\n                                cols: 7\r\n                            },\r\n                        }\r\n                    ],\r\n                }\r\n\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Submit\",\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.onCancel\r\n                }\r\n            ],\r\n\r\n        }\r\n    },\r\n    created: function () {\r\n        this.GetStatusList(\"Views\", \"en\");\r\n        if (this.$route.params.id != 0) {\r\n            this.EditCommunicationModeType(this.$route.params.id);\r\n        }\r\n    },\r\n    methods: {\r\n        onCancel: function () {\r\n            this.$router.push({ name: 'CommunicationmodeList' });\r\n        },\r\n        goHome: function () {\r\n            this.$router.push('/CommunicationModes/Index');\r\n        },\r\n        GetStatusList: function (StatusType, lang) {\r\n            var vm = this;\r\n            var url = \"langCode=\" + lang + \"&statusType=\" + StatusType + \"&hasglobal=true\";\r\n            CommunicationModesDataService.GetStatusList(url).then(function (response) {\r\n                response.data.forEach(element => {\r\n                    let obj = {\r\n                        name: element.status,\r\n                        value: element.statuS_ID\r\n                    }\r\n                    vm.FormSchema[0].Data[1].config.options.push(obj);\r\n                });\r\n                vm.$refs.form.UpdateKeyValue();\r\n            });\r\n        },\r\n        EditCommunicationModeType: function (id) {\r\n            var vm = this;\r\n            CommunicationModesDataService.GetCommunicationModeData(id).then(response => {\r\n                if (response.data != null) {\r\n                    vm.modeTypeId = response.data[0].modeTypeId;\r\n                    vm.FormSchema[1].Data[0].value = response.data[0].communicationTypeDescription;\r\n                    vm.FormSchema[0].Data[0].value = response.data[0].communicationTypeName;\r\n                    vm.FormSchema[0].Data[1].value = response.data[0].statusId;\r\n                }\r\n            });\r\n        },\r\n        onSubmit(formfields, val) {            \r\n            var vm = this;     \r\n            vm.isLoading=true;           \r\n            var jsonobj = {\r\n                CommunicationTypeName: formfields.CommunicationTypeName,\r\n                CommunicationTypeDescription: formfields.CommunicationTypeName,\r\n                StatusId: formfields.Status,\r\n                ModeTypeId: vm.modeTypeId,\r\n            };                     \r\n            var jobj = JSON.stringify(jsonobj);\r\n            CommunicationModesDataService.CommunicationModesAdd(jobj).then((response) => {\r\n                if (response.data == '0') {\r\n                    vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t('CommunicationModes')]), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.goHome();\r\n                }\r\n                else if (response.data == '1') {\r\n                  vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t('CommunicationModes')]), \"success\", true, vm.$t(\"Alert\"));\r\n                  vm.goHome();\r\n                }\r\n                else if (response.data == '2') {\r\n                   vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t('CommunicationModes')]), \"warning\", true, vm.$t(\"Alert\"));\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t('AddedError', [vm.$t(\"CommunicationModes\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                }\r\n                vm.isLoading=false;\r\n            })     \r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ManageCommunicationModes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ManageCommunicationModes.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ManageCommunicationModes.vue?vue&type=template&id=5745a493&\"\nimport script from \"./ManageCommunicationModes.vue?vue&type=script&lang=js&\"\nexport * from \"./ManageCommunicationModes.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}