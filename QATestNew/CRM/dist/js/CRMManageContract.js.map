{"version":3,"sources":["webpack:///./src/views/CRM/Contract/Manage.vue?ab58","webpack:///src/views/CRM/Contract/Manage.vue","webpack:///./src/views/CRM/Contract/Manage.vue?1d72","webpack:///./src/views/CRM/Contract/Manage.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","isLoading","_m","ref","scopedSlots","_u","key","fn","valid","errors","GroupBy","dateFormat","DependentOption","on","DependentDateObject","onSearch","onBlur","setSelectedValue","class","disabled","submited","$event","SubmitData","_v","onCancel","_s","$t","staticRenderFns","components","DynamicForm","data","value","LeadData","LeadOwner","Channel","IndustryType","Status","contractID","StartDate","useCurrent","showClear","showClose","allowInputToggle","minDate","DependentOptionEdit","selected","selectoptions","vSelectValidate","clientData","cutomerId","isAccountSelected","userid","companyId","username","created","methods","checkDate","$","element","onKeyDown","ajaxRequestComplete","searchSelectData","ShowSearchData","search","vm","objItem","ContractDataService","item","val","getclientAssociatedWithAccount","sourceId","moduleName","subModuleCode","accountName","contactIds","accountId","user_id","first_name","last_name","email_id","account_id","setTimeout","field_name","required","length","type","fieldValue","field_value","custom_field_id","validation","name","MakeNormalArray","MakeSelectArray","array","FetchData","then","groupId","fieldItem","group_id","group_name","group_display_name","Data","frmFields","component"],"mappings":"0HAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,UAAU,CAACE,YAAY,gBAAgB,CAACF,EAAG,SAAS,CAACG,MAAM,CAAC,aAAaP,EAAIQ,aAAaJ,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,oBAAoB,CAACP,EAAIS,GAAG,GAAGL,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,OAAO,CAACM,IAAI,OAAOC,YAAYX,EAAIY,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASJ,GAC5V,IAAIK,EAAQL,EAAIK,MACZC,EAASN,EAAIM,OACjB,MAAO,CAACZ,EAAG,cAAc,CAACG,MAAM,CAAC,OAASP,EAAIiB,QAAQ,WAAajB,EAAIkB,WAAW,gBAAkBlB,EAAImB,iBAAiBC,GAAG,CAAC,iBAAmBpB,EAAIqB,oBAAoB,YAAcrB,EAAIsB,SAAS,OAAStB,EAAIuB,OAAO,iBAAmBvB,EAAIwB,oBAAoBpB,EAAG,MAAM,CAACE,YAAY,6BAA6B,CAACF,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACF,EAAG,IAAI,CAACE,YAAY,gCAAgCmB,MAAM,CAACC,SAAU1B,EAAI2B,UAAUpB,MAAM,CAAC,KAAO,eAAe,MAAQ,QAAQa,GAAG,CAAC,MAAQ,SAASQ,GAAQ,OAAO5B,EAAI6B,WAAYd,EAAMC,MAAW,CAACZ,EAAG,KAAK,CAACE,YAAY,oBAAoBN,EAAI8B,GAAG,WAAW9B,EAAI8B,GAAG,MAAM1B,EAAG,IAAI,CAACE,YAAY,iBAAiBC,MAAM,CAAC,KAAO,qBAAqB,MAAQ,UAAUa,GAAG,CAAC,MAAQpB,EAAI+B,WAAW,CAAC3B,EAAG,KAAK,CAACE,YAAY,qBAAqBN,EAAI8B,GAAG,eAAe1B,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,QAAQ,CAACE,YAAY,eAAe,CAACN,EAAI8B,GAAG9B,EAAIgC,GAAGhC,EAAIiC,GAAG,qCAAqC,MAAM,IAC98BC,EAAkB,CAAC,WAAa,IAAIlC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACE,YAAY,gCAAgC,CAACF,EAAG,OAAO,CAACE,YAAY,qBAAqB,CAACN,EAAI8B,GAAG,sBAAsB1B,EAAG,OAAO,CAACE,YAAY,wB,mLCCjU,GACf6B,YACAC,oBAEAC,KAJA,WAKA,OACAC,SACA9B,aACA+B,cACAC,eACAvB,WACAwB,aACAC,kBACAC,YACAC,iCACAC,uBACA1B,kBACA2B,cACAC,aACAC,aACAC,oBACAC,8BAEA,CACAJ,cACAC,aACAC,aACAC,oBACAC,+BAGAC,sBACAL,cACAC,aACAC,aACAC,oBACAC,gCAEA,CACAJ,cACAC,aACAC,aACAC,oBACAC,iCAGAE,YACAC,iBACAC,mBACA3B,YACA4B,cACAC,YACAC,qBACAC,YACAC,eACAC,cACA1C,kBAGA2C,mBACA,gCACA,0CACA,oCACA,4CACA,kBAEAC,SAEAzC,kCAEA,kCACA,eAEA0C,EADA,8BACAA,wBAGAA,QAEA,yBACAjB,cACAC,aACAC,aACAC,oBACAC,WAEAc,qCACAA,+BACA,8BACAC,uBAIA,iCACA,WAEAF,EADA,8BACAA,wBAGAA,QAEA,yBACAjB,cACAC,aACAC,aACAC,oBACAC,WAEAc,qCACAA,+BACA,6BACAC,oBAMAC,qBACAC,wBAEA7C,uBACA,iCAEA8C,iCACA,4BAEAC,eA3DA,SA2DAC,EAAAC,EAAAC,GAEA,yFACAC,4DACA,aACA,WAEA,OADAD,wBACA,qBAIAhD,iBAtEA,SAsEAkD,EAAAC,GAGA,IACA,iBACAD,aAGAA,UAEA,sBACA,6CAGA,YAGAE,2CAAA,WACA,GACAC,YACAC,iBACAC,8BACAC,eACAC,cACAC,aAEA3B,cACA,wBACAkB,wCACA,gCACA,yCACA,uBACA,OACAU,UACAC,cACAC,aACAC,YACAC,cAEA,qBACA,uBAGAC,yCACAA,8DAGA3D,yBACA,WAiBA0C,0CAEA,GADAA,qBACA,GACAA,eACAA,cACA,iBACA,KACA,KACA,mDACA,uCACA,uBAEAP,0BACA,OACAyB,kBACAC,uBACAC,gBACAC,wBAEA,0EAKA,GAJAC,8BACA,oBACAA,WAEA,uBACA,yCACA,yBAEAA,cAEA,uBACA,IACAA,mDACA,UAEA,uBACAA,YAEA,wBACAA,YAEA,uBACAA,eAEA,wBACAA,gBAEA,uBACAA,2CAEA,wBACAA,2CAEA,OACAJ,kBACAK,cACAC,mCAEA1D,UACA2D,aAEA,OACA3D,OACA2D,aACAzC,cAEA,oBACAkB,yCACAF,eACA,qBACA,eACAA,kFAGAA,gFAEAA,gBAAA0B,mBAGA1B,8EAEAA,sBAKAhD,OA7NA,SA6NAmD,GACA,IACA,2BACAA,8CACA,+CAEA,YAIA3C,oBACA,mBAAAkE,mBAEAC,4BACA,KACA,IACA,qBAEA,SACA,cAIA5D,MAGA6D,4BACA,SACA,sCACA,kGACA,OAAAF,UAAA3D,YACA8D,UAEA,UAEAC,qBACA,WACA9B,eACA,iGACAE,wBACA6B,MAAA,YAGA,GAFA/B,eACAA,uBACA,uCACA,oBACAA,4BACAA,gBACA,6BACAP,6CACAuC,aAEA,wCACA,wBAaA,GAVA,wBACAhC,qBAEA,wBACAG,mCAEA,sBACAH,8BAGA,aACA,yCACA,wBAoBA,GAlBA,gBACAP,0BAEA,yDACAwC,qDACAA,gCACA,oDACAA,8BAGA,yEAGA,oBACAA,iBAHAA,6CAOA,YACA,OACAC,WACAC,2BACAC,2CACAC,QAEArC,sBAGAA,IAEAiB,uBAAAjB,wBAAA,KACAiB,uBAAAjB,2BAAA,KAGA,SACAA,gCACA,+CACAsC,4BC9Y8W,I,YCO1WC,EAAY,eACd,EACA/G,EACAmC,GACA,EACA,KACA,KACA,MAIa,aAAA4E,E","file":"js/CRMManageContract.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{attrs:{\"id\":\"divMainLeadData\"}},[_vm._m(0),_c('div',{staticClass:\"border p-3\"},[_c('Form',{ref:\"form\",scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar valid = ref.valid;\nvar errors = ref.errors;\nreturn [_c('DynamicForm',{attrs:{\"schema\":_vm.GroupBy,\"dateformat\":_vm.dateFormat,\"DependentOption\":_vm.DependentOption},on:{\"setDependentDate\":_vm.DependentDateObject,\"onSearchDDL\":_vm.onSearch,\"onBlur\":_vm.onBlur,\"setSelectedValue\":_vm.setSelectedValue}}),_c('div',{staticClass:\"row flex-row-reverse mt-2\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success addContract_a\",class:{disabled: _vm.submited},attrs:{\"href\":\"javascript:;\",\"title\":\"Save\"},on:{\"click\":function($event){return _vm.SubmitData( valid,errors)}}},[_c('em',{staticClass:\"fa fa-save pr-2\"}),_vm._v(\"Save \")]),_vm._v(\"Â  \"),_c('a',{staticClass:\"btn btn-danger\",attrs:{\"href\":\"javascript:void(0)\",\"title\":\"Cancel\"},on:{\"click\":_vm.onCancel}},[_c('em',{staticClass:\"fa fa-close pr-2\"}),_vm._v(\"Cancel \")])]),_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"py-2\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])])])]}}])})],1)])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(\"Manage Contracts\")]),_c('span',{staticClass:\"float-right\"})])])])}]\n\nexport { render, staticRenderFns }","\r\n<script>\r\nimport ContractDataService from \"../../../services/DataService\";\r\nimport DynamicForm from \"../../../components/Common/DynamicForm.vue\";\r\nimport $ from \"jquery\";\r\nexport default {\r\n    components: {\r\n        DynamicForm\r\n    },\r\n    data() {\r\n        return {\r\n            value: \"\",\r\n            isLoading:false,\r\n            LeadData: null,\r\n            LeadOwner: null,\r\n            GroupBy: [],\r\n            Channel: null,\r\n            IndustryType: null,\r\n            Status: null,\r\n            contractID: this.$route.params.id,\r\n            StartDate: '01/01/1990',\r\n            DependentOption: [{\r\n                useCurrent: false,\r\n                showClear: true,\r\n                showClose: true,\r\n                allowInputToggle: true,\r\n                minDate: new Date(Date.now())\r\n            },\r\n            {\r\n                useCurrent: false,\r\n                showClear: true,\r\n                showClose: true,\r\n                allowInputToggle: true,\r\n                minDate: new Date(Date.now())\r\n            }\r\n            ],\r\n            DependentOptionEdit: [{\r\n                useCurrent: false,\r\n                showClear: true,\r\n                showClose: true,\r\n                allowInputToggle: true,\r\n                minDate: new Date('01/01/1990')\r\n            },\r\n            {\r\n                useCurrent: false,\r\n                showClear: true,\r\n                showClose: true,\r\n                allowInputToggle: true,\r\n                minDate: new Date('01/01/1990')\r\n            }\r\n            ],\r\n            selected: false,\r\n            selectoptions: [],\r\n            vSelectValidate: false,\r\n            submited: false,\r\n            clientData: [],\r\n            cutomerId: 0,\r\n            isAccountSelected: false,\r\n            userid: null,\r\n            companyId: null,\r\n            username: null,\r\n            dateFormat: null\r\n        }\r\n    },\r\n    created: function () {\r\n        this.userid = this.GetUserInfo.ID;\r\n        this.companyId = this.GetUserInfo.CompanyId;\r\n        this.username = this.GetUserInfo.Name;\r\n        this.dateFormat = this.GetUserInfo.DateFormat;\r\n        this.FetchData();\r\n    },\r\n    methods: {\r\n     \r\n        DependentDateObject: function (item, date) {\r\n            \r\n            if (item.name == 'contract_start_date') {\r\n                var checkDate = new Date();\r\n                if ((typeof date !== 'undefined') && date != '') {\r\n                    checkDate = new Date(Date.parse(date));\r\n                }\r\n                else {\r\n                    checkDate = item.value;\r\n                }\r\n                this.DependentOption[0] = {\r\n                    useCurrent: false,\r\n                    showClear: true,\r\n                    showClose: true,\r\n                    allowInputToggle: true,\r\n                    minDate: checkDate\r\n                }\r\n                $.each(this.GroupBy, function (filedIndex, fieldItem) {\r\n                    $.each(fieldItem.Data, function (index, element) {\r\n                        if (element.name == \"contract_end_date\") {\r\n                            element.value = '';\r\n                        }\r\n                    });\r\n                });\r\n            } else if (item.name == 'billing_start_date') {\r\n                var checkDate = new Date();\r\n                if ((typeof date !== 'undefined') && date != '') {\r\n                    checkDate = new Date(Date.parse(date));\r\n                }\r\n                else {\r\n                    checkDate = item.value;\r\n                }\r\n                this.DependentOption[1] = {\r\n                    useCurrent: false,\r\n                    showClear: true,\r\n                    showClose: true,\r\n                    allowInputToggle: true,\r\n                    minDate: checkDate\r\n                }\r\n                $.each(this.GroupBy, function (filedIndex, fieldItem) {\r\n                    $.each(fieldItem.Data, function (index, element) {\r\n                        if (element.name == \"billing_end_date\") {\r\n                            element.value = '';\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        onKeyDown: function () {\r\n            ajaxRequestComplete = true;\r\n        },\r\n        onSearch: function onSearch(search, objItem) {             \r\n            this.searchSelectData(search, this, objItem);\r\n        },\r\n        searchSelectData:function (search, vm, objItem) {\r\n            this.ShowSearchData(search, vm, objItem);\r\n        },\r\n        ShowSearchData(search, vm, objItem) {\r\n            \r\n            var url = `id=&moduleName=${vm.$route.params.moduleName}&type=${objItem.field_code}`;\r\n            ContractDataService.getDDLData(url + \"&search=\" + escape(search)).then(function (response) {\r\n                var json = response.data;                 \r\n                if (json != null) {\r\n                    objItem.select_options = json.DATA;\r\n                    return objItem.select_options;\r\n                }\r\n            });\r\n        },\r\n        setSelectedValue(item, val) {\r\n            var vm=this;\r\n            // vm.$refs.form.setFieldTouched(item.name, false); \r\n            try {\r\n                if (Array.isArray(val)) {\r\n                    item.value = val[0];\r\n                }\r\n                else {\r\n                    item.value = val;\r\n                }\r\n                if (item.name == 'account_id') {\r\n                    this.getclientAssociatedWithAccount(item.value);\r\n                }\r\n            }\r\n            catch (ex) {\r\n            }\r\n        },\r\n        getclientAssociatedWithAccount: function (accountId) {\r\n            var data = {\r\n                sourceId: '',\r\n                moduleName: 'CRM',\r\n                subModuleCode: 'CRM_CONTRACTS',\r\n                accountName: '',\r\n                contactIds: [],\r\n                accountId: accountId\r\n            };\r\n            clientData = [];\r\n            var objectPostString = JSON.stringify(data);\r\n            ContractDataService.ConvertLead(objectPostString).then(response => {\r\n                if (response.data[0].Status == \"Success\") {\r\n                    var json = this.MakeNormalArray(response.body[0].Value);\r\n                    this.clientData = json.CLIENTS;\r\n                    var textValue = {\r\n                        user_id: 0,\r\n                        first_name: '',\r\n                        last_name: '',\r\n                        email_id: '',\r\n                        account_id: accountId\r\n                    };\r\n                    this.clientData.push(textValue);\r\n                    this.isAccountSelected = true;\r\n                }\r\n                 \r\n                setTimeout(\"RadioButtonBootstrap()\", 500);\r\n                setTimeout(\"ResponsiveDataTable('tablelistingdata')\", 500);\r\n            });\r\n        },        \r\n        SubmitData:function( valid,errors){       \r\n            var vm = this;\r\n            // // vm.LeadData.forEach((item) => {\r\n            // //   if (item.astype != '' && item.form_field_visibility == 'YES') {\r\n            // //     if (item.dt_code == \"select\" && item.value) {\r\n            // //             try {\r\n            // //                 values[item.name] = String((typeof item.value === 'object' && item.value !== null) ? item.value.value : item.value);\r\n            // //                 vm.$refs.form.setFieldTouched(item.name, false);\r\n            // //             } catch (ex) { console.log('error while get dropdown parse data') }\r\n            // //         }\r\n            // //         if (item.dt_code == 'date' && item.value) {\r\n            // //             values[item.name] =vm.$options.filters.formatDate(item.value);\r\n            // //             vm.$refs.form.setFieldTouched(item.name, false);\r\n            // //         } else {\r\n            // //             vm.$refs.form.setFieldTouched(item.name, true);\r\n            // //         }\r\n            // //     }\r\n            // })\r\n            vm.$refs.form.validate().then((result) => {\r\n               vm.vSelectValidate = true;    \r\n                if (result) {\r\n                    vm.isLoading=true;\r\n                    vm.submited = true;                     \r\n                    var fullJson = vm.LeadData;\r\n                    var data = [];\r\n                    var validation = [];\r\n                    var selectedRadioValue = $(\"input[name='radio_clients']:checked\").val();\r\n                    var selectedClient = $.grep(vm.clientData, function (element, index) {\r\n                        return element.user_id == selectedRadioValue;\r\n                    });\r\n                    $.each(fullJson, function (key, item) {\r\n                        var validationObject = {\r\n                            field_name: item.name,\r\n                            required: item.is_required,\r\n                            length: item.length,\r\n                            type: item.validation_type\r\n                        };\r\n                        var fieldValue = (item.name == \"contract_id\" ? vm.stageID : ((typeof item.value === \"undefined\") ? '' : item.value));\r\n                        fieldValue = typeof fieldValue === \"undefined\" ? '' : fieldValue;\r\n                        if (item.dt_code == \"date\") {\r\n                            fieldValue = item.value;\r\n                        }\r\n                        if (item.dt_code == \"checkbox\") {\r\n                            var filtered = item.select_value.filter(function (el) {\r\n                                return (el != null && el != \"\");\r\n                            });\r\n                            fieldValue = filtered.join(',');\r\n                        }\r\n                        if (item.dt_code == \"select\") {\r\n                            try {\r\n                                fieldValue = (typeof fieldValue === 'object' && fieldValue !== null) ? fieldValue.value : fieldValue\r\n                            } catch (ex) { }\r\n                        }\r\n                        if (item.name == 'created_by') {\r\n                            fieldValue = vm.userid;\r\n                        }\r\n                        if (item.name == 'modified_by') {\r\n                            fieldValue = vm.userid;\r\n                        }\r\n                        if (item.name == 'company_id') {\r\n                            fieldValue = vm.companyId;\r\n                        }\r\n                        if (item.name == 'contract_id') {\r\n                            fieldValue = vm.contractID;\r\n                        }\r\n                        if (item.name == 'created_at') {\r\n                            fieldValue = vm.$options.filters.formatDate(new Date());\r\n                        }\r\n                        if (item.name == 'modified_at') {\r\n                            fieldValue = vm.$options.filters.formatDate(new Date());\r\n                        }\r\n                        var dataObject = {\r\n                            field_name: item.name,\r\n                            field_value: fieldValue,\r\n                            custom_field_id: item.custom_field_id\r\n                        };\r\n                        data.push(dataObject);\r\n                        validation.push(validationObject);\r\n                    });\r\n                    var postJSON = {\r\n                        data: data,\r\n                        validation: validation,\r\n                        clientData: selectedClient\r\n                    };\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    ContractDataService.PostContract(objectPostString).then(response => {\r\n                        vm.isLoading=false;\r\n                        if (response.data[0].Code == \"1\") {\r\n                            if (vm.contractID > 0) {\r\n                                vm.ShowAlert(vm.$t('UpdatedSuccess',[vm.$t('Contract')]), \"success\", true, vm.$t(\"Alert\"));\r\n                            }\r\n                            else {\r\n                                vm.ShowAlert(vm.$t('AddedSuccess', [vm.$t('Contract')]), \"success\", true, vm.$t(\"Alert\"));\r\n                            }\r\n                            vm.$router.push({ name: 'Contract' });\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t('AddedError',[vm.$t('Contract')]), \"failure\", true, vm.$t(\"Alert\"));\r\n                        }                       \r\n                        vm.submited = false;\r\n                    })\r\n                }\r\n            });\r\n        },\r\n        onBlur(item){               \r\n                try {\r\n                    if(String(item.value).length>1){\r\n                    item.value = Number.parseFloat(item.value).toFixed(2);\r\n                    this.$refs.form.setFieldValue(item.name, item.value);\r\n                    }\r\n                } catch (ex) {\r\n\r\n                }\r\n            },\r\n        onCancel: function () {\r\n            this.$router.push({ name: 'Contract' });\r\n        },\r\n        MakeNormalArray: function (value) {\r\n            if (value) {\r\n                try {\r\n                    return JSON.parse(value);\r\n                }\r\n                catch (ex) {\r\n                    return value;\r\n                }\r\n            }\r\n            else {\r\n                value = [];\r\n            }\r\n        },\r\n        MakeSelectArray: function (objItem) {\r\n            var array = [];\r\n            var arr = String(objItem.select_options).split(',');\r\n            if (arr.length > 0 && objItem.picklist_options == 'Lookup' && objItem.form_field_visibility == \"YES\" && objItem.dt_code == \"select\") {\r\n                var person = { name: arr[0], value: arr[1] };\r\n                array.push(person);\r\n            }\r\n            return array\r\n        },\r\n        FetchData: function () {\r\n            var vm = this;\r\n            vm.isLoading=true;\r\n            const params = `id=${vm.$route.params.id}&moduleName=CRM&subModuleCode=CRM_CONTRACTS&langCode=en`;\r\n            ContractDataService.getFormLayout(params)\r\n                .then(response => {\r\n                    vm.isLoading=false;\r\n                    vm.LeadData = response.data.data;\r\n                    if (vm.LeadData != null && vm.LeadData.length > 0) {\r\n                        var endDt = vm.LeadData[4];\r\n                        vm.LeadData[4] = vm.LeadData[8];\r\n                        vm.LeadData[8] = endDt;\r\n                        var groupId = vm.LeadData[0].group_id;\r\n                        $.each(vm.LeadData, $.proxy(function (index, item) {\r\n                            groupId = item.group_id;\r\n\r\n                            var chkGroup = $.grep(vm.GroupBy, function (element, index) {\r\n                                return element.group_id == groupId;\r\n                            });\r\n                         \r\n                            if (item.name == 'customer_id') {\r\n                                vm.cutomerId = item.value;\r\n                            }\r\n                            if (item.dt_code == 'checkbox') {\r\n                                item.select_value = item.value.split(',');\r\n                            }\r\n                            if (item.name == \"status_id\") {\r\n                                vm.LeadData[index].is_required = true;\r\n                            }\r\n\r\n                            if (chkGroup.length == 0) {\r\n                                var returnedData = $.grep(vm.LeadData, function (element, index) {\r\n                                    return element.group_id == groupId;\r\n                                });\r\n                                if (vm.contractID > 0) {\r\n                                    $.each(returnedData, function (filedIndex, fieldItem) {\r\n                                 \r\n                                        if (fieldItem.dropdown_type == \"custom\" && fieldItem.picklist_options == \"Lookup\") {\r\n                                            fieldItem.select_options = vm.MakeNormalArray(fieldItem.select_options);\r\n                                            fieldItem.select_value = fieldItem.select_options;\r\n                                            if (fieldItem.select_options != null && fieldItem.select_options.length > 0) {\r\n                                                fieldItem.value = fieldItem.select_options[0];\r\n                                            }\r\n                                        }\r\n                                        else if (!vm.isBlank(fieldItem.value) && fieldItem.dt_code == \"decimal\" && fieldItem.form_field_visibility == \"YES\") {\r\n                                            fieldItem.value = parseFloat(fieldItem.value, 10).toFixed(2);\r\n                                        }\r\n                                        else if (fieldItem.dt_code == \"date\") {\r\n                                            fieldItem.value = fieldItem.value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                                if (returnedData.length > 0) {\r\n                                    var objGroup = {\r\n                                        group_id: groupId,\r\n                                        group_name: returnedData[0].group_name,\r\n                                        group_display_name: returnedData[0].group_display_name,\r\n                                        Data: returnedData\r\n                                    };\r\n                                    vm.GroupBy.push(objGroup);\r\n                                }\r\n                            }\r\n                        }, vm));\r\n                    }\r\n                    setTimeout(function(){vm.CheckBoxBootstrap()}, 100);\r\n                    setTimeout(function(){vm.RadioButtonBootstrap()}, 500);\r\n                    // setTimeout(function(){vm.ShowPopOver()}, 500);\r\n\r\n                    var frmFields = {}\r\n                    vm.LeadData.forEach((item) => {\r\n                        if (item.astype != '' && item.form_field_visibility == 'YES') {\r\n                            frmFields[item.name] = item.value;\r\n                        }\r\n                    })\r\n                    // vm.$refs.form.resetForm({ values: frmFields });\r\n                })\r\n        },\r\n    },\r\n}\r\n</script>\r\n<template>     \r\n      \r\n       <section class=\"main-content\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n            <div id=\"divMainLeadData\" v-cloak>\r\n             <div class=\"row\">\r\n                    <div class=\"col-md-12 padding-t_8\">\r\n                        <div class=\"theme-primary partition-full\">\r\n                            <span class=\"p-name text-white\">Manage Contracts</span>\r\n                            <span class=\"float-right\">\r\n                                <!-- <a href=\"javascript:;\" class=\"p-action-btn text-white\" title=\"PageTour\" @click=\"setTourGuideSteps(0)\">\r\n                                    <em class=\"fa fa-road\" aria-hidden=\"true\"></em>\r\n                                    <br />PageTour\r\n                                </a> -->\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"border p-3\">\r\n                    <Form v-slot=\"{  valid,errors}\" ref=\"form\">\r\n                        <DynamicForm :schema=\"GroupBy\" :dateformat=\"dateFormat\" :DependentOption=\"DependentOption\" v-on:setDependentDate=\"DependentDateObject\" \r\n                        v-on:onSearchDDL=\"onSearch\"  v-on:onBlur=\"onBlur\"  v-on:setSelectedValue=\"setSelectedValue\" />\r\n                        <div class=\"row flex-row-reverse mt-2\">\r\n                            <div class=\"col-lg-6 text-right\">\r\n                                <a href=\"javascript:;\"                                    \r\n                                    v-bind:class=\"{disabled: submited}\" v-on:click=\"SubmitData( valid,errors)\"\r\n                                    class=\"btn btn-success addContract_a\" title=\"Save\">\r\n                                    <em class=\"fa fa-save pr-2\"></em>Save\r\n                                </a>&nbsp;\r\n                                <a href=\"javascript:void(0)\" class=\"btn btn-danger\" title=\"Cancel\" @click=\"onCancel\">\r\n                                    <em class=\"fa fa-close pr-2\"></em>Cancel\r\n                                </a>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"py-2\">\r\n<small class=\"text-danger\">{{$t('MandatoryString')}}</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n     \r\n</template>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=2a10f5ac&\"\nimport script from \"./Manage.vue?vue&type=script&lang=js&\"\nexport * from \"./Manage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}