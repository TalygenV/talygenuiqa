{"version":3,"sources":["webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue","webpack:///src/components/Common/Modal/AddCustomFieldsPopup.vue","webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue?4215","webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue?ad29","webpack:///./src/views/LayoutCustomFields/DependencyField.vue","webpack:///src/views/LayoutCustomFields/DependencyField.vue","webpack:///./src/views/LayoutCustomFields/DependencyField.vue?4055","webpack:///./src/views/LayoutCustomFields/DependencyField.vue?ea1f","webpack:///./src/views/LayoutCustomFields/DependencyField.vue?1d39","webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue?77ef","webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue?9b0e","webpack:///./src/views/LayoutCustomFields/DependencyField.vue?e3a1","webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue?4484","webpack:///./src/views/LayoutCustomFields/DependencyField.vue?5018"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","$event","CloseCustomFieldsPopup","_v","_s","$t","_m","_l","systemFieldList","element","key","class","selectedModule","activateTab","class_name","display_name","ref","showFieldPropPopup","buttons","FormSchema","onSubmit","_e","staticRenderFns","props","LanguageArrayData","type","Array","required","SubModuleId","String","ModuleId","components","DataService","DynamicForm","data","Getlength","drag","dropfieldslist","dropfields","systemFieldsModel","OldIdForProp","FieldName","DataTypeId","iSLayoutControl","divManageLayoutProp","LanguageArray","FieldPropertyData","oldFieldPropertyData","finalJsonData","controlOnStart","bindEditedDataProperty","disabled","errorMessage","classicon","langCulture","myObj","lenghtOfLanguageDiv","displayNameData","customfieldtypeId","layoutType","Data","astype","label","name","value","placeholder","visibility","validationRules","config","onKeyUp","Bindingwithdisplayname","max_value","options","rows","chkIndex","chktxtIndex","showAddIcon","onAddButtonClick","AddMultiLanguage","text","onClick","updated","vm","BindLangDDL","created","ShowHideFields","GetCustomFieldDataTypes","methods","isLetter","forEach","items","replace","lableDisplaynamebinding","undefined","itm","index","push","lang_id","lang_name","item","indx","RemoveFile","e","field","checkindex","findIndex","x","chechIndex1","splice","length","max","onaddIconBackground","addIcon","Lblname","IsSystemGeneratedField","resetform","$refs","Propertiesform1","reset","Data_type_name","max_length","Data_type_id","$parent","hidePopup","endDrag","$vent","AllowOneElementdrop","clone","pullFunction","closeAddCustomFieldPopup","closeAddCustomField","RemoveField","id","confirmR","formfields","dropdowndata","totalLength","isrequied","MarkasRequired","mainObj","CUSTOM_FIELD_ID","MODULE_ID","SUB_MODULE_ID","NAME","Label","DISPLAY_NAME","DisplayName","DESCRIPTION","Description","PICKLIST_OPTION","PickListOption","TYPE_ID","LENGTH","Length","IS_REQUIRED","STATUSID","DECIMAL_PLACES","DecimalPlaces","LOC_VALUE","FORM_FIELD_VISIBILITY","LIST_FIELD_VISIBILITY","params","JSON","stringify","SaveUpdateCustomField","then","response","checkstatus","parse","STATUS_CODE","ShowAlert","$emit","GetCustomFieldDataType","target","_value","component","closePopup","displayname","scopedSlots","_u","DependencyData","fn","GetMultiSelectValue","sel","selectedItem","showWhenSelectItem","Dependencyvalues","checkboxdisabled","domProps","checkIfselected","checkedSelected","IsDefaultValue","toggleSelected","CustomFieldId","Number","CustomLayoutId","CustomLayout_Id","LayoutList","dependentId","dependentOnDdlId","CustomData","dependentListArray","CustomArray","SelectedCustomFieldName","GetEditDependencyData","showWhenListSelectedItem","TagsSelectedArray","DepartmentData","onChange","GetCustomFieldDDL","mode","GetMultiValues","onRemove","removeRecord","isDefault","isrequired","isreq","customFieldName","GetCustomFieldDependent","editDependency","val","ths","returnValue","selectedValue","filter","dependent","includes","xy","FieldData","xz","group_display_name","pop","custom_field_id","GetCustomFieldShowWhenDDL","$","each","prop","isShowDependencyFieldPopup","popupcloseforsystemfields","event","GetDependencyDataArray","value_mapping","ele","document","getElementsByClassName","inneritem","i","checked","DependencyForm","UpdateKeyValue","getElementById","innerindex","meta","getindex","obj","textContent","isSel","dependentOn","DependOn","showWhenArray","prototype","map","call","ShowWhen","IsRequired","url","ManageCustomFieldDependency","SetDependField","dependCustomField","has_dependent_field","_dependentData$data$","_dependentData$data$2","dependentData","GetCustomFieldId","show_when","GetArray","Object","values","dependent_on","showWhenValues","selectedValues","content","__esModule","default","module","locals","exports","add","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"js/chunk-09b30ee6.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"my-popups\"},[_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered ui-draggable\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header ui-draggable-handle py-0\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.CloseCustomFieldsPopup()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title py-3\",attrs:{\"name\":\"header\"}},[_vm._v(\" \"+_vm._s(_vm.$t('AddCustomFields'))+\" \")])]),_c('div',{staticClass:\"container-fluid padding-t_10\"},[_c('div',{staticClass:\"left-menu-tab new_tab\"},[_vm._m(0),_c('ul',{staticClass:\"nav nav-pills flex-column left-tab mt-2 responivecustomtab\",attrs:{\"id\":\"upper\",\"role\":\"tablist\"}},_vm._l((_vm.systemFieldList),function(element){return _c('li',{key:element,staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link left-menu\",class:{ 'active': _vm.selectedModule === element },attrs:{\"id\":\"leftmenu\"},on:{\"click\":function($event){return _vm.activateTab(element)}}},[_c('i',{class:element.class_name,attrs:{\"id\":\"itemdata\"}}),_vm._v(\"  \"+_vm._s(_vm.$t(element.display_name))+\" \")])])}),0)]),_c('div',{staticClass:\"right-content\"},[_c('div',{staticClass:\"col-lg-12 mb-0 float-left p-0\"},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Forminfo'))+\" \")])])])]),_c('br'),_c('br'),_c('Form',{ref:\"Propertiesform1\"},[(_vm.showFieldPropPopup)?_c('div',{staticClass:\"listing py-3 px-3\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}})],1):_vm._e()])],1)])])])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col-md-12 p-0\"},[_c('div',{staticClass:\"theme-primary partition\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(\"User Defined Fields:\")])])])\n}]\n\nexport { render, staticRenderFns }","\r\n<template>\r\n    <div>\r\n        <div class=\"my-popups\">\r\n            <div class=\"modal d-block \">\r\n                <div class=\"modal-dialog modal-dialog-centered ui-draggable\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header ui-draggable-handle  py-0\">\r\n                            <button type=\"button\" class=\"close\" v-on:click=\"CloseCustomFieldsPopup()\">\r\n                                <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                            </button>\r\n                            <h4 name=\"header\" class=\"modal-title py-3\">\r\n                                {{ $t('AddCustomFields') }}\r\n                            </h4>\r\n                        </div>\r\n                        <div class=\"container-fluid padding-t_10\">\r\n                            <div class=\"left-menu-tab new_tab\">\r\n                                <div class=\"col-md-12 p-0\">\r\n                                    <div class=\"theme-primary partition\">\r\n                                        <span class=\"p-name text-white\">User Defined Fields:</span>\r\n                                    </div>\r\n                                </div>\r\n                                <ul class=\"nav nav-pills flex-column left-tab mt-2 responivecustomtab\" id=\"upper\"\r\n                                    role=\"tablist\">\r\n                                    <li class=\"nav-item\" v-for=\"element in systemFieldList\" :key=\"element\">\r\n                                        <a id=\"leftmenu\" class=\"nav-link left-menu \" @click=\"activateTab(element)\"\r\n                                            :class=\"{ 'active': selectedModule === element }\">\r\n                                            <i id=\"itemdata\" v-bind:class=\"element.class_name\"></i>&nbsp;\r\n                                            {{ $t(element.display_name) }}\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"right-content\">\r\n                                <div class=\"col-lg-12 mb-0 float-left p-0\">\r\n                                    <div class=\"heading-border\">\r\n                                        <h5 class=\"h5\">\r\n                                            <span class=\"spngropuname\">\r\n                                                {{ $t('Forminfo') }}\r\n                                            </span>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div><br /><br />\r\n                                <Form ref=\"Propertiesform1\">\r\n                                    <div class=\"listing py-3 px-3 \" v-if=\"showFieldPropPopup\">\r\n                                        <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\"\r\n                                            v-on:OnSubmit=\"onSubmit\">\r\n                                        </dynamic-form>\r\n                                    </div>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../../services/DataService.js';\r\n// import CustomFieldPropertyPopup from '../Modal/CustomFieldPropertyPopup.vue'\r\nimport { DynamicForm } from 'tg-controls_cli/dist/myLib.common'\r\nexport default {\r\n    props: {\r\n\r\n        LanguageArrayData:\r\n        {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        SubModuleId:\r\n        {\r\n            type: String,\r\n            required: true\r\n        },\r\n        ModuleId: {\r\n            type: String,\r\n            required: true\r\n        }\r\n    },\r\n    components: {\r\n        DataService,\r\n        // CustomFieldPropertyPopup,\r\n        DynamicForm\r\n    },\r\n    data() {\r\n        return {\r\n            Getlength:null,\r\n            drag: false,\r\n            dropfieldslist: [],\r\n            dropfields: [],\r\n            systemFieldsModel: '',\r\n            OldIdForProp: '',\r\n            systemFieldList: [],\r\n            showFieldPropPopup: false,\r\n            FieldName: null,\r\n            DataTypeId: '',\r\n            iSLayoutControl: false,\r\n            divManageLayoutProp: false,\r\n            LanguageArray: [],\r\n            FieldPropertyData: [],\r\n            oldFieldPropertyData: [],\r\n            finalJsonData: [],\r\n            // closepopupMenuhide:false,\r\n            controlOnStart: true,\r\n            bindEditedDataProperty: [],\r\n            disabled: false,\r\n            errorMessage: '',\r\n            classicon: '',\r\n            selectedModule: null,\r\n            langCulture: [],\r\n            myObj: [],\r\n            lenghtOfLanguageDiv: null,\r\n            displayNameData: '',\r\n            customfieldtypeId: null,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: 'Label',\r\n                            name: \"Label\",\r\n                            value: this.FieldName,\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            disabled: false,\r\n                            validationRules: { \"required\": true},\r\n                            config: {\r\n                                onKeyUp: this.Bindingwithdisplayname\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: 'Pick List Option',\r\n                            name: \"PickListOption\",\r\n                            value: '',\r\n                            visibility: false,\r\n                            placeholder: \"Enter comma seprated value \",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"NumericField\",\r\n                            label: 'Length',\r\n                            name: \"Length\",\r\n                            value: '',\r\n                            placeholder: \"Enter Length\",\r\n                            visibility: true,\r\n                            validationRules: { \"required\": true,max_value:null},\r\n                            // config: {\r\n                            //     onKeyUp: this.LengthLimit\r\n                            // }\r\n\r\n                        },\r\n                        {\r\n                            astype: \"NumericField\",\r\n                            label: 'Decimal Places',\r\n                            name: \"DecimalPlaces\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            validationRules: { \"required\": true },\r\n\r\n                        },\r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: \"Mark as Required\",\r\n                            name: \"MarkasRequired\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            config: {\r\n                                options: [{ value: \"1\", name: \"\" }]\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: 'Description',\r\n                            name: \"Description\",\r\n                            value: '',\r\n                            placeholder: \"Enter Description\",\r\n                            visibility: true,\r\n                            validationRules: \"\",\r\n                            config: {\r\n                                rows: 3\r\n                            }\r\n                        }\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: 'Language',\r\n                            name: \"Language\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            chkIndex: 0,\r\n                            visibility: false,\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: 'Display Name',\r\n                            name: \"DisplayName\",\r\n                            value: '',\r\n                            placeholder: \"Enter Display Name\",\r\n                            chktxtIndex: 0,\r\n                            visibility: false,\r\n                            validationRules: { \"required\": true },\r\n                            config: {\r\n                                showAddIcon: true,\r\n                                onAddButtonClick: this.AddMultiLanguage\r\n                                // onKeyUp:isLetter\r\n                                // onKeyUp: this.isLetter\r\n                            },\r\n                        },\r\n\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\"\r\n                },\r\n\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.CloseCustomFieldsPopup\r\n                }\r\n            ]\r\n\r\n        }\r\n    },\r\n    updated() {\r\n        var vm = this;\r\n        vm.BindLangDDL();\r\n    },\r\n    created: function () {\r\n        var vm = this;\r\n        vm.ShowHideFields();\r\n        vm.GetCustomFieldDataTypes();\r\n        vm.BindLangDDL();\r\n        vm.FormSchema[1].Data[0].value = 1;\r\n    },\r\n    methods:\r\n    {\r\n            // LengthLimit() {\r\n            //     var vm = this;\r\n            //     if ((vm.FormSchema)[0].Data[2].value > vm.Getlength) {\r\n            //         (vm.FormSchema)[0].Data[2].validationRules[\"max_value\"]=vm.Getlength;\r\n            //  }\r\n            // },\r\n        isLetter() {\r\n            var vm = this;\r\n            (vm.FormSchema)[1].Data.forEach(items => {\r\n                if (items.label == \"Display Name\") {\r\n                    items.value = items.value.replace(/[^a-zA-Z]/g, '');\r\n                }\r\n            })\r\n        },\r\n        lableDisplaynamebinding(value) {\r\n            var vm = this;\r\n            (vm.FormSchema)[1].Data[1].value = value;\r\n        },\r\n        BindLangDDL(name) {\r\n            var vm = this;\r\n            if (name == undefined) {\r\n                vm.LanguageArray.forEach((itm, index) => {\r\n                    (vm.FormSchema)[1].Data[0].config.options.push({\r\n                        value: itm.lang_id,\r\n                        name: itm.lang_name\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                vm.LanguageArray.forEach((itm, index) => {\r\n                    if (typeof (name) != 'undefined' && name != null) {\r\n                        (vm.FormSchema)[1].Data.forEach((item, indx) => {\r\n                            if (indx % 2 == 0) {\r\n                                (vm.FormSchema)[1].Data[indx].config.options.push({\r\n                                    value: itm.lang_id,\r\n                                    name: itm.lang_name\r\n                                })\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                })\r\n            }\r\n           vm.FormSchema[1].Data[0].value = 1;\r\n        },\r\n        RemoveFile: function (e, field) {\r\n            var vm = this;\r\n            var checkindex = (vm.FormSchema)[1].Data.findIndex(x => x.chktxtIndex === field.chktxtIndex);\r\n            var chechIndex1 = checkindex - 1;\r\n            if (checkindex > -1) {\r\n                (vm.FormSchema)[1].Data.splice(checkindex, 1);\r\n            }\r\n            if (chechIndex1 > -1) {\r\n                (vm.FormSchema)[1].Data.splice(chechIndex1, 1);\r\n            }\r\n        },\r\n        AddMultiLanguage() {\r\n            var vm = this;\r\n            (vm.FormSchema)[1].Data.push({\r\n                astype: \"SelectField\",\r\n                label: 'Language',\r\n                name: \"Language\" + (vm.FormSchema)[1].Data.length,\r\n                value: \"\",\r\n                placeholder: \"\",\r\n                chkIndex: (vm.FormSchema)[1].Data.length,\r\n                config: {\r\n                    options: [],\r\n                },\r\n                validationRules: \"required\",\r\n            },\r\n                {\r\n                    astype: \"TextField\",\r\n                    label: 'Display Name',\r\n                    name: \"DisplayName\" + (vm.FormSchema)[1].Data.length,\r\n                    value: '',\r\n                    placeholder: \"\",\r\n                    chktxtIndex: (vm.FormSchema)[1].Data.length,\r\n                    validationRules: { \"required\": true, max: 250 },\r\n                    config: {\r\n                        showAddIcon: true,\r\n                        onaddIconBackground: 'bg-danger',\r\n                        onAddButtonClick: vm.RemoveFile,\r\n                        addIcon: 'fa fa-trash',\r\n                        //onKeyUp: this.isLetter\r\n                    },\r\n                })\r\n            vm.FormSchema[1].Data.forEach((item) => {\r\n                vm.Lblname = item.name\r\n            })\r\n            vm.BindLangDDL(vm.Lblname);\r\n        },\r\n        ShowHideFields() {\r\n            var vm = this;\r\n            if (vm.IsSystemGeneratedField == true) {\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[0].disabled = true;\r\n                (vm.FormSchema)[0].Data[4].disabled = true;\r\n                (vm.FormSchema)[0].Data[2].visibility = false;\r\n                (vm.FormSchema)[0].Data[3].visibility = false;\r\n                (vm.FormSchema)[0].Data[5].visibility = false;\r\n                (vm.FormSchema)[1].Data[0].visibility = false;\r\n                (vm.FormSchema)[1].Data[1].visibility = false;\r\n            }\r\n            else {\r\n                (vm.FormSchema)[1].Data[0].visibility = true;\r\n                (vm.FormSchema)[1].Data[1].visibility = true;\r\n                if (vm.FieldName == 'Decimal') {\r\n                    (vm.FormSchema)[0].Data[3].visibility = true;\r\n                    (vm.FormSchema)[0].Data[2].visibility = false;\r\n                }\r\n                if (vm.FieldName == 'Select List' || vm.FieldName == 'Checkbox' || vm.FieldName == 'Radio') {\r\n                    (vm.FormSchema)[0].Data[1].visibility = true;\r\n                    (vm.FormSchema)[0].Data[2].visibility = false;\r\n                }\r\n                if (vm.FieldName == 'Date') {\r\n                    (vm.FormSchema)[0].Data[1].visibility = false;\r\n                    (vm.FormSchema)[0].Data[3].visibility = false;\r\n                    (vm.FormSchema)[0].Data[2].visibility = false;\r\n                }\r\n            }\r\n        },\r\n        resetform() {\r\n            var vm = this;\r\n            (vm.FormSchema)[0].Data[0].value = \"\";\r\n            (vm.FormSchema)[0].Data[1].value = \"\";\r\n            (vm.FormSchema)[0].Data[2].value = \"\";\r\n            (vm.FormSchema)[0].Data[3].value = \"\";\r\n            (vm.FormSchema)[0].Data[4].value = \"\";\r\n            (vm.FormSchema)[0].Data[5].value = \"\";\r\n            (vm.FormSchema)[1].Data[0].value = \"\";\r\n            (vm.FormSchema)[1].Data[1].value = \"\";\r\n        },\r\n\r\n        activateTab(item) {\r\n            var vm = this;\r\n            vm.$refs.Propertiesform1.reset();\r\n            vm.BindLangDDL();\r\n            vm.resetform();\r\n            (vm.FormSchema)[0].Data[0].value = item.Data_type_name;\r\n            if (item.Data_type_name == \"Text\") {\r\n                vm.Getlength=null;\r\n                vm.Getlength=item.max_length;\r\n                (vm.FormSchema)[0].Data[2].validationRules[\"max_value\"]=vm.Getlength;\r\n                (vm.FormSchema)[0].Data[2].value=vm.Getlength;\r\n                (vm.FormSchema)[0].Data[3].visibility = false;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[2].visibility = true;\r\n            }\r\n            else if(item.Data_type_name =='Long Integer'|| item.Data_type_name=='Integer' ) {\r\n                vm.Getlength=null;\r\n                vm.Getlength=item.max_length;\r\n                (vm.FormSchema)[0].Data[2].validationRules[\"max_value\"]=vm.Getlength;\r\n                (vm.FormSchema)[0].Data[2].visibility = true;\r\n                (vm.FormSchema)[0].Data[2].value=vm.Getlength;\r\n            }\r\n            else if (item.Data_type_name == 'Decimal') {\r\n                vm.Getlength=null;\r\n                vm.Getlength=item.max_length;\r\n                (vm.FormSchema)[0].Data[2].validationRules[\"max_value\"]=vm.Getlength;                (vm.FormSchema)[0].Data[2].value=vm.Getlength;\r\n                (vm.FormSchema)[0].Data[3].visibility = true;\r\n                (vm.FormSchema)[0].Data[2].visibility = true;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n            }\r\n            else if (item.Data_type_name == 'Select List' || item.Data_type_name == 'Checkbox' || item.Data_type_name == 'Radio') {\r\n                vm.Getlength=null;\r\n                (vm.FormSchema)[0].Data[1].visibility = true;\r\n                (vm.FormSchema)[0].Data[2].visibility = false;\r\n            }\r\n            else if (item.Data_type_name == \"Date\" || item.Data_type_name=='Time') {\r\n                vm.Getlength=null;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[2].visibility = false;\r\n                (vm.FormSchema)[0].Data[3].visibility = false;\r\n            }\r\n            else if (item.Data_type_name == \"Phone\" || item.Data_type_name == \"Email\") {\r\n                vm.Getlength=null;\r\n                vm.Getlength=item.max_length;\r\n                (vm.FormSchema)[0].Data[2].validationRules[\"max_value\"]=vm.Getlength;\r\n                (vm.FormSchema)[0].Data[2].value=vm.Getlength;\r\n                (vm.FormSchema)[0].Data[2].visibility = true;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[3].visibility = false;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n            }\r\n\r\n            else if (item.Data_type_name == \"Url\" || item.Data_type_name == \"Text Area\"\r\n            ) {\r\n                vm.Getlength=null;\r\n                vm.Getlength=item.max_length;\r\n                (vm.FormSchema)[0].Data[2].validationRules[\"max_value\"]=vm.Getlength;\r\n                (vm.FormSchema)[0].Data[2].value=vm.Getlength;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[3].visibility = false;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[2].visibility = true;\r\n            }\r\n            vm.DataTypeId = item.Data_type_id;\r\n            vm.FieldName = item.Data_type_name;\r\n            vm.iSLayoutControl = true;\r\n            vm.divManageLayoutProp = false;\r\n            vm.LanguageArray = vm.LanguageArrayData;\r\n            vm.oldFieldPropertyData = vm.FieldPropertyData;\r\n            vm.showFieldPropPopup = true;\r\n            vm.selectedModule = item;\r\n            vm.lableDisplaynamebinding(item.Data_type_name);\r\n        },\r\n\r\n        CloseCustomFieldsPopup() {\r\n            this.$parent.hidePopup();\r\n        },\r\n        endDrag($vent, type) {\r\n        },\r\n        AllowOneElementdrop() {\r\n            var vm = this;\r\n            if (vm.dropfields == null) {\r\n                vm.disabled = false;\r\n            }\r\n            if (vm.dropfields != null) {\r\n                vm.disabled = true;\r\n            }\r\n            else {\r\n                vm.disabled = false;\r\n            }\r\n        },\r\n        clone({ name }) {\r\n            return { name };\r\n        },\r\n        pullFunction() {\r\n            return this.controlOnStart ? \"clone\" : true;\r\n        },\r\n        closeAddCustomFieldPopup() {\r\n            var vm = this;\r\n            vm.$parent.closeAddCustomField();\r\n        },\r\n        RemoveField: function (id) {\r\n            var vm = this;\r\n            vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Report\")), function () {\r\n                var checkindex = vm.dropfieldslist.findIndex(x => x.Data_type_id === id);\r\n                if (checkindex > -1) {\r\n                    vm.systemFieldList.push(vm.dropfieldslist[checkindex]);\r\n                    vm.dropfieldslist.splice(checkindex, 1);\r\n                    vm.FieldPropertyData = [];\r\n                    if (vm.dropfields == '') {\r\n                        vm.disabled = false;\r\n                    }\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        onSubmit(formfields, e) {\r\n            debugger\r\n            var vm = this;\r\n            var dropdowndata = '';\r\n            var totalLength = this.FormSchema[1].Data.length;\r\n            this.FormSchema[1].Data.forEach((item, index) => {\r\n                if (item.astype != 'TextField') {\r\n                    dropdowndata += item.value + ','\r\n                } else {\r\n                    if (totalLength - 1 != index) {\r\n                        dropdowndata += item.value + '^'\r\n                    } else {\r\n                        dropdowndata += item.value\r\n                    }\r\n\r\n                }\r\n            })\r\n            var isrequied =null;\r\n            if(formfields.MarkasRequired.length ==0){\r\n                isrequied=0;\r\n            }\r\n            else{\r\n                isrequied=1;\r\n            }\r\n            let mainObj = {\r\n                CUSTOM_FIELD_ID: 0,\r\n                MODULE_ID: vm.ModuleId,\r\n                SUB_MODULE_ID: vm.SubModuleId,\r\n                NAME: formfields.Label,\r\n                DISPLAY_NAME: formfields.DisplayName,\r\n                DESCRIPTION: formfields.Description,\r\n                PICKLIST_OPTION: formfields.PickListOption,\r\n                TYPE_ID: vm.DataTypeId,\r\n                LENGTH: formfields.Length,\r\n                IS_REQUIRED: isrequied,\r\n                STATUSID: 1001,\r\n                DECIMAL_PLACES: formfields.DecimalPlaces,\r\n                LOC_VALUE: dropdowndata,\r\n                FORM_FIELD_VISIBILITY: 'YES',\r\n                LIST_FIELD_VISIBILITY: 'YES'\r\n            }\r\n            vm.finalJsonData.push(mainObj);\r\n            var params = `jsonString=${JSON.stringify(vm.finalJsonData)}`\r\n            DataService.SaveUpdateCustomField(params).then(function (response) {\r\n                var checkstatus = JSON.parse(response.data)\r\n                if(checkstatus){\r\n                    if (checkstatus.STATUS_CODE == 1) {\r\n                    vm.ShowAlert(vm.$t('CustomFieldSuccess', [vm.$t('Field')]), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.$emit('GetCustomNewField', vm.finalJsonData,);\r\n                    vm.CloseCustomFieldsPopup();\r\n                }\r\n                else if (checkstatus.STATUS_CODE == 3) {\r\n                    vm.ShowAlert(vm.$t('CustomFieldExists'), \"danger\", true, vm.$t(\"Alert\"));\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t('CustomFieldUpdate'), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.$emit('GetCustomNewField', vm.finalJsonData,);\r\n                    vm.CloseCustomFieldsPopup();\r\n                }\r\n                }\r\n            })\r\n        },\r\n        GetCustomFieldDataTypes() {\r\n            var vm = this;\r\n            DataService.GetCustomFieldDataType().then(function (response) {\r\n                if (JSON.parse(response.data) != null) {\r\n                    vm.systemFieldList = JSON.parse(response.data).data;\r\n                    vm.systemFieldList.forEach((item) => {\r\n                    });\r\n                }\r\n            })\r\n        },\r\n        Bindingwithdisplayname(e) {\r\n            var vm = this;\r\n            (vm.FormSchema)[1].Data[1].value = e.target._value;\r\n            // var code = e.key \r\n            // if (code == \"!\" || code == \"@\" || code == \"#\" || code == \"$\" || \r\n            //     code == \"%\" || code == \"^\" || code == \"&\" || code == \"*\" || \r\n            //     code == \"(\" || code == \")\" || code == \"_\" || code == \"+\") { \r\n            //     vm.ShowAlert('Not Allow Special Character', \"warning\", true, vm.$t(\"Alert\"));\r\n            //     return false;\r\n            // } else{\r\n            //     (vm.FormSchema)[1].Data[1].value = e.target._value;\r\n            // }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.makepopleft#mainDivProp .dropdown-menu {\r\n    inset: unset !important;\r\n    transform: unset !important;\r\n    right: 0px !important;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddCustomFieldsPopup.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddCustomFieldsPopup.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddCustomFieldsPopup.vue?vue&type=template&id=61dfc81c\"\nimport script from \"./AddCustomFieldsPopup.vue?vue&type=script&lang=js\"\nexport * from \"./AddCustomFieldsPopup.vue?vue&type=script&lang=js\"\nimport style0 from \"./AddCustomFieldsPopup.vue?vue&type=style&index=0&id=61dfc81c&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"my-popups\"},[_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered ui-draggable\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header ui-draggable-handle py-0\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.closePopup}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title py-3\",attrs:{\"name\":\"header\"}},[_vm._v(\" \"+_vm._s(_vm.$t('CustomFieldDependency'))+\" \"+_vm._s(_vm.displayname)+\" \")])]),_c('div',{staticClass:\"listing py-3 px-3\"},[_c('dynamic-form',{ref:\"DependencyForm\",attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([(_vm.DependencyData)?{key:\"tgslot-ProductTypeCode\",fn:function({ data }){return [_c('div',{staticClass:\"col-lg-12 p-0 workdiary_sanp_row border p-3\"},[_c('div',{staticClass:\"timeline-panel row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('ul',{staticClass:\"list-group\"},_vm._l((_vm.GetMultiSelectValue),function(item,index){return _c('li',{key:index,staticClass:\"list-group-item\",class:{ sel: _vm.selectedItem && _vm.selectedItem.name === item.name },on:{\"click\":function($event){return _vm.showWhenSelectItem($event,item)}}},[_vm._v(\" \"+_vm._s(item.name)+\" \")])}),0)]),_c('div',{staticClass:\"col-md-6 border-left pl-5\"},[_c('div',{staticClass:\"scroldv\"},[(_vm.DependencyData)?_c('div',{staticClass:\"d-flex\"},[_c('h6',{staticClass:\"col-md-6\"},[_vm._v(\"values\")]),_vm._v(\" \"),_c('h6',{staticClass:\"col-md-6\"},[_vm._v(\"Isdefault\")])]):_vm._e(),_c('ul',{staticClass:\"list-group\",attrs:{\"id\":\"rightList\"}},_vm._l((_vm.Dependencyvalues),function(itm,index){return _c('li',{staticClass:\"list-group-item d-flex\"},[_c('label',{staticClass:\"form-check form-check-inline col-md-6\"},[_c('div',{staticClass:\"custom-control custom-checkbox custom-control-inline\"},[_c('input',{staticClass:\"chkItems custom-control-input\",attrs:{\"disabled\":_vm.checkboxdisabled,\"id\":itm.value,\"type\":\"checkbox\"},domProps:{\"checked\":_vm.checkIfselected(itm.value)},on:{\"change\":function($event){return _vm.checkedSelected($event, itm)}}}),_c('label',{staticClass:\"custom-control-label\",attrs:{\"for\":itm.value}},[_vm._v(_vm._s(itm.name))]),_c('input',{attrs:{\"type\":\"hidden\"},domProps:{\"value\":itm.value}})])]),_c('label',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"customslidercheck\"},[_c('input',{class:{'form-check-input':true},attrs:{\"id\":\"isTrueCheckDefault\",\"name\":\"taggele\",\"id\":itm.value+'_id',\"type\":\"checkbox\",\"disabled\":_vm.checkIfselected(itm.value) == false},domProps:{\"checked\":_vm.IsDefaultValue(itm.value)},on:{\"change\":function($event){return _vm.toggleSelected($event, itm)}}}),_c('span',{staticClass:\"slider round\"},[_c('span',{staticClass:\"slider-yes\"},[_vm._v(\"Yes\")]),_c('span',{staticClass:\"slider-no\"},[_vm._v(\"No\")])])])])])}),0)])])])])]}}:null],null,true)})],1)])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"en\">\r\n<div class=\"my-popups\">\r\n    <div class=\"modal d-block \">\r\n        <div class=\"modal-dialog modal-dialog-centered ui-draggable\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header ui-draggable-handle  py-0\">\r\n                    <button type=\"button\" class=\"close\" @click=\"closePopup\">\r\n                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                    </button>\r\n                    <h4 name=\"header\" class=\"modal-title py-3\">\r\n                        {{ $t('CustomFieldDependency') }} {{displayname}}\r\n                    </h4>\r\n                </div>\r\n                <div class=\"listing py-3 px-3\">\r\n                    <dynamic-form lang=\"en\" ref=\"DependencyForm\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\">\r\n                     <template v-slot:tgslot-ProductTypeCode=\"{ data }\" v-if=\"DependencyData\"  >\r\n                            <div class=\"col-lg-12 p-0 workdiary_sanp_row border p-3\"  >\r\n                                <div class=\"timeline-panel row\">\r\n                                    <div class=\"col-md-6\" >\r\n                                        <ul class=\"list-group\">\r\n                                            <li class=\"list-group-item\" v-for=\"(item, index) in GetMultiSelectValue\" :key=\"index\" @click=\"showWhenSelectItem($event,item)\" :class=\"{ sel: selectedItem && selectedItem.name === item.name }\">\r\n                                                {{ item.name }}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"col-md-6 border-left pl-5\"  >                                     \r\n                                        <div class=\"scroldv\">\r\n                                            <div class=\"d-flex\" v-if=\"DependencyData\">\r\n                                            <h6 class=\"col-md-6\" >values</h6>   <h6 class=\"col-md-6\" >Isdefault</h6>\r\n                                            </div>\r\n                                            <ul class=\"list-group \" id=\"rightList\">\r\n                                                <li class=\"list-group-item d-flex\" v-for=\"(itm,index) in Dependencyvalues\">\r\n                                                    <label class=\"form-check form-check-inline col-md-6\">\r\n                                                        <div class=\"custom-control custom-checkbox custom-control-inline\">\r\n                                                            <input @change=\"checkedSelected($event, itm)\" :disabled=\"checkboxdisabled\" :id=\"itm.value\" type=\"checkbox\" :checked=\"checkIfselected(itm.value)\" class=\"chkItems custom-control-input\" >\r\n                                                            <label :for=\"itm.value\" class=\"custom-control-label\">{{itm.name}}</label>\r\n                                                            <input type=\"hidden\" :value=\"itm.value\">\r\n                                                        </div>\r\n                                                      \r\n                                                    </label>\r\n                                                    <label class=\"col-md-6\"  >\r\n                                                        <div class=\"customslidercheck\" >\r\n                                                            <input id=\"isTrueCheckDefault\" name=\"taggele\" :checked=\"IsDefaultValue(itm.value)\"  @change=\"toggleSelected($event, itm)\" :id=\"itm.value+'_id'\"  type=\"checkbox\"  :disabled=\"checkIfselected(itm.value) == false\" :class=\"{'form-check-input':true}\">                                                            \r\n                                                            <span class=\"slider round\">\r\n                                                                <span class=\"slider-yes\">Yes</span>\r\n                                                                <span class=\"slider-no\">No</span>\r\n                                                            </span>  \r\n                                                        </div>                   \r\n                                                     </label>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </template>    \r\n                    </dynamic-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    DynamicForm\r\n} from 'tg-controls_cli/dist/myLib.common';\r\nimport DataService from \"../../services/DataService.js\";\r\n\r\nexport default {\r\n    components: {\r\n        DynamicForm\r\n    },\r\n    props: {\r\n        CustomFieldId: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        DependencyData: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        CustomLayoutId: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        Dependencyvalues: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        displayname: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        CustomLayout_Id:{\r\n            type: Number ,\r\n            required: true\r\n        },\r\n        LayoutList:{\r\n            type : Array,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            dependentId: null,\r\n            selectedItem: null,\r\n            dependentOnDdlId: '',\r\n            type: 'dependonddl',\r\n            CustomData: [],\r\n            dependentListArray: [],\r\n            CustomArray: [],\r\n            SelectedCustomFieldName: null,\r\n            GetMultiSelectValue: [],\r\n            GetEditDependencyData: [],\r\n            showWhenListSelectedItem: '',\r\n            TagsSelectedArray: [],\r\n            DepartmentData: [],\r\n            FormSchema: [\r\n                {\r\n                layoutType: \"Single\",\r\n                Data: [{\r\n                    astype: \"SelectField\",\r\n                    label: this.$t('DependOn'),\r\n                    name: \"DependOn\",\r\n                    value: \"\",\r\n                    visibility: true,\r\n                    config: {\r\n                        options: [],\r\n                        onChange: this.GetCustomFieldDDL\r\n                    },\r\n                    validationRules: \"required\",\r\n                }\r\n\r\n                ],\r\n            },\r\n            {\r\n                layoutType: \"Single\",\r\n                Data: [{\r\n                    astype: \"MultiSelectField\",\r\n                    label: this.$t('ShowWhen'),\r\n                    name: \"ShowWhen\",\r\n                    value: '',\r\n                    mode: \"tag\",\r\n                    placeholder: \"\",\r\n                    visibility: true,\r\n                    config: {\r\n                        options: [],\r\n                        onChange: this.GetMultiValues,\r\n                        onRemove: this.removeRecord,\r\n                    },\r\n                    //validationRules: \"required\",\r\n                },\r\n\r\n                ]\r\n            },\r\n            {\r\n                layoutType: \"Single\",\r\n                Data: [{\r\n                            astype: \"CheckBoxField\",\r\n                            label: \"IsRequired\",\r\n                            name: \"IsRequired\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            disabled:false,\r\n                            config: {\r\n                                options: [{ value: \"1\", name: \"\" }]\r\n                            }\r\n                        },]\r\n            },\r\n            {\r\n                layoutType: \"Single\",\r\n                Data: [{\r\n                    astype: \"SlotField\",\r\n                    label: '',\r\n                    name: \"ProductTypeCode\",\r\n                    value: \"\",\r\n                    placeholder: \"\",\r\n                    visibility: true,\r\n                    config: {\r\n                        options: [],\r\n                    },\r\n                }]\r\n            },      \r\n            ],\r\n            buttons: [{\r\n                type: \"submit\",\r\n                class: \"btn btn-success\",\r\n                text: \"<i class='fa fa-save pr-2'></i>Save\"\r\n            },\r\n\r\n            {\r\n                type: \"button\",\r\n                class: \"btn btn-danger\",\r\n                text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                onClick: this.closePopup\r\n            }\r\n            ],\r\n            // DependancyAdded:false,\r\n            // disabledtoggel:true\r\n            checkboxdisabled: true,\r\n            isDefault: '',\r\n            isrequired:'',\r\n            isreq:''\r\n        }\r\n\r\n    },\r\n    created: function () {\r\n        var vm = this;\r\n        vm.SelectedCustomFieldName = vm.$parent.customFieldName;\r\n        vm.GetCustomFieldDependent();\r\n        vm.editDependency();\r\n        if (vm.Dependencyvalues.length < 1) {\r\n            (vm.FormSchema)[3].Data[0].visibility = false;\r\n            (vm.FormSchema)[1].Data[0].visibility = false\r\n        }\r\n    },\r\n    methods: {\r\n        IsDefaultValue: function (val) {\r\n            let ths = this;\r\n            let returnValue = false;\r\n            if (ths.selectedItem != null && typeof (ths.selectedItem.value) != 'undefined') {\r\n                let selectedValue = ths.dependentListArray.filter((x) => { return x.value == ths.selectedItem.value });\r\n                if (selectedValue.length > 0 && selectedValue[0].isDefault == val) {\r\n                    return true;\r\n                }\r\n            }\r\n            return returnValue;\r\n        },\r\n        checkIfselected: function (val) {\r\n            let ths = this;\r\n            let returnValue = false;\r\n            if (ths.selectedItem != null && typeof (ths.selectedItem.value) != 'undefined') {\r\n                let selectedValue = ths.dependentListArray.filter((x) => { return x.value == ths.selectedItem.value });\r\n                if (selectedValue.length > 0 && selectedValue[0].dependent.includes(val)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return returnValue;\r\n        },\r\n        GetCustomFieldDependent() { \r\n            var vm = this;\r\n            (vm.FormSchema)[0].Data[0].config.options = [];\r\n            vm.LayoutList.forEach(xy => {\r\n                xy.FieldData.forEach(xz => {\r\n                    if(xz.name.includes(\"X\") && xy.group_display_name.includes(\"NewGroup\")){\r\n                        vm.DependencyData.forEach(data =>{\r\n                          if(data.name.includes(\"X\")){\r\n                            vm.DependencyData.pop(data);\r\n                          }\r\n                        })\r\n                    }\r\n                })\r\n            }) \r\n            vm.DependencyData.forEach(item => {\r\n                (vm.FormSchema)[0].Data[0].config.options.push({\r\n                    value: item.custom_field_id,\r\n                    name: item.display_name ? item.display_name : vm.$t(item.name)\r\n                })          \r\n            })\r\n        },\r\n        async GetCustomFieldDDL(e, field, dependentId) {\r\n            var vm = this;\r\n            var CustomData = [];\r\n            if (dependentId) {\r\n                vm.dependentOnDdlId = dependentId;\r\n            } else {\r\n                vm.dependentOnDdlId = e.target.value;\r\n            }\r\n            (vm.FormSchema)[1].Data[0].config.options = [];\r\n            var params = `customFieldId=${vm.dependentOnDdlId}&Type=${vm.type}`;\r\n            await DataService.GetCustomFieldShowWhenDDL(params).then((response) => {\r\n                CustomData = JSON.parse(response.data);\r\n                if (CustomData != null) {\r\n                    if(vm.Dependencyvalues.length > 1){\r\n                        vm.DependencyData=true;\r\n                        (vm.FormSchema)[3].Data[0].visibility = true;\r\n                        (vm.FormSchema)[1].Data[0].visibility = true\r\n                    }\r\n                    else{\r\n                        vm.DependencyData=false;\r\n                       // (vm.FormSchema)[2].Data[0].disabled = true;\r\n                        (vm.FormSchema)[3].Data[0].visibility = false;\r\n                        (vm.FormSchema)[1].Data[0].visibility = false\r\n                    }\r\n                    \r\n                    CustomData.forEach(item => {\r\n                        (vm.FormSchema)[1].Data[0].config.options.push({\r\n                            value: item.value,\r\n                            name: item.name\r\n                        })\r\n                    })\r\n                }\r\n                else{\r\n                    vm.DependencyData=false;\r\n                    //(vm.FormSchema)[2].Data[0].disabled = true;\r\n                    (vm.FormSchema)[3].Data[0].visibility = false;\r\n                    (vm.FormSchema)[1].Data[0].visibility = false\r\n                }\r\n                if (e != \"\") {\r\n                    if (e.target.value == vm.dependentId) {\r\n                        vm.editDependency();\r\n                    }\r\n                }\r\n                vm.TagsSelectedArray = [];\r\n                vm.GetMultiSelectValue = [];\r\n                (vm.FormSchema)[1].Data[0].value = [];\r\n                $('#rightList input:checkbox').each(function (index, item) {\r\n                    $(item).prop('checked', false);\r\n                });\r\n            })\r\n        },\r\n        closePopup() {\r\n            var vm = this;\r\n            vm.$parent.isShowDependencyFieldPopup = false;\r\n            vm.$parent.popupcloseforsystemfields();\r\n        },\r\n        showWhenSelectItem(event, itm) {\r\n            var vm = this;\r\n            var GetDependencyDataArray = [];\r\n            vm.checkboxdisabled = false;\r\n            if (vm.GetEditDependencyData.value_mapping) {\r\n                GetDependencyDataArray = JSON.parse(vm.GetEditDependencyData.value_mapping);\r\n            }\r\n            var ele = document.getElementsByClassName(\"chkItems custom-control-input\");\r\n            var toggleEle = document.getElementsByClassName(\"form-check-input\");\r\n\r\n            GetDependencyDataArray.forEach((item, index) => {\r\n                if (item.value == itm.value) {\r\n                    item.dependent.forEach(inneritem => {\r\n                        for (var i = 0; i < ele.length; i++) {\r\n                            if (ele[i].id == inneritem) {\r\n                                ele[i].checked = true;\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            vm.selectedItem = itm;\r\n        },\r\n        toggleSelected(event, item) { \r\n            var vm = this;\r\n            let value = 0;\r\n            if (event.target.checked == true) {\r\n                value = item.value;\r\n            }\r\n            let ths = this;\r\n            if (ths.selectedItem != null && typeof (ths.selectedItem.value) != 'undefined') {\r\n                ths.dependentListArray.forEach(function (x) {\r\n                    if (x.value == ths.selectedItem.value) {\r\n                        x.isDefault = value;\r\n                    }\r\n                });\r\n            }\r\n            vm.$refs.DependencyForm.UpdateKeyValue();\r\n        },\r\n        checkedSelected(event, data) {\r\n            var vm = this;\r\n            var element = document.getElementById(data.value + '_id');\r\n            if (event.target.checked) {\r\n                if (element) {\r\n                    element.disabled = false;\r\n                }\r\n            }\r\n            else {\r\n                if (element) {\r\n                    element.disabled = true;\r\n                    element.checked = false\r\n                }\r\n            }\r\n            vm.dependentListArray.forEach((inneritem, innerindex) => {\r\n                if (vm.selectedItem.value === inneritem.value) {\r\n                    vm.dependentListArray[innerindex].dependent.push(data.value);\r\n                    vm.dependentListArray[innerindex].isDefault = \"\"                   \r\n                }\r\n            })\r\n\r\n        },\r\n        removeRecord(event, field, meta) {\r\n            var vm = this;\r\n            let getindex = vm.GetMultiSelectValue.findIndex(x => x.value === event.value);\r\n            if (getindex != -1) {\r\n                vm.GetMultiSelectValue.splice(getindex, 1);\r\n                vm.dependentListArray.splice(getindex, 1);\r\n            }\r\n        },\r\n        GetMultiValues() {\r\n            var vm = this;\r\n            var obj = (vm.FormSchema)[1].Data[0].config.options.filter(x => x.name == event.target.textContent)[0];\r\n            obj.isSel = false;\r\n            vm.GetMultiSelectValue.push(obj);\r\n            vm.dependentListArray.push({ value: obj.value, dependent: []});\r\n        },\r\n        onSubmit(formfields, e) {\r\n            var vm = this; \r\n            var dependentOn = formfields.DependOn;\r\n            var showWhenArray = [];\r\n            var showWhen = JSON.stringify(Array.prototype.map.call(formfields.ShowWhen, function (item) {\r\n                showWhenArray.push(item.value);\r\n            }))\r\n            // var obj ={},\r\n            if(formfields.IsRequired[0]==1){\r\n                vm.isreq = true;\r\n            }\r\n            else{\r\n                vm.isreq =false\r\n            }\r\n            var obj = {\r\n                \"depend_on\": formfields.DependOn,\r\n                \"value\": showWhenArray,\r\n                \"IsRequired\":vm.isreq\r\n            };\r\n            var url = `customFieldDependencyId=&customlayoutId=${vm.CustomLayout_Id}&customFieldId=${vm.CustomFieldId}&dependentOn=${dependentOn}&showWhen=${JSON.stringify(obj)}&valueMapping=${JSON.stringify(vm.dependentListArray)}`\r\n            DataService.ManageCustomFieldDependency(url).then(response => {               \r\n                if (response.data == '1') {\r\n                    vm.SetDependField(dependentOn);\r\n                    vm.ShowAlert(vm.$t('DependentSuccess'), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.closePopup();\r\n                } else if (response.data == '2') {\r\n                    vm.SetDependField(dependentOn);\r\n                    vm.ShowAlert(vm.$t('UpdatedSuccessfully'), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.closePopup();\r\n                }\r\n            })\r\n        },\r\n        SetDependField(dependCustomField){\r\n            var vm=this;\r\n            vm.$parent.LayoutList.forEach(x=>{\r\n                x.FieldData.forEach(item=>{\r\n                    if(item.display_name==vm.displayname){\r\n                        item.has_dependent_field=dependCustomField;\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        async editDependency() {\r\n            //debugger\r\n            var vm = this;\r\n            vm.GetEditDependencyData = [];\r\n            var dependentData = [];\r\n            vm.TagsSelectedArray = [];\r\n            vm.GetMultiSelectValue = [];\r\n            (vm.FormSchema)[1].Data[0].value = [];\r\n            var url = `CustomLayoutId=${vm.CustomLayout_Id}&customFieldId=${vm.$parent.CustomFieldId}&dependentOnId=`; //${vm.dependentOnDdlId}`\r\n            await DataService.GetCustomFieldId(url).then(response => {\r\n                dependentData = JSON.parse(response.data)\r\n                if (dependentData.data.length > 0) {\r\n                    vm.GetEditDependencyData = dependentData.data[0];\r\n                    var data = [];\r\n                    data=JSON.parse(vm.GetEditDependencyData.show_when)\r\n                    var GetArray= (Object.values(data))\r\n                    vm.FormSchema[2].Data[0].value=GetArray[2];\r\n                    // data.forEach(datavalues => {\r\n                    //     vm.FormSchema[2].Data[0].value=GetArray[2];\r\n                    // })\r\n                    // vm.FormSchema[2].Data[0].value=data[].IsRequired;\r\n                    // dependentData.data.forEach( xvalue =>{\r\n                    //     var array = xvalue.value_mapping.split(\" \");\r\n                    //     array = JSON.parse(array);\r\n                    //   if(array.length >= 2){\r\n                    //         vm.FormSchema[2].Data[0].value= array[1].IsRequired;\r\n                    //   }\r\n                    //   else{\r\n                    //     vm.FormSchema[2].Data[0].value=array[0].IsRequired\r\n                    //   }\r\n                       \r\n                    // })\r\n\r\n                }\r\n            })\r\n            vm.dependentId = dependentData.data[0]?.dependent_on ?? null;\r\n            if (vm.dependentId != null) {\r\n                (vm.FormSchema)[0].Data[0].value = vm.dependentId;\r\n                await vm.GetCustomFieldDDL('', '', vm.dependentId);\r\n                const showWhenValues = JSON.parse(vm.GetEditDependencyData.show_when).value;\r\n                const selectedValues = (vm.FormSchema)[1].Data[0].config.options.filter(item => {\r\n                    return showWhenValues.includes(item.value);\r\n                });\r\n\r\n                vm.GetMultiSelectValue = selectedValues;\r\n                vm.dependentListArray = JSON.parse(vm.GetEditDependencyData.value_mapping);\r\n                vm.TagsSelectedArray = selectedValues.map(item => ({\r\n                    label: item.name,\r\n                    value: item.value\r\n                }));\r\n                (vm.FormSchema)[1].Data[0].value = vm.TagsSelectedArray;\r\n                return;\r\n            } else {\r\n                return\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scroldv {\r\n    max-height: 490px;\r\n    overflow-y: scroll;\r\n}\r\n\r\n.sel {\r\n    background-color: #41b883;\r\n    /* Add your selected item style */\r\n    color: #fff;\r\n}\r\n\r\n.timeline-panel li {\r\n    max-width: 95%;\r\n    min-width: 95%;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.custom-checkbox .custom-control-label {\r\n    margin-top: 5px;\r\n    margin-left: 0px;\r\n    padding-top: 3px;\r\n    padding-left: 5px;\r\n}\r\n\r\n.custom-control-input {\r\n    z-index: 1;\r\n    opacity: 0;\r\n    top: 5px;\r\n}\r\n\r\n.customslidercheck .form-check-input {\r\n    visibility: hidden;\r\n}\r\n\r\n.customslidercheck {\r\n    max-width: 68px;\r\n    width: 100%;\r\n    position: relative;\r\n    height: 24px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DependencyField.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DependencyField.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./DependencyField.vue?vue&type=template&id=0ff73cc7&scoped=true&lang=en\"\nimport script from \"./DependencyField.vue?vue&type=script&lang=js\"\nexport * from \"./DependencyField.vue?vue&type=script&lang=js\"\nimport style0 from \"./DependencyField.vue?vue&type=style&index=0&id=0ff73cc7&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0ff73cc7\",\n  null\n  \n)\n\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DependencyField.vue?vue&type=style&index=0&id=0ff73cc7&prod&scoped=true&lang=css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4735779c\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".makepopleft#mainDivProp .dropdown-menu{inset:unset!important;transform:unset!important;right:0!important}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddCustomFieldsPopup.vue?vue&type=style&index=0&id=61dfc81c&prod&lang=css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3590052e\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".scroldv[data-v-0ff73cc7]{max-height:490px;overflow-y:scroll}.sel[data-v-0ff73cc7]{background-color:#41b883;color:#fff}.timeline-panel li[data-v-0ff73cc7]{max-width:95%;min-width:95%;margin-bottom:0}.custom-checkbox .custom-control-label[data-v-0ff73cc7]{margin-top:5px;margin-left:0;padding-top:3px;padding-left:5px}.custom-control-input[data-v-0ff73cc7]{z-index:1;opacity:0;top:5px}.customslidercheck .form-check-input[data-v-0ff73cc7]{visibility:hidden}.customslidercheck[data-v-0ff73cc7]{max-width:68px;width:100%;position:relative;height:24px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddCustomFieldsPopup.vue?vue&type=style&index=0&id=61dfc81c&prod&lang=css\"","export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DependencyField.vue?vue&type=style&index=0&id=0ff73cc7&prod&scoped=true&lang=css\""],"sourceRoot":""}