{"version":3,"sources":["webpack:///./src/views/Knowledgebase/CreateArticle.vue","webpack:///src/views/Knowledgebase/CreateArticle.vue","webpack:///./src/views/Knowledgebase/CreateArticle.vue?9a8a","webpack:///./src/views/Knowledgebase/CreateArticle.vue?0ce8"],"names":["render","_vm","this","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","buttons","FormSchema","on","onSubmit","scopedSlots","_u","key","fn","data","editor","onReady","model","value","fieldInfo","callback","$$v","$set","expression","error","staticRenderFns","CLASSIC_EDITOR","isAllowedFileType","layoutType","Data","astype","label","name","placeholder","validationRules","max","config","options","showLabel","FieldIndex","maxSize","accept","fileType","iconClass","showSelectedFiles","onDeleteSelectedFiles","onChange","GetBase64String","showAddIcon","onAddButtonClick","multiple","onChangeRadio","settings","isInSlot","visibility","type","class","text","onClick","Preview","Close","fileName","file","ArticleId","allowedPerFileSizeInMb","disallowFileTypes","ArticleModel","ArticleTitle","CategoryId","StatusId","Description","SortDescription","AssignTo","VisibleToClient","fileData","ModuleName","Type","SubModuleCode","checkFileValidSize","checkFileValidExt","fileExt","fileSize","created","GetStatus","GetCategory","GetUsersByCompanyId","GetConfigurationValueByKey","$route","params","id","GetArticleById","methods","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","item","$delete","e","field","vm","target","dataset","url","DataServices","GetDDLData","then","response","DATA","length","StatusData","forEach","Obj","push","GetCategoryDDL","result","CategortData","TICKET_ARTICLE_CATEGORY_PARENT","obj","TICKET_ARTICLE_CATEGORY_NAME","TICKET_ARTICLE_CATEGORY_ID","JSON","parse","USERNAME","USER_ID","FrontSiteUrlHostName","list","$","each","proxy","index1","coreConfigKey","configDataValue","ths","status","ArticleData","TICKET_ARTICLE_TITLE","TICKET_ARTICLE_ASSIGNED_TO","TICKET_ARTICLE_KEYWORDS","STATUS_ID","TICKET_ARTICLE_DESC","VISIBLE_TO_CLIENT","attachmentName","ATTACHMENT_NAME","attachmentPath","ATTACHMENTFULLPATH","ATTACHMENT_DESC","Size","Extension","setFile","files","FileName","SizeToMb","bytes","vueObj","sizeInBuytes","parseInt","byesInMB","evt","f","reader","FileReader","onload","theFile","binaryData","base64StringEncoded","window","btoa","n","lastIndexOf","extensionName","substring","attachemnetMime","size","fileObj","attachement_mime","base64String","contentType","readAsBinaryString","ex","$router","onClickSelectedFile","formfields","val","datafields","extArray","split","includes","ShowAlert","fileSizeInMB","Title","Category","formData","stringify","SaveUpdateArticle","component"],"mappings":"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","file":"js/chunk-2d0b2565.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(\" \"+_vm._s(_vm.$t('AddArticle')))])])])]),_c('div',{staticClass:\"border p-3\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-Description\",fn:function({ data }){return [_c('ckeditor',{attrs:{\"editor\":_vm.editor},on:{\"ready\":_vm.onReady},model:{value:(data.fieldInfo.value),callback:function ($$v) {_vm.$set(data.fieldInfo, \"value\", $$v)},expression:\"data.fieldInfo.value\"}}),_c('span',{staticClass:\"invalid-feedback d-block\",attrs:{\"name\":\"Header\"}},[_vm._v(_vm._s(data.error))])]}}])})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <section class=\"main-content\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 padding-t_8\">\r\n                <div class=\"theme-primary partition-full\">\r\n                    <span class=\"p-name text-white\"> {{ $t('AddArticle') }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border p-3\">\r\n            <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\">\r\n                <template v-slot:tgslot-Description=\"{ data }\">\r\n                    <ckeditor :editor=\"editor\" @ready=\"onReady\" v-model=data.fieldInfo.value></ckeditor>\r\n                    <span name=\"Header\" class=\"invalid-feedback d-block\">{{ data.error }}</span> \r\n                </template>\r\n            </dynamic-form>\r\n        </div>\r\n    </section>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            editor: this.CLASSIC_EDITOR,\r\n            isLoading: false,\r\n            isAllowedFileType: null,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"triple\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Title'),\r\n                            name: \"Title\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('Title'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Category'),\r\n                            name: \"Category\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Category'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('AssignTo'),\r\n                            name: \"AssignTo\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Category'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"FileField\",\r\n                            showLabel: false,\r\n                            name: \"ExpenseAttechment\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: false,\r\n                            FieldIndex: 0,\r\n                            config: {\r\n                                maxSize: 10000,\r\n                                accept: [\r\n                                    {\r\n                                        fileType: 'png',\r\n                                        iconClass: 'fa-file-image-o'\r\n                                    },\r\n                                    {\r\n                                        fileType: 'jpg',\r\n                                        iconClass: 'fa-file-image-o'\r\n                                    },\r\n                                    {\r\n                                        fileType: 'jpeg',\r\n                                        iconClass: 'fa-file-image-o'\r\n                                    },\r\n                                    {\r\n                                        fileType: 'pdf',\r\n                                        iconClass: 'fa-file-archive-o'\r\n                                    }\r\n                                ],\r\n                                showSelectedFiles: [],\r\n                                onDeleteSelectedFiles: this.onDeleteSelectedFiles,\r\n                                onChange: this.GetBase64String,                                \r\n                                showAddIcon: false,\r\n                                onAddButtonClick: '',\r\n                                multiple: false\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Sort Description'),\r\n                            name: \"SortDescription\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('ShortDescription'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('Status'),\r\n                            name: \"Status\",\r\n                            value: \"1105\",\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.onChangeRadio\r\n                            },\r\n                            placeholder: this.$t('SelectStatus'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('Description'),\r\n                            name: \"Description\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            settings: {\r\n                                isInSlot: true\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: { \"required\": true, max: 200 },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"toggleField\",\r\n                            label: this.$t('VisibleToClient'),\r\n                            name: \"VisibleToClient\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-info save\",\r\n                    text: \"<i class='fa fa-eye pr-2'></i> Preview\",\r\n                    onClick: this.Preview\r\n                },\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\"\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i> Cancel\",\r\n                    onClick: this.Close\r\n                }\r\n            ],\r\n            fileName: null,\r\n            file: null,\r\n            ArticleId: 0,\r\n            allowedPerFileSizeInMb: 0,\r\n            disallowFileTypes: '',\r\n            ArticleModel: {\r\n                ArticleId: 0,\r\n                ArticleTitle: '',\r\n                CategoryId: '',\r\n                StatusId: '',\r\n                Description: '',\r\n                SortDescription:'',\r\n                AssignTo: '',              \r\n                VisibleToClient:'',\r\n                fileData: [],\r\n                ModuleName:'',\r\n                Type:'',\r\n                SubModuleCode:''\r\n            },\r\n            StatusId:null,\r\n            checkFileValidSize: false,\r\n            checkFileValidExt: false,\r\n            fileExt:'',\r\n            fileSize:''\r\n        }\r\n    },\r\n    created: function () {\r\n        this.GetStatus();\r\n        this.GetCategory();\r\n        this.GetUsersByCompanyId();\r\n        this.GetConfigurationValueByKey();\r\n        if(this.$route.params.id>0){\r\n            this.GetArticleById(this.$route.params.id);\r\n        }\r\n        \r\n    },\r\n    methods: {\r\n        onReady(editor) {\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n        },\r\n        onDeleteSelectedFiles: function (item) {            \r\n            this.$delete(this.FormSchema[0].Data[3].config, 'showSelectedFiles');\r\n        },\r\n        onChangeRadio: function (e, field) {           \r\n            var vm = this;\r\n            vm.StatusId = e.target.dataset.value;\r\n        },\r\n        GetStatus: function () {\r\n            var url = `type=KnowledgeBase`\r\n            DataServices.GetDDLData(url).then(response => {\r\n                if (response.data.DATA.length > 0) {\r\n                    var StatusData = response.data.DATA;\r\n                    StatusData.forEach(element => {\r\n                        var Obj = {\r\n                            name: element.name,\r\n                            value: element.value\r\n                        }\r\n                        this.FormSchema[0].Data[5].config.options.push(Obj);\r\n                    });\r\n\r\n\r\n                }\r\n            })\r\n        },\r\n        GetCategory: function () {\r\n            var vm = this;\r\n            DataServices.GetCategoryDDL().then(response => {\r\n                if (response.data.result.length > 0) {\r\n                    var CategortData = response.data.result;\r\n                    CategortData.forEach(element => {\r\n                        if (element.TICKET_ARTICLE_CATEGORY_PARENT == null) {\r\n                            let obj = {\r\n                                name: element.TICKET_ARTICLE_CATEGORY_NAME,\r\n                                value: element.TICKET_ARTICLE_CATEGORY_ID\r\n                            }\r\n                            vm.FormSchema[0].Data[1].config.options.push(obj);\r\n                        }\r\n                        if (element.TICKET_ARTICLE_CATEGORY_PARENT == element.TICKET_ARTICLE_CATEGORY_PARENT) {\r\n                            let obj = {\r\n                                name: element.TICKET_ARTICLE_CATEGORY_NAME,\r\n                                value: element.TICKET_ARTICLE_CATEGORY_ID\r\n                            }\r\n                            vm.FormSchema[0].Data[1].config.options.push(obj);\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        },\r\n        GetUsersByCompanyId: function () {\r\n            var url = `moduleName=KnowledgeBase`;\r\n            DataServices.GetUsersByCompanyId(url).then(response => {\r\n                if (JSON.parse(response.data.result).length > 0) {\r\n                    var StatusData = JSON.parse(response.data.result);\r\n                    StatusData.forEach(element => {\r\n                        var Obj = {\r\n                            name: element.USERNAME,\r\n                            value: element.USER_ID\r\n                        }\r\n                        this.FormSchema[0].Data[2].config.options.push(Obj);\r\n                    });\r\n\r\n\r\n                }\r\n            })\r\n        },\r\n        GetConfigurationValueByKey: async function () {\r\n            var vm = this;\r\n            var url = `moduleName=KnowledgeBase`\r\n            await DataServices.FrontSiteUrlHostName(url).then(function (response) {                               \r\n                if (response.data.list.result.length>0) {\r\n                    $.each(response.data.list.result, $.proxy(function (index1, item) {                        \r\n                        if (item.coreConfigKey == \"AttachmentFileSize\") {\r\n                            vm.allowedPerFileSizeInMb = item.configDataValue;\r\n                        }\r\n                        else if (item.coreConfigKey == \"AllowedFileTypes\") {\r\n                            vm.disallowFileTypes = item.configDataValue;\r\n                        }\r\n                    }, this));\r\n                }\r\n            })\r\n        },\r\n        GetArticleById: async function (ths) {\r\n            var vm = this;            \r\n            var url = `articleId=${ths}`\r\n            await DataServices.GetArticleById(url).then(function (response) {                      \r\n                  if(response.data.status=='Success'){\r\n                    var ArticleData=JSON.parse(response.data.result);\r\n                    vm.FormSchema[0].Data[0].value=ArticleData[0].TICKET_ARTICLE_TITLE;\r\n                    vm.FormSchema[0].Data[1].value=ArticleData[0].TICKET_ARTICLE_CATEGORY_ID;\r\n                    vm.FormSchema[0].Data[2].value=ArticleData[0].TICKET_ARTICLE_ASSIGNED_TO;\r\n                    vm.FormSchema[0].Data[4].value=ArticleData[0].TICKET_ARTICLE_KEYWORDS;\r\n                    vm.FormSchema[0].Data[5].value=ArticleData[0].STATUS_ID;\r\n                    vm.FormSchema[1].Data[0].value=ArticleData[0].TICKET_ARTICLE_DESC;\r\n                    vm.FormSchema[2].Data[0].value=ArticleData[0].VISIBLE_TO_CLIENT;\r\n                    var Obj = {\r\n                            attachmentName: ArticleData[0].ATTACHMENT_NAME,\r\n                            attachmentPath: ArticleData[0].ATTACHMENTFULLPATH\r\n                        }; \r\n                    vm.FormSchema[0].Data[3].config.showSelectedFiles.push(Obj);\r\n                  }   \r\n                  debugger\r\n                  vm.fileSize=JSON.parse(ArticleData[0].ATTACHMENT_DESC).Size;\r\n                  vm.fileExt=  '.' + JSON.parse(ArticleData[0].ATTACHMENT_DESC).Extension;         \r\n            })\r\n        },\r\n        setFile: function (e) {\r\n            var vm = this;\r\n            vm.file = e.target.files[0];\r\n            vm.FileName = e.target.files[0].name;\r\n        },\r\n        SizeToMb: function (bytes) {\r\n            // debugger;\r\n            var vueObj = this;\r\n            var sizeInBuytes = parseInt(vueObj.allowedPerFileSizeInMb, 10) * 1048576;\r\n            if (bytes > sizeInBuytes) {\r\n                return -1;\r\n            }\r\n            else {\r\n                var byesInMB = (bytes / 1024) / 1024;\r\n                return byesInMB;\r\n            }\r\n        },        \r\n        GetBase64String: function (evt) {            \r\n            try {\r\n                var vm = this;\r\n                vm.fileData = [];\r\n                vm.fileExt = '';\r\n                var f = evt.target.files[0]; \r\n                var reader = new FileReader();\r\n                reader.onload = (function (theFile) {\r\n                    return function (e) {                        \r\n                        var binaryData = e.target.result;\r\n                        var base64StringEncoded = window.btoa(binaryData);\r\n                        var fileName = f.name;\r\n                        vm.fileName = fileName;\r\n                        var n = fileName.lastIndexOf(\".\");\r\n                        var extensionName = fileName.substring(n + 1, fileName.length);\r\n                        vm.fileExt += \".\" + extensionName;\r\n                        var attachemnetMime = '{\"ContentType\":\"' + f.type + '\",\"Size\":\"' + f.size + '\",\"Extension\":\"' + extensionName + '\"}';\r\n                        var fileSize = f.size;\r\n                        vm.fileSize = fileSize;\r\n                        var fileObj = {\r\n                            attachement_mime: attachemnetMime,\r\n                            fileName: fileName,\r\n                            base64String: base64StringEncoded,\r\n                            fileSize: f.size,\r\n                            contentType: f.type\r\n                        };\r\n\r\n                        vm.fileData.push(fileObj);\r\n                    };\r\n                })(f);\r\n                reader.readAsBinaryString(f);\r\n            }\r\n            catch (ex) {\r\n            }\r\n        },\r\n        Close:function(){\r\n            this.$router.push({ name: 'KnowledgebaseCAUser'});\r\n        },\r\n        onClickSelectedFile() { },\r\n        onSubmit(formfields, val) {            \r\n            var vm = this;\r\n            vm.isLoading=true;\r\n            var datafields = formfields;\r\n            var extArray = vm.disallowFileTypes.split(',');\r\n            if (extArray.includes(vm.fileExt)) {\r\n                vm.checkFileValidExt = true;                \r\n            }\r\n            else {\r\n                vm.checkFileValidExt = false;\r\n                vm.ShowAlert(vm.$t(\"InvalidFileUploadMsg\", vm.fileName, vm.disallowFileTypes), \"warning\", true, vm.$t(\"Alert\"));\r\n            }\r\n            var fileSizeInMB = this.SizeToMb(vm.fileSize);\r\n            if (fileSizeInMB < parseInt(vm.allowedPerFileSizeInMb, 10)) {\r\n                vm.checkFileValidSize = true;\r\n            }\r\n            else {                \r\n                vm.checkFileValidSize = false;\r\n                vm.ShowAlert(vm.$t(\"ExceedAllowedSize\", vm.fileName, vm.allowedPerFileSizeInMb), \"warning\", true, vm.$t(\"Alert\"));\r\n            }            \r\n            if (vm.checkFileValidExt == true && vm.checkFileValidSize == true) {                \r\n                vm.ArticleModel.ArticleId = vm.ArticleId;\r\n                vm.ArticleModel.ArticleTitle = datafields.Title;\r\n                vm.ArticleModel.CategoryId = datafields.Category;                \r\n                vm.ArticleModel.StatusId = vm.StatusId==null?vm.FormSchema[0].Data[5].value:vm.StatusId;\r\n                vm.ArticleModel.Description = datafields.Description;\r\n                vm.ArticleModel.SortDescription = datafields.SortDescription;\r\n                vm.ArticleModel.AssignTo = datafields.AssignTo;\r\n                vm.ArticleModel.VisibleToClient = datafields.VisibleToClient==true?1:0;\r\n                vm.ArticleModel.fileData = vm.fileData;\r\n                vm.ArticleModel.ModuleName = 'Ticketing';\r\n                vm.ArticleModel.Type = vm.$route.params.id>0?'UPDATE':'ADD'\r\n                vm.ArticleModel.SubModuleCode = 'KnowledgeBase';\r\n                var formData = JSON.stringify(vm.ArticleModel);            \r\n                DataServices.SaveUpdateArticle(formData).then((response) => { \r\n                if(response.data.status==\"Success\"){\r\n                    if((response.data.result>0 && response.data.result !=3) && vm.ArticleModel.Type=='ADD'){\r\n                        vm.ShowAlert(vm.$t('AddedSuccess', [vm.$t('Article')]), \"Success\", true, vm.$t('Alert'));\r\n                        vm.$router.push({ name: 'KnowledgebaseCAUser'});\r\n                    }\r\n                    else if(response.data.result ==3 && vm.ArticleModel.Type=='ADD'){\r\n                        vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"Article\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                    else if((response.data.result==0 && response.data.result !=3) && vm.ArticleModel.Type=='UPDATE'){\r\n                        vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"Article\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                        vm.$router.push({ name: 'KnowledgebaseCAUser'});\r\n                    }\r\n                }\r\n                vm.isLoading=false;                \r\n                })\r\n            }\r\n            else{\r\n                vm.isLoading=false;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateArticle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateArticle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CreateArticle.vue?vue&type=template&id=8a192ae4&\"\nimport script from \"./CreateArticle.vue?vue&type=script&lang=js&\"\nexport * from \"./CreateArticle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}