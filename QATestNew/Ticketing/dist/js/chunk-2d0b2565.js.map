{"version":3,"sources":["webpack:///./src/views/Knowledgebase/CreateArticle.vue","webpack:///src/views/Knowledgebase/CreateArticle.vue","webpack:///./src/views/Knowledgebase/CreateArticle.vue?9a8a","webpack:///./src/views/Knowledgebase/CreateArticle.vue?0ce8"],"names":["render","_vm","this","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","ref","buttons","FormSchema","on","onSubmit","scopedSlots","_u","key","fn","data","class","error","editor","onReady","$event","updateCkeditorModel","directives","name","rawName","value","fieldInfo","expression","domProps","target","composing","$set","staticRenderFns","CLASSIC_EDITOR","isAllowedFileType","layoutType","Data","astype","label","placeholder","validationRules","max","config","options","showLabel","FieldIndex","maxSize","accept","fileType","iconClass","showSelectedFiles","onDeleteSelectedFiles","onChange","GetBase64String","showAddIcon","onAddButtonClick","multiple","onChangeRadio","settings","isInSlot","visibility","type","text","onClick","Preview","Close","fileName","file","ArticleId","allowedPerFileSizeInMb","disallowFileTypes","ArticleModel","ArticleTitle","CategoryId","StatusId","Description","SortDescription","AssignTo","VisibleToClient","fileData","ModuleName","Type","SubModuleCode","checkFileValidSize","checkFileValidExt","fileExt","fileSize","created","GetStatus","GetCategory","GetUsersByCompanyId","GetConfigurationValueByKey","$route","params","id","GetArticleById","methods","setEditorContent","newContent","content","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","mediaIcon","document","getElementsByClassName","remove","divToRemove","querySelector","ArrowIcon","e","x","item","$delete","field","vm","dataset","url","DataServices","GetDDLData","then","response","DATA","length","StatusData","forEach","Obj","push","$refs","AddForm","UpdateKeyValue","GetCategoryDDL","result","CategortData","TICKET_ARTICLE_CATEGORY_PARENT","obj","TICKET_ARTICLE_CATEGORY_NAME","TICKET_ARTICLE_CATEGORY_ID","JSON","parse","USERNAME","USER_ID","FrontSiteUrlHostName","list","$","each","proxy","index1","coreConfigKey","configDataValue","ths","status","ArticleData","TICKET_ARTICLE_TITLE","TICKET_ARTICLE_ASSIGNED_TO","TICKET_ARTICLE_KEYWORDS","STATUS_ID","VISIBLE_TO_CLIENT","attachmentName","ATTACHMENT_NAME","attachmentPath","ATTACHMENTFULLPATH","ATTACHMENT_DESC","Size","Extension","fileObj","attachement_mime","contentType","ContentType","setFile","files","FileName","SizeToMb","bytes","vueObj","sizeInBuytes","parseInt","byesInMB","evt","f","reader","FileReader","onload","theFile","binaryData","base64StringEncoded","window","btoa","n","lastIndexOf","extensionName","substring","attachemnetMime","size","base64String","readAsBinaryString","ex","$router","formfields","val","datafields","extArray","split","includes","ShowAlert","fileSizeInMB","Title","Category","undefined","formData","stringify","SaveUpdateArticle","component"],"mappings":"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","file":"js/chunk-2d0b2565.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(\" \"+_vm._s(_vm.$t('AddArticle')))])])])]),_c('div',{staticClass:\"border p-3\"},[_c('dynamic-form',{ref:\"AddForm\",attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-Description\",fn:function({ data }){return [_c('ckeditor',{class:{ 'is-invalid': data.error != '' },attrs:{\"editor\":_vm.editor},on:{\"ready\":_vm.onReady,\"input\":function($event){return _vm.updateCkeditorModel($event, data)}}}),_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(_vm._s(data.error))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.fieldInfo.value),expression:\"data.fieldInfo.value\"}],attrs:{\"type\":\"hidden\"},domProps:{\"value\":(data.fieldInfo.value)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(data.fieldInfo, \"value\", $event.target.value)}}})]}}])})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <section class=\"main-content\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 padding-t_8\">\r\n                <div class=\"theme-primary partition-full\">\r\n                    <span class=\"p-name text-white\"> {{ $t('AddArticle') }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border p-3\">\r\n            <dynamic-form lang=\"en\" ref=\"AddForm\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\">\r\n                <template v-slot:tgslot-Description=\"{ data }\">                   \r\n                    <ckeditor :editor=\"editor\" @ready=\"onReady\" @input=\"updateCkeditorModel($event, data)\" :class=\"{ 'is-invalid': data.error != '' }\"></ckeditor>\r\n                    <span class=\"invalid-feedback\">{{ data.error }}</span> \r\n                    <input type=\"hidden\" v-model='data.fieldInfo.value' />\r\n                </template>\r\n            </dynamic-form>\r\n        </div>\r\n    </section>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            editor: this.CLASSIC_EDITOR,\r\n            isLoading: false,\r\n            isAllowedFileType: null,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"triple\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Title'),\r\n                            name: \"Title\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('Title'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Category'),\r\n                            name: \"Category\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Category'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('AssignTo'),\r\n                            name: \"AssignTo\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Category'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"FileField\",\r\n                            showLabel: false,\r\n                            name: \"ArticleAttechment\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: false,\r\n                            FieldIndex: 0,\r\n                            config: {\r\n                                maxSize: 10000,\r\n                                accept: [\r\n                                    {\r\n                                        fileType: 'png',\r\n                                        iconClass: 'fa-file-image-o'\r\n                                    },\r\n                                    {\r\n                                        fileType: 'jpg',\r\n                                        iconClass: 'fa-file-image-o'\r\n                                    },\r\n                                    \r\n                                    {\r\n                                        fileType: 'jpeg',\r\n                                        iconClass: 'fa-file-image-o'\r\n                                    },\r\n                                    {\r\n                                        fileType: 'pdf',\r\n                                        iconClass: 'fa-file-archive-o'\r\n                                    }\r\n                                ],\r\n                                showSelectedFiles: [],\r\n                                onDeleteSelectedFiles: this.onDeleteSelectedFiles,\r\n                                onChange: this.GetBase64String,                                \r\n                                showAddIcon: false,\r\n                                onAddButtonClick: '',\r\n                                multiple: false\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Sort Description'),\r\n                            name: \"SortDescription\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('ShortDescription'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('Status'),\r\n                            name: \"Status\",\r\n                            value: \"1105\",\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.onChangeRadio\r\n                            },\r\n                            placeholder: this.$t('SelectStatus'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('Description'),\r\n                            name: \"Description\",\r\n                            value: \"\",\r\n                            placeholder: \"\",                           \r\n                            settings: {\r\n                                isInSlot: true\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: { \"required\": true, max: 4000 },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"toggleField\",\r\n                            label: this.$t('VisibleToClient'),\r\n                            name: \"VisibleToClient\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-info save\",\r\n                    text: \"<i class='fa fa-eye pr-2'></i> Preview\",\r\n                    onClick: this.Preview\r\n                },\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    //onClick: this.onSubmit\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i> Cancel\",\r\n                    onClick: this.Close\r\n                }\r\n            ],\r\n            fileName: null,\r\n            file: null,\r\n            ArticleId: 0,\r\n            allowedPerFileSizeInMb: 0,\r\n            disallowFileTypes: '',\r\n            ArticleModel: {\r\n                ArticleId: 0,\r\n                ArticleTitle: '',\r\n                CategoryId: '',\r\n                StatusId: '',\r\n                Description: '',\r\n                SortDescription:'',\r\n                AssignTo: '',              \r\n                VisibleToClient:'',\r\n                fileData: [],\r\n                ModuleName:'',\r\n                Type:'',\r\n                SubModuleCode:''\r\n            },\r\n            StatusId:null,\r\n            checkFileValidSize: false,\r\n            checkFileValidExt: false,\r\n            fileExt:'',\r\n            fileSize:'',\r\n            \r\n        }\r\n    },\r\n    created: function () {\r\n        this.GetStatus();\r\n        this.GetCategory();\r\n        this.GetUsersByCompanyId();\r\n        this.GetConfigurationValueByKey();\r\n        if(this.$route.params.id>0){\r\n            this.ArticleId=this.$route.params.id;\r\n            this.GetArticleById(this.$route.params.id);\r\n        }\r\n        \r\n    },\r\n    methods: {\r\n        setEditorContent(newContent) {\r\n            debugger\r\n            this.data.content = newContent;\r\n        },\r\n\r\n        onReady(editor) {\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n            let mediaIcon=document.getElementsByClassName('ck-dropdown')[2]\r\n            mediaIcon.remove();\r\n            var divToRemove = document.querySelector('.ck-file-dialog-button');\r\n            divToRemove.remove();\r\n            let ArrowIcon=document.getElementsByClassName('ck ck-button ck-off')[8]\r\n            ArrowIcon.remove();\r\n        },\r\n        updateCkeditorModel: function(e, x){\r\n            \r\n            x.fieldInfo.value = e;\r\n        },\r\n        onDeleteSelectedFiles: function (item) {            \r\n            this.$delete(this.FormSchema[0].Data[3].config, 'showSelectedFiles');\r\n        },\r\n        onChangeRadio: function (e, field) {           \r\n            var vm = this;\r\n            vm.StatusId = e.target.dataset.value;\r\n        },\r\n        GetStatus: function () {\r\n            var url = `type=KnowledgeBase`\r\n            DataServices.GetDDLData(url).then(response => {\r\n                if (response.data.DATA.length > 0) {\r\n                    var StatusData = response.data.DATA;\r\n                   // debugger\r\n                    StatusData.forEach(element => {\r\n                        var Obj = {\r\n                            name: element.name,\r\n                            value: element.value\r\n                        }\r\n                        this.FormSchema[0].Data[5].config.options.push(Obj);\r\n                        this.$refs.AddForm.UpdateKeyValue();\r\n                    });\r\n\r\n\r\n                }\r\n            })\r\n        },\r\n        GetCategory: function () {\r\n            var vm = this;\r\n            DataServices.GetCategoryDDL().then(response => {\r\n                if (response.data.result.length > 0) {\r\n                    var CategortData = response.data.result;\r\n                    CategortData.forEach(element => {\r\n                        if (element.TICKET_ARTICLE_CATEGORY_PARENT == null) {\r\n                            let obj = {\r\n                                name: element.TICKET_ARTICLE_CATEGORY_NAME,\r\n                                value: element.TICKET_ARTICLE_CATEGORY_ID\r\n                            }\r\n                            vm.FormSchema[0].Data[1].config.options.push(obj);\r\n                            vm.$refs.AddForm.UpdateKeyValue();\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        },\r\n        GetUsersByCompanyId: function () {\r\n            var url = `moduleName=KnowledgeBase`;\r\n            DataServices.GetUsersByCompanyId(url).then(response => {\r\n                if (JSON.parse(response.data.result).length > 0) {\r\n                    var StatusData = JSON.parse(response.data.result);\r\n                    StatusData.forEach(element => {\r\n                        var Obj = {\r\n                            name: element.USERNAME,\r\n                            value: element.USER_ID\r\n                        }\r\n                        this.FormSchema[0].Data[2].config.options.push(Obj);\r\n                        this.$refs.AddForm.UpdateKeyValue();\r\n                    });\r\n\r\n\r\n                }\r\n            })\r\n        },\r\n        GetConfigurationValueByKey: async function () {\r\n            var vm = this;\r\n            var url = `moduleName=KnowledgeBase`\r\n            await DataServices.FrontSiteUrlHostName(url).then(function (response) {                               \r\n                if (response.data.list.result.length>0) {\r\n                    $.each(response.data.list.result, $.proxy(function (index1, item) {                        \r\n                        if (item.coreConfigKey == \"AttachmentFileSize\") {\r\n                            vm.allowedPerFileSizeInMb = item.configDataValue;\r\n                        }\r\n                        else if (item.coreConfigKey == \"AllowedFileTypes\") {\r\n                            vm.disallowFileTypes = item.configDataValue;\r\n                        }\r\n                    }, this));\r\n                }\r\n            })\r\n        },\r\n        GetArticleById: async function (ths) {\r\n            var vm = this;            \r\n            var url = `articleId=${ths}`\r\n            await DataServices.GetArticleById(url).then(function (response) {                      \r\n                  if(response.data.status=='Success'){\r\n                 //   debugger\r\n                    var ArticleData=JSON.parse(response.data.result);\r\n                    vm.FormSchema[0].Data[0].value=ArticleData[0].TICKET_ARTICLE_TITLE;\r\n                    vm.FormSchema[0].Data[1].value=ArticleData[0].TICKET_ARTICLE_CATEGORY_ID;\r\n                    vm.FormSchema[0].Data[2].value=ArticleData[0].TICKET_ARTICLE_ASSIGNED_TO;\r\n                    vm.FormSchema[0].Data[4].value=ArticleData[0].TICKET_ARTICLE_KEYWORDS;\r\n                    vm.FormSchema[0].Data[5].value=ArticleData[0].STATUS_ID;\r\n                   // vm.FormSchema[1].Data[0].value=ArticleData[0].TICKET_ARTICLE_DESC;\r\n                    vm.FormSchema[2].Data[0].value=ArticleData[0].VISIBLE_TO_CLIENT;\r\n                    var Obj = {\r\n                            attachmentName: ArticleData[0].ATTACHMENT_NAME,\r\n                            attachmentPath: ArticleData[0].ATTACHMENTFULLPATH\r\n                        }; \r\n                    vm.FormSchema[0].Data[3].config.showSelectedFiles.push(Obj);\r\n                  }   \r\n                  //debugger\r\n                  \r\n                  vm.fileSize=JSON.parse(ArticleData[0].ATTACHMENT_DESC).Size;\r\n                  vm.fileExt=  '.' + JSON.parse(ArticleData[0].ATTACHMENT_DESC).Extension;    \r\n                  var fileObj = {\r\n                        attachement_mime: ArticleData[0].ATTACHMENT_DESC,\r\n                        fileName: ArticleData[0].ATTACHMENT_NAME,\r\n                        //base64String: base64StringEncoded,\r\n                        fileSize: vm.fileSize,\r\n                        contentType:JSON.parse(ArticleData[0].ATTACHMENT_DESC).ContentType\r\n                    };\r\n                    //vm.updateCkeditorModel(ArticleData[0].TICKET_ARTICLE_DESC);\r\n                    //vm.setEditorContent('<p>New content</p>');\r\n                    vm.ArticleModel.fileData.push(fileObj);  \r\n                    debugger \r\n                    // document.querySelector('.ck-blurred').innerHTML = ArticleData[0].TICKET_ARTICLE_DESC;\r\n                      \r\n            })\r\n        },\r\n        setFile: function (e) {\r\n            var vm = this;\r\n            vm.file = e.target.files[0];\r\n            vm.FileName = e.target.files[0].name;\r\n        },\r\n        SizeToMb: function (bytes) {\r\n            // debugger;\r\n            var vueObj = this;\r\n            var sizeInBuytes = parseInt(vueObj.allowedPerFileSizeInMb, 10) * 1048576;\r\n            if (bytes > sizeInBuytes) {\r\n                return -1;\r\n            }\r\n            else {\r\n                var byesInMB = (bytes / 1024) / 1024;\r\n                return byesInMB;\r\n            }\r\n        },        \r\n        GetBase64String: function (evt) {            \r\n            try {\r\n                var vm = this;\r\n                vm.fileData = [];\r\n                vm.fileExt = '';\r\n                var f = evt.target.files[0]; \r\n                var reader = new FileReader();\r\n                reader.onload = (function (theFile) {\r\n                    return function (e) {    \r\n                       // debugger                    \r\n                        var binaryData = e.target.result;\r\n                        var base64StringEncoded = window.btoa(binaryData);\r\n                        var fileName = f.name;\r\n                        vm.fileName = fileName;\r\n                        var n = fileName.lastIndexOf(\".\");\r\n                        var extensionName = fileName.substring(n + 1, fileName.length);\r\n                        vm.fileExt += \".\" + extensionName;\r\n                        var attachemnetMime = '{\"ContentType\":\"' + f.type + '\",\"Size\":\"' + f.size + '\",\"Extension\":\"' + extensionName + '\"}';\r\n                        var fileSize = f.size;\r\n                        vm.fileSize = fileSize;\r\n                        var fileObj = {\r\n                            attachement_mime: attachemnetMime,\r\n                            fileName: fileName,\r\n                            base64String: base64StringEncoded,\r\n                            fileSize: f.size,\r\n                            contentType: f.type\r\n                        };\r\n\r\n                        vm.fileData.push(fileObj);\r\n                    };\r\n                })(f);\r\n                reader.readAsBinaryString(f);\r\n            }\r\n            catch (ex) {\r\n            }\r\n        },\r\n        Close:function(){\r\n            this.$router.push({ name: 'KnowledgebaseCAUser'});\r\n        },\r\n        onSubmit(formfields, val) {  \r\n          //  debugger          \r\n            var vm = this;\r\n            vm.isLoading=true;\r\n            var datafields = formfields;\r\n            var extArray = vm.disallowFileTypes.split(',');\r\n            if (extArray.includes(vm.fileExt)) {\r\n                vm.checkFileValidExt = true;                \r\n            }\r\n            else {\r\n                vm.checkFileValidExt = false;\r\n                vm.ShowAlert(vm.$t(\"InvalidFileUploadMsg\", vm.fileName, vm.disallowFileTypes), \"warning\", true, vm.$t(\"Alert\"));\r\n            }\r\n            var fileSizeInMB = this.SizeToMb(vm.fileSize);\r\n            if (fileSizeInMB < parseInt(vm.allowedPerFileSizeInMb, 10)) {\r\n                vm.checkFileValidSize = true;\r\n            }\r\n            else {                \r\n                vm.checkFileValidSize = false;\r\n                vm.ShowAlert(vm.$t(\"ExceedAllowedSize\", vm.fileName, vm.allowedPerFileSizeInMb), \"warning\", true, vm.$t(\"Alert\"));\r\n            }            \r\n            if (vm.checkFileValidExt == true && vm.checkFileValidSize == true) {                \r\n                vm.ArticleModel.ArticleId = vm.ArticleId;\r\n                vm.ArticleModel.ArticleTitle = datafields.Title;\r\n                vm.ArticleModel.CategoryId = datafields.Category;                \r\n                vm.ArticleModel.StatusId = vm.StatusId==null?vm.FormSchema[0].Data[5].value:vm.StatusId;\r\n                vm.ArticleModel.Description = datafields.Description;\r\n                vm.ArticleModel.SortDescription = datafields.SortDescription;\r\n                vm.ArticleModel.AssignTo = datafields.AssignTo;\r\n                vm.ArticleModel.VisibleToClient = datafields.VisibleToClient==true?1:0;\r\n                vm.ArticleModel.fileData = vm.fileData==undefined?vm.ArticleModel.fileData:vm.fileData;\r\n                vm.ArticleModel.ModuleName = 'Ticketing';\r\n                vm.ArticleModel.Type = vm.$route.params.id>0?'UPDATE':'ADD'\r\n                vm.ArticleModel.SubModuleCode = 'KnowledgeBase';\r\n                var formData = JSON.stringify(vm.ArticleModel);            \r\n                DataServices.SaveUpdateArticle(formData).then((response) => { \r\n                if(response.data.status==\"Success\"){\r\n                    if((response.data.result>0 && response.data.result !=3) && vm.ArticleModel.Type=='ADD'){\r\n                        vm.ShowAlert(vm.$t('AddedSuccess', [vm.$t('Article')]), \"Success\", true, vm.$t('Alert'));\r\n                        vm.$router.push({ name: 'KnowledgebaseCAUser'});\r\n                    }\r\n                    else if(response.data.result ==3 && vm.ArticleModel.Type=='ADD'){\r\n                        vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"Article\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                    else if(response.data.result>0 && vm.ArticleModel.Type=='UPDATE'){\r\n                        vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"Article\")]), \"Success\", true, vm.$t(\"Alert\"));\r\n                        vm.$router.push({ name: 'KnowledgebaseCAUser'});\r\n                    }\r\n                    else if( response.data.result ==3 && vm.ArticleModel.Type=='UPDATE'){\r\n                        vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"Article\")]), \"Success\", true, vm.$t(\"Alert\"));\r\n                        vm.$router.push({ name: 'KnowledgebaseCAUser'});\r\n                    }\r\n                }\r\n                vm.isLoading=false;                \r\n                })\r\n            }\r\n            else{\r\n                vm.isLoading=false;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateArticle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateArticle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CreateArticle.vue?vue&type=template&id=4c2fa924&\"\nimport script from \"./CreateArticle.vue?vue&type=script&lang=js&\"\nexport * from \"./CreateArticle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}