{"version":3,"sources":["webpack:///./src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue","webpack:///src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue","webpack:///./src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue?86c1","webpack:///./src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue?ccd8","webpack:///./src/views/Ticketing/addWithCustomLayout.vue","webpack:///src/views/Ticketing/addWithCustomLayout.vue","webpack:///./src/views/Ticketing/addWithCustomLayout.vue?22f4","webpack:///./src/views/Ticketing/addWithCustomLayout.vue?d619"],"names":["render","_vm","this","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","on","Close","domProps","ref","buttons","FormSchema","scopedSlots","_u","key","fn","data","editor","onReady","model","value","fieldInfo","callback","$$v","$set","expression","error","directives","name","rawName","disabled","Array","isArray","_i","$event","$$a","$$el","target","$$c","checked","$$i","concat","slice","checkForAutoCreateEnable","staticStyle","staticRenderFns","props","modulename","type","String","required","submodulecode","callbackfunction","Function","CLASSIC_EDITOR","isSaveAndClose","AutoServiceDisabled","layoutType","Data","astype","label","placeholder","validationRules","config","options","showAddIcon","visibility","settings","isInSlot","max","class","text","onClick","SaveCategoryForm","methods","isChecked","vm","$parent","isManageCategory","ClearFieldValue","_data","btnType","$refs","AddManageCategoryModal","validate","then","result","jsonobj","CategoryName","Status","IsForServiceRequest","Description","CategoryType","params","JSON","stringify","DataServices","SaveCategoryData","response","MSG","ShowAlert","length","forEach","group","gi","field","fi","component","isSuccessMessage","_m","saveTicketStatus","TicketNumber","_e","isForServiceRequest","StaticObj","isShowMap","latLng","GetAddress","GetDropDownData","components","ManageMap","ManageCategory","isShowDrawButton","isShowSearchBox","CountryDDl","fileMulitpleData","ticketType","onChange","onChangeDropdown","GetStateDDL","saveForm","created","isBlank","$route","id","$router","push","getForm","ticket_id","decodeURIComponent","ticket_Type","GetCountryDDL","vueObj","Latitude","Longitude","indexValue","filteredCountry","filter","item","CompleteAddress","Country","LongName","FullAddress","filterCountry","setTimeout","filteredState","StateDDl","AdministrativeAreaLevel1","filterState","AdministrativeAreaLevel2","City","AdministrativeAreaLevel3","PinCode","dataLat1","dataLat2","dataLng1","dataLng2","LatLng","index","Lat","Lng","group_name","e","dropName","clientAddressId","clientid","BindAddressUsingClientAdrress","event","appendingUrl","GetDDLDataFSM","json","DATA","CountryId","toString","url","GetTicketClientAddress","USER_ADDRESS_1","COUNTRY_ID","CT","ST","STATE_ID","USER_CITY","USER_ZIPCODE","USER_ADDRESS_DESC","obj","location_nw","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","mediaIcon","document","getElementsByClassName","remove","divToRemove","querySelector","ArrowIcon","onChangeEventForFields","x","y","z","ths","fieldCode","GetDDLData","AddTicketForm","UpdateKeyValue","GetBase64String","catOptions","getPropertyValue","getSelectedValue","first_value","g","updateProperty","GetClientaddress","minDate","clientId","undefined","evt","f","reader","FileReader","fileObj","onload","theFile","binaryData","base64StringEncoded","window","btoa","fileName","n","lastIndexOf","extensionName","substring","fileExt","attachemnetMime","size","fileSize","attachement_mime","base64String","contentType","ModuleName","SubModuleCode","readAsBinaryString","ex","GetDynamicForm","responseData","frmSchma","ConvertCustomFieldIntoDynamicFormObj","showLabel","maxSize","accept","fileType","iconClass","onAddButtonClick","multiple","mode","format","AddTicket","CustomFieldArray","ConvertDynamicFormObjToCustomFieldObj","CustomFieldArrayStatic","field_name","field_value","CCUsers","i","moduleCode","subModuleCode","attachmentData","SaveDynamicForm","parse","Value","OTHER_DATA","TICKET_NUMBER"],"mappings":"kHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACA,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,SAAS,CAACG,MAAM,CAAC,aAAaL,EAAIM,aAAaJ,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,sCAAsC,CAACF,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,KAAK,CAACE,YAAY,eAAe,CAACJ,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,GAAG,sBAAsBP,EAAG,SAAS,CAACE,YAAY,QAAQC,MAAM,CAAC,KAAO,gBAAgBK,GAAG,CAAC,MAAQV,EAAIW,QAAQ,CAACT,EAAG,KAAK,CAACE,YAAY,cAAcC,MAAM,CAAC,cAAc,cAAcH,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,OAAO,CAACE,YAAY,cAAc,CAACF,EAAG,IAAI,CAACE,YAAY,eAAeC,MAAM,CAAC,cAAc,WAAW,KAAO,iBAAiB,KAAO,SAAS,gBAAgB,QAAQ,gBAAgB,oBAAoB,CAACL,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,GAAG,iBAAiBP,EAAG,MAAM,CAACE,YAAY,2BAA2BC,MAAM,CAAC,GAAK,kBAAkB,CAACH,EAAG,MAAM,CAACE,YAAY,sBAAsBC,MAAM,CAAC,GAAK,4BAA4B,CAACH,EAAG,MAAM,CAACE,YAAY,MAAMQ,SAAS,CAAC,UAAYZ,EAAIQ,GAAGR,EAAIS,GAAG,iCAAiCP,EAAG,OAAO,CAACW,IAAI,0BAA0B,CAACX,EAAG,eAAe,CAACG,MAAM,CAAC,KAAO,KAAK,QAAUL,EAAIc,QAAQ,OAASd,EAAIe,YAAYC,YAAYhB,EAAIiB,GAAG,CAAC,CAACC,IAAI,qBAAqBC,GAAG,UAAS,KAAEC,IAAQ,MAAO,CAAClB,EAAG,WAAW,CAACG,MAAM,CAAC,OAASL,EAAIqB,QAAQX,GAAG,CAAC,MAAQV,EAAIsB,SAASC,MAAM,CAACC,MAAOJ,EAAKK,UAAUD,MAAOE,SAAS,SAAUC,GAAM3B,EAAI4B,KAAKR,EAAKK,UAAW,QAASE,IAAME,WAAW,0BAA0B3B,EAAG,OAAO,CAACE,YAAY,2BAA2BC,MAAM,CAAC,KAAO,gBAAgB,CAACL,EAAIO,GAAGP,EAAIQ,GAAGY,EAAKU,aAAa,CAACZ,IAAI,6BAA6BC,GAAG,UAAS,KAAEC,IAAQ,MAAO,CAAClB,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,QAAQ,CAACE,YAAY,UAAU,CAACF,EAAG,QAAQ,CAAC6B,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUT,MAAOJ,EAAKK,UAAUD,MAAOK,WAAW,wBAAwB,CAACG,KAAK,WAAWC,QAAQ,aAAaT,MAAOxB,EAAIkC,SAAUL,WAAW,aAAazB,YAAY,gDAAgDC,MAAM,CAAC,KAAO,WAAW,KAAO,WAAWO,SAAS,CAAC,QAAUuB,MAAMC,QAAQhB,EAAKK,UAAUD,OAAOxB,EAAIqC,GAAGjB,EAAKK,UAAUD,MAAM,OAAO,EAAGJ,EAAKK,UAAUD,OAAQd,GAAG,CAAC,OAAS,CAAC,SAAS4B,GAAQ,IAAIC,EAAInB,EAAKK,UAAUD,MAAMgB,EAAKF,EAAOG,OAAOC,IAAIF,EAAKG,QAAuB,GAAGR,MAAMC,QAAQG,GAAK,CAAC,IAAIZ,EAAI,KAAKiB,EAAI5C,EAAIqC,GAAGE,EAAIZ,GAAQa,EAAKG,QAASC,EAAI,GAAI5C,EAAI4B,KAAKR,EAAKK,UAAW,QAASc,EAAIM,OAAO,CAAClB,KAAaiB,GAAK,GAAI5C,EAAI4B,KAAKR,EAAKK,UAAW,QAASc,EAAIO,MAAM,EAAEF,GAAKC,OAAON,EAAIO,MAAMF,EAAI,UAAY5C,EAAI4B,KAAKR,EAAKK,UAAW,QAASiB,IAAO,SAASJ,GAAQ,OAAOtC,EAAI+C,yBAAyB3B,EAAKK,UAAUD,YAAYtB,EAAG,OAAO,CAACE,YAAY,eAAe4C,YAAY,CAAC,OAAS,YAAY,CAAC9C,EAAG,OAAO,CAACE,YAAY,cAAc,CAACJ,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,GAAG,WAAWP,EAAG,OAAO,CAACE,YAAY,aAAa,CAACJ,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,GAAG,wBAAwB,IAAI,UAAU,MAEl2FwC,EAAkB,G,YCwDP,GACfC,MAAA,CACAC,WAAA,CACAC,KAAAC,OACAC,UAAA,GAEAC,cAAA,CACAH,KAAAC,OACAC,UAAA,GAEAE,iBAAA,CACAJ,KAAAK,WAGArC,OACA,OACAC,OAAA,KAAAqC,eACApD,WAAA,EACAqD,eAAA,GACAC,qBAAA,EACA7C,WAAA,CACA,CACA8C,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,YACAC,MAAA,KAAAvD,GAAA,YACAuB,KAAA,WACAR,MAAA,GACAyC,YAAA,GACAC,gBAAA,eAEA,CACAH,OAAA,cACAC,MAAA,KAAAvD,GAAA,UACAuB,KAAA,SACAR,MAAA,GACAyC,YAAA,GACAE,OAAA,CACAC,QAAA,EAAA5C,MAAA,OAAAQ,KAAA,WAAAR,MAAA,OAAAQ,KAAA,aACAqC,aAAA,GAEAH,gBAAA,iBAKA,CACAL,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,YACAC,MAAA,KAAAvD,GAAA,uBACAuB,KAAA,sBACAR,MAAA,GACAyC,YAAA,GACAE,OAAA,CACAC,QAAA,IAEAE,YAAA,EACAJ,gBAAA,GACAK,SAAA,CACAC,UAAA,MAKA,CACAX,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,YACAC,MAAA,KAAAvD,GAAA,eACAuB,KAAA,cACAR,MAAA,GACAyC,YAAA,GACAE,OAAA,CACAC,QAAA,IAGAG,SAAA,CACAC,UAAA,GAEAF,YAAA,EACAJ,gBAAA,aAAAO,IAAA,SAKA3D,QAAA,CACA,CACAsC,KAAA,SACAsB,MAAA,uBACAC,KAAA,gDACAnD,MAAA,eACAoD,QAAA,KAAAC,kBAEA,CACAzB,KAAA,SACAsB,MAAA,uBACAC,KAAA,sCACAC,QAAA,KAAAC,kBAGA,CACAzB,KAAA,SACAsB,MAAA,iBACAC,KAAA,yCACAC,QAAA,KAAAjE,UAKA,kBAIAmE,QAAA,CACA/B,yBAAA,SAAAgC,GACA,IAAAC,EAAA,KAEAA,EAAApB,oBADA,GAAAmB,GAMApE,MAAA,WACA,IAAAqE,EAAA,KACAA,EAAAC,QAAAC,kBAAA,GAEAC,gBAAA,WACA,IAAAH,EAAA,KACAA,EAAAI,MAAArE,WAAA,GAAA+C,KAAA,GAAAtC,MAAA,GACAwD,EAAAI,MAAArE,WAAA,GAAA+C,KAAA,GAAAtC,MAAA,GACAwD,EAAAI,MAAArE,WAAA,GAAA+C,KAAA,GAAAtC,MAAA,GACAwD,EAAAI,MAAArE,WAAA,GAAA+C,KAAA,GAAAtC,MAAA,IAEAqD,iBAAA,SAAAQ,GACA,IAAAL,EAAA,KACA,gBAAAK,EAAA7D,QACAwD,EAAArB,eAAA,gBAGAqB,EAAAM,MAAAC,uBAAAC,WAAAC,KAAAC,IACA,GAAAA,EAAA,CACA,IAAAC,EAAA,CACAC,aAAAZ,EAAAI,MAAArE,WAAA,GAAA+C,KAAA,GAAAtC,MACAqE,OAAAb,EAAAI,MAAArE,WAAA,GAAA+C,KAAA,GAAAtC,MACAsE,oBAAAd,EAAAI,MAAArE,WAAA,GAAA+C,KAAA,GAAAtC,MACAuE,YAAAf,EAAAI,MAAArE,WAAA,GAAA+C,KAAA,GAAAtC,MACAwE,aAAA,mBAEAC,EAAAC,KAAAC,UAAAR,GACAS,OAAAC,iBAAAJ,GAAAR,KAAAa,IAEA,WAAAA,EAAAlF,KAAAsE,OAAAa,KACAvB,EAAAwB,UAAAxB,EAAAvE,GAAA,gBAAAuE,EAAAvE,GAAA,2BAAAuE,EAAAvE,GAAA,UACA,gBAAAuE,EAAArB,gBACAqB,EAAArE,QACAqE,EAAAC,QAAAlE,WAAA0F,OAAA,GACAzB,EAAAC,QAAAlE,WAAA2F,QAAA,CAAAC,EAAAC,KACAD,EAAA7C,KAAA4C,QAAA,CAAAG,EAAAC,KACA,sBAAAD,EAAA7E,MACAgD,EAAAxB,iBAAA,kBAAAqD,EAAA,YAQA7B,EAAAG,kBACAH,EAAAC,QAAAlE,WAAA0F,OAAA,GACAzB,EAAAC,QAAAlE,WAAA2F,QAAA,CAAAC,EAAAC,KACAD,EAAA7C,KAAA4C,QAAA,CAAAG,EAAAC,KACA,sBAAAD,EAAA7E,MACAgD,EAAAxB,iBAAA,kBAAAqD,EAAA,YAQA7B,EAAAwB,UAAAxB,EAAAvE,GAAA,cAAAuE,EAAAvE,GAAA,2BAAAuE,EAAAvE,GAAA,kBClP8X,I,YCO1XsG,EAAY,eACd,EACAhH,EACAkD,GACA,EACA,KACA,KACA,MAIa,OAAA8D,E,kDClBf,IAAIhH,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACE,YAAY,gCAAgC,CAACF,EAAG,OAAO,CAACE,YAAY,qBAAqB,CAACJ,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,GAAG,iBAAiBP,EAAG,OAAO,CAACE,YAAY,eAAe,CAACF,EAAG,aAAa,CAACE,YAAY,sCAAsCC,MAAM,CAAC,GAAK,qBAAqB,CAACH,EAAG,KAAK,CAACE,YAAY,4BAA4BF,EAAG,MAAMF,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,GAAG,eAAe,QAAQ,SAAUT,EAAIgH,iBAAkB9G,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,MAAM,CAACE,YAAY,uEAAuE,CAACJ,EAAIiH,GAAG,GAAG/G,EAAG,KAAK,CAACE,YAAY,aAAa,CAACJ,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,GAAG,gBAAgBP,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,IAAI,CAACF,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIkH,qBAAqBhH,EAAG,MAAM,CAAC8C,YAAY,CAAC,YAAY,OAAO,SAAW,WAAW,WAAa,UAAU,QAAU,YAAY,OAAS,OAAO,OAAS,qBAAqB,QAAU,eAAe,MAAQ,YAAY,CAAChD,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAImH,kBAAkB,OAAOnH,EAAIoH,KAAKlH,EAAG,OAAO,CAACW,IAAI,aAAa,CAAGb,EAAIgH,iBAA8+BhH,EAAIoH,KAAh+BlH,EAAG,eAAe,CAACW,IAAI,gBAAgBR,MAAM,CAAC,QAAUL,EAAIc,QAAQ,OAASd,EAAIe,YAAYC,YAAYhB,EAAIiB,GAAG,CAAC,CAACC,IAAI,qBAAqBC,GAAG,UAAS,KAAEC,IAAQ,MAAO,CAAClB,EAAG,WAAW,CAACwE,MAAM,CAAE,aAA4B,IAAdtD,EAAKU,OAAczB,MAAM,CAAC,OAASL,EAAIqB,QAAQX,GAAG,CAAC,MAAQV,EAAIsB,SAASC,MAAM,CAACC,MAAOJ,EAAKK,UAAUD,MAAOE,SAAS,SAAUC,GAAM3B,EAAI4B,KAAKR,EAAKK,UAAW,QAASE,IAAME,WAAW,0BAA0B3B,EAAG,OAAO,CAACE,YAAY,oBAAoB,CAACJ,EAAIO,GAAGP,EAAIQ,GAAGY,EAAKU,aAAc9B,EAAIqH,oBAAqB,CAACnG,IAAI,sBAAsBC,GAAG,UAAS,KAAEC,IAAQ,MAAO,CAAClB,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,eAAe,CAACW,IAAI,iBAAiBR,MAAM,CAAC,OAASL,EAAIsH,cAAc,GAAGpH,EAAG,MAAM,CAACE,YAAY,YAAY,CAAEJ,EAAIuH,UAAWrH,EAAG,YAAY,CAACE,YAAY,MAAMC,MAAM,CAAC,QAAU,SAAS,aAAe,YAAY,OAASL,EAAIwH,OAAO,OAASxH,EAAImE,OAAO,UAAY,SAASzD,GAAG,CAAC,WAAaV,EAAIyH,cAAczH,EAAIoH,MAAM,QAAQ,MAAM,MAAK,MAAkB,GAAIpH,EAAIkF,iBAAkBhF,EAAG,iBAAiB,CAACG,MAAM,CAAC,WAAa,YAAY,cAAgB,YAAY,iBAAmBL,EAAI0H,mBAAmB1H,EAAIoH,MAAM,IAEx0EnE,EAAkB,CAAC,WAAY,IAAIjD,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,OAAO,CAACE,YAAY,0BAA0B,CAACF,EAAG,IAAI,CAACE,YAAY,oB,0DCuD9H,GACfuH,WAAA,CACAC,iBACAC,uBAEAzG,KAAA,WACA,OACA+C,OAAA,CACA2D,kBAAA,EACAC,iBAAA,GAEAhH,WAAA,GACAiH,WAAA,GACAhB,kBAAA,EACAiB,iBAAA,GACAV,WAAA,EACAC,OAAA,GACAU,WAAA,GACAb,qBAAA,EACAC,UAAA,CACA,CACAzD,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,cACAC,MAAA,KAAAvD,GAAA,iBACAuB,KAAA,SACAR,MAAA,GACAU,UAAA,EACAiC,OAAA,CACAC,QAAA,GACA+D,SAAA,KAAAC,kBAGAnE,YAAA,KAAAxD,GAAA,UACAyD,gBAAA,MAKA,CACAL,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,YACAC,MAAA,KAAAvD,GAAA,WACAuB,KAAA,UACAR,MAAA,GACAU,UAAA,EACA+B,YAAA,KAAAxD,GAAA,sBACAyD,gBAAA,eAEA,CACAH,OAAA,cACAC,MAAA,KAAAvD,GAAA,WACAuB,KAAA,aACAR,MAAA,GACAU,UAAA,EACAiC,OAAA,CACAC,QAAA,GACA+D,SAAA,KAAAE,aAEApE,YAAA,KAAAxD,GAAA,UACAyD,gBAAA,IAEA,CACAH,OAAA,cACAC,MAAA,KAAAvD,GAAA,SACAuB,KAAA,QACAR,MAAA,GACAU,UAAA,EACAiC,OAAA,CACAC,QAAA,IAEAH,YAAA,KAAAxD,GAAA,UACAyD,gBAAA,IAEA,CACAH,OAAA,YACAC,MAAA,KAAAvD,GAAA,UACAuB,KAAA,SACAR,MAAA,GACAU,UAAA,EACA+B,YAAA,KAAAxD,GAAA,qBACAyD,gBAAA,IAEA,CACAH,OAAA,YACAC,MAAA,KAAAvD,GAAA,QACAuB,KAAA,OACAR,MAAA,GACAU,UAAA,EACA+B,YAAA,KAAAxD,GAAA,uBACAyD,gBAAA,IAEA,CACAH,OAAA,YACAC,MAAA,KAAAvD,GAAA,UACAuB,KAAA,SACAR,MAAA,GACAU,UAAA,EACA+B,YAAA,KAAAxD,GAAA,qBACAyD,gBAAA,IAEA,CACAH,OAAA,YACAC,MAAA,KAAAvD,GAAA,WACAuB,KAAA,MACAR,MAAA,GACAU,UAAA,EACA+B,YAAA,KAAAxD,GAAA,sBACAyD,gBAAA,IAEA,CACAH,OAAA,YACAC,MAAA,KAAAvD,GAAA,oBACAuB,KAAA,QACAR,MAAA,GACAU,UAAA,EACA+B,YAAA,KAAAxD,GAAA,0BACAyD,gBAAA,OAKApD,QAAA,CACA,CACAsC,KAAA,SACAsB,MAAA,uBACAC,KAAA,gDACAnD,MAAA,QACAoD,QAAA,KAAA0D,UAEA,CACAlF,KAAA,SACAsB,MAAA,uBACAC,KAAA,yCACAC,QAAA,KAAA0D,UAEA,CACAlF,KAAA,SACAsB,MAAA,iBACAC,KAAA,0CACAC,QAAA,KAAAjE,QAGAuE,kBAAA,EACA7D,OAAA,KAAAqC,iBAGA6E,QAAA,WACA,IAAAvD,EAAA,KACA,GAAAA,EAAAwD,QAAAxD,EAAAyD,OAAAxC,OAAAyC,KAAA,KAAA1D,EAAAyD,OAAAxC,OAAAyC,GAMA,KAAA1D,EAAAyD,OAAAxC,OAAAyC,IAKA1D,EAAA2D,QAAAC,KAAA,CAAA5G,KAAA,MAAAiE,OAAA,CAAAyC,GAAA,KAJA1D,EAAA6D,QAAA,OAPA,CACA,IAAAC,EAAAC,mBAAA/D,EAAAyD,OAAAxC,OAAAyC,IACA1D,EAAAyD,OAAAxC,OAAA+C,YACAhE,EAAA6D,QAAAC,GAYA9D,EAAAiE,iBAEAnE,QAAA,CACA2C,WAAA,SAAArG,GACA,IAAA8H,EAAA,KACAA,EAAAC,SAAA,GACAD,EAAAE,UAAA,GAEA,IAAAC,EAAAjI,EAAAqF,OAAA,EACA,IAAA6C,EAAAJ,EAAAlB,WAAAuB,OAAAC,GACAA,EAAAxH,OAAAZ,EAAAiI,GAAAI,gBAAAC,QAAAC,UAEAT,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAAJ,EAAAiI,GAAAI,gBAAAG,YACA,IAAAC,EAAA,IAAAP,EAAA,GAAAA,EAAA,GAAA9H,MACA0H,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAAqI,EACAX,EAAAb,YAAA,KAAAwB,GACAC,YAAA,WACA,IAAAC,EAAAb,EAAAc,SAAAT,OAAAC,GACAA,EAAAxH,OAAAZ,EAAAiI,GAAAI,gBAAAQ,yBAAAN,UAEA,IAAAO,EAAA,IAAAH,EAAA,GAAAA,EAAA,GAAAvI,MACA0H,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAA0I,IACA,KACAhB,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAAJ,EAAAiI,GAAAI,gBAAAU,yBAAAR,SACAT,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAAJ,EAAAiI,GAAAI,gBAAAW,KAAAT,SACAT,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAAJ,EAAAiI,GAAAI,gBAAAY,yBAAAV,SACAT,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAAJ,EAAAiI,GAAAI,gBAAAa,QACA,IAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACAtJ,EAAAiI,GAAAsB,OAAAjE,QAAA,CAAA8C,EAAAoB,KACA,GAAAA,GACAL,EAAAf,EAAAqB,IACAL,EAAAhB,EAAAsB,MAGAL,EAAAjB,EAAAqB,IACAH,EAAAlB,EAAAsB,OAGA5B,EAAAC,SAAAsB,EAAA,IAAAD,EACAtB,EAAAE,UAAAmB,EAAA,IAAAG,EAGAxB,EAAAnI,WAAA2F,QAAA,CAAAC,EAAAC,KACAD,EAAA7C,KAAA4C,QAAA,CAAAG,EAAAC,KACA,sBAAAH,EAAAoE,aACA,eAAAlE,EAAA7E,OACA6E,EAAArF,MAAA0H,EAAAC,UAEA,eAAAtC,EAAA7E,OACA6E,EAAArF,MAAA0H,EAAAE,iBAMAhB,iBAAA,eAAA4C,GACA,IAAAhG,EAAA,KACAiG,EAAAD,EAAAvI,OAAAT,KACAkJ,EAAA,GACA,UAAAD,IACAC,EAAAF,EAAAvI,OAAAjB,OAEAwD,EAAAjE,WAAA2F,QAAA,CAAAC,EAAAC,KACAD,EAAA7C,KAAA4C,QAAA,CAAAG,EAAAC,KACA,4BAAAD,EAAA7E,KAAA,CACA,IAAAmJ,EAAAtE,EAAArF,YACAwD,EAAAwD,QAAA2C,IAAA,IAAAD,GACAlG,EAAAoG,8BAAAD,EAAAD,SAMAjC,cAAA,eAAAoC,GAEA,IAAArG,EAAA,KACAA,EAAAsC,UAAA,GAAAxD,KAAA,GAAAK,OAAAC,QAAA,GACAY,EAAAgD,WAAA,GACA,IAAAsD,EAAA,gEACAlF,OAAAmF,cAAAD,GAAA7F,MAAA,SAAAa,GACA,GAAAA,EAAAlF,KAAA,CACA,IAAAoK,EAAAlF,EAAAlF,KACA4D,EAAAgD,WAAA1B,EAAAlF,KAAAsE,OAAA+F,KACA,MAAAD,GACAlF,EAAAlF,KAAAsE,OAAA+F,KAAA/E,QAAA,CAAA8C,EAAAoB,KACA5F,EAAAsC,UAAA,GAAAxD,KAAA,GAAAK,OAAAC,QAAAwE,KAAA,CACApH,MAAAgI,EAAAhI,MACAQ,KAAAwH,EAAAxH,cAOAqG,YAAA,eAAAgD,EAAA3C,GACA,IAAA1D,EAAA,KACA0G,EAAA,EAEAA,EADA,MAAAL,EACA3C,EAEA2C,EAAA5I,OAAAjB,MAAAmK,WAEA3G,EAAAsC,UAAA,GAAAxD,KAAA,GAAAK,OAAAC,QAAA,GACAY,EAAAgF,SAAA,GACA,IAAAsB,EAAA,sDAAAI,QACAtF,OAAAmF,cAAAD,GAAA7F,MAAA,SAAAa,GACA,GAAAA,EAAAlF,KAAA,CACA,IAAAoK,EAAAlF,EAAAlF,KACA4D,EAAAgF,SAAA1D,EAAAlF,KAAAsE,OAAA+F,KACA,MAAAD,GACAlF,EAAAlF,KAAAsE,OAAA+F,KAAA/E,QAAA,CAAA8C,EAAAoB,KACA5F,EAAAsC,UAAA,GAAAxD,KAAA,GAAAK,OAAAC,QAAAwE,KAAA,CACApH,MAAAgI,EAAAhI,MACAQ,KAAAwH,EAAAxH,cAOAoJ,8BAAA,eAAAD,EAAAD,GAEA,IAAAhC,EAAA,KACAA,EAAAC,SAAA,GACAD,EAAAE,UAAA,GACAF,EAAA1B,OAAA,GACA,IAAAoE,EAAA,MAAAT,oCAAAD,UACA9E,OAAAyF,uBAAAD,GAAAnG,KAAAa,IAEA,SAAAA,EAAAlF,KAAAsE,QAAAY,EAAAlF,KAAAsE,OAAAtE,KAAAqF,OAAA,GACAyC,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAA8E,EAAAlF,KAAAsE,OAAAtE,KAAA,GAAA0K,eACA5C,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAA8E,EAAAlF,KAAAsE,OAAAtE,KAAA,GAAA2K,WACA7C,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAA8E,EAAAlF,KAAAsE,OAAAtE,KAAA,GAAA4K,GAAA,GAAAC,GAAA,GAAAC,SACAhD,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAA8E,EAAAlF,KAAAsE,OAAAtE,KAAA,GAAA+K,UACAjD,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAA8E,EAAAlF,KAAAsE,OAAAtE,KAAA,GAAAgL,aACAlD,EAAA5B,UAAA,GAAAxD,KAAA,GAAAtC,MAAA8E,EAAAlF,KAAAsE,OAAAtE,KAAA,GAAAiL,kBACAnD,EAAAC,SAAA7C,EAAAlF,KAAAsE,OAAAtE,KAAA,GAAA+H,SAAA,IAAA7C,EAAAlF,KAAAsE,OAAAtE,KAAA,GAAAgI,UACAF,EAAAE,UAAA9C,EAAAlF,KAAAsE,OAAAtE,KAAA,GAAA+H,SAAA,IAAA7C,EAAAlF,KAAAsE,OAAAtE,KAAA,GAAAgI,UACAF,EAAAnI,WAAA2F,QAAA,CAAAC,EAAAC,KACAD,EAAA7C,KAAA4C,QAAA,CAAAG,EAAAC,KACA,sBAAAH,EAAAoE,aACA,eAAAlE,EAAA7E,OACA6E,EAAArF,MAAA0H,EAAAC,UAEA,eAAAtC,EAAA7E,OACA6E,EAAArF,MAAA0H,EAAAE,gBAKA,IAAAkD,EAAA,CAAAC,YAAArD,EAAAC,UACAD,EAAA1B,OAAA8E,MAIAhL,QAAAD,GACAA,EAAAmL,GAAAC,qBAAAC,cAAAC,aACAtL,EAAAmL,GAAAI,KAAAC,QAAAC,QACAzL,EAAAmL,GAAAC,sBAEA,IAAAM,EAAAC,SAAAC,uBAAA,kBACAF,EAAAG,SACA,IAAAC,EAAAH,SAAAI,cAAA,0BACAD,EAAAD,SACA,IAAAG,EAAAL,SAAAC,uBAAA,0BACAI,EAAAH,UAEAI,uBAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,KACA,qBAAAH,EAAA,CACAC,EAAArJ,OAAAC,QAAA,GACA,IAAAwH,EAAA,iCAAA4B,EAAArJ,OAAAwJ,2BAAAF,IACArH,OAAAwH,WAAAhC,GAAAnG,MAAA,SAAAa,GACA,GAAAA,EAAAlF,KAAA,CACA,IAAAoK,EAAAlF,EAAAlF,KACA,MAAAoK,IACAgC,EAAArJ,OAAAC,QAAAkC,EAAAlF,KAAAqK,KACAiC,EAAApI,MAAAuI,cAAAC,0BAIA,CACA,iBAAAN,EAAAxL,KACA0L,EAAAK,gBAAAP,EAAAhM,YACA,yBAAAgM,EAAAxL,KAAA,CACA,IAAAgM,EAAAN,EAAApI,MAAAuI,cAAAI,iBAAA,uCACAC,EAAAF,EAAAzE,OAAAgE,KAAA/L,OAAAgM,EAAAhM,OACAkM,EAAArG,oBAAA,KAAA6G,EAAA,GAAAC,YACAT,EAAArG,qBACAqG,EAAA3M,WAAA2F,SAAA,SAAA0H,EAAAxH,GACA,WAAAwH,EAAArD,aACAqD,EAAA9J,YAAA,MAGAoJ,EAAApI,MAAAuI,cAAAQ,eAAA,0BACAX,EAAApI,MAAAuI,cAAAQ,eAAA,yBACAX,EAAApI,MAAAuI,cAAAQ,eAAA,kCAEAX,EAAA3M,WAAA2F,SAAA,SAAA0H,EAAAxH,GACA,WAAAwH,EAAArD,aACAqD,EAAA9J,YAAA,MAGAoJ,EAAApI,MAAAuI,cAAAQ,eAAA,0BACAX,EAAApI,MAAAuI,cAAAQ,eAAA,wBACAX,EAAApI,MAAAuI,cAAAQ,eAAA,iCAGA,gBAAAb,EAAAxL,KAAA,CACA,IAAAoB,EAAA,KAAAoK,EAAAhM,MAAA,kBACAoK,EAAA,iCAAAxI,mBACAgD,OAAAwH,WAAAhC,GAAAnG,MAAA,SAAAa,GACA,GAAAA,EAAAlF,KAAA,CACA,IAAAoK,EAAAlF,EAAAlF,KACA,MAAAoK,IAEAkC,EAAApI,MAAAuI,cAAAQ,eAAA,yCAAA/H,EAAAlF,KAAAqK,MACAiC,EAAApI,MAAAuI,cAAAQ,eAAA,gCAAAX,EAAAjN,GAAA,KAAA+M,EAAAhM,MAAA,kBACAkM,EAAApI,MAAAuI,cAAAC,0BAIA,yBAAAN,EAAAxL,MACA0L,EAAAY,iBAAA,KAAAb,EAAAjM,OACAkM,EAAAzE,iBAEA,cAAAuE,EAAAxL,MACA0L,EAAA3M,WAAA2F,QAAA,CAAAC,EAAAC,KACAD,EAAA7C,KAAA4C,QAAA,CAAAG,EAAAC,KACA,YAAAD,EAAA7E,OACA6E,EAAA1C,OAAAoK,QAAAhB,SAOAe,iBAAA,eAAAjD,EAAA3C,GACA,IAAA1D,EAAA,KACAwJ,EAAA,EACA,MAAAnD,EACAmD,EAAA9F,GAEA8F,EAAAnD,EAAA5I,OAAAjB,MAAAmK,WACA3G,EAAAwJ,YAEAxJ,EAAAsC,UAAA,GAAAxD,KAAA,GAAAK,OAAAC,QAAA,GACA,IAAAkH,EAAA,uEAAAkD,QACApI,OAAAmF,cAAAD,GAAA7F,MAAA,SAAAa,GACA,GAAAA,EAAAlF,KAAA,CACA,IAAAoK,EAAAlF,EAAAlF,KACA,MAAAoK,SACAiD,GAAAnI,EAAAlF,KAAAsE,OAAA+F,KAEAnF,EAAAlF,KAAAsE,OAAA+F,KAAA/E,QAAA,CAAA8C,EAAAoB,KACA5F,EAAAsC,UAAA,GAAAxD,KAAA,GAAAK,OAAAC,QAAAwE,KAAA,CACApH,MAAAgI,EAAAhI,MACAQ,KAAAwH,EAAAxH,OAEA,KAAAwH,EAAA2E,cACAnJ,EAAAsC,UAAA,GAAAxD,KAAA,GAAAtC,MAAAgI,EAAAhI,MACAwD,EAAAoG,8BAAAoD,EAAAhF,EAAAhI,WAKAwD,EAAAsC,UAAA,GAAAxD,KAAA,GAAAtC,MAAA,GACAwD,EAAAsC,UAAA,GAAAxD,KAAA,GAAAtC,MAAA,GACAwD,EAAAsC,UAAA,GAAAxD,KAAA,GAAAtC,MAAA,GACAwD,EAAAsC,UAAA,GAAAxD,KAAA,GAAAtC,MAAA,GACAwD,EAAAsC,UAAA,GAAAxD,KAAA,GAAAtC,MAAA,GACAwD,EAAAsC,UAAA,GAAAxD,KAAA,GAAAtC,MAAA,GACAwD,EAAAsC,UAAA,GAAAxD,KAAA,GAAAtC,MAAA,UAQAuM,gBAAA,SAAAW,GACA,IACA,IAAA1J,EAAA,KACA2J,EAAAD,EAAA,GAEAE,EAAA,IAAAC,WACA,IAAAC,EAAA,GAEAF,EAAAG,OAAA,SAAAC,GACA,gBAAAhE,GACA,IAAAiE,EAAAjE,EAAAvI,OAAAiD,OAEAwJ,EAAAC,OAAAC,KAAAH,GAEAI,EAAAV,EAAA3M,KACAgD,EAAAqK,WACA,IAAAC,EAAAD,EAAAE,YAAA,KACAC,EAAAH,EAAAI,UAAAH,EAAA,EAAAD,EAAA5I,QACAzB,EAAA0K,SAAA,IAAAF,EACA,IAAAG,EAAA,mBAAAhB,EAAAvL,KAAA,aAAAuL,EAAAiB,KAAA,kBAAAJ,EAAA,KACAK,EAAAlB,EAAAiB,KACA5K,EAAA6K,WAEAf,EAAAgB,iBAAAH,EACAb,EAAAO,WACAP,EAAAiB,aAAAb,EACAJ,EAAAe,SAAAlB,EAAAiB,KACAd,EAAAkB,YAAArB,EAAAvL,KACA0L,EAAAmB,WAAA,YACAnB,EAAAoB,cAAA,YACAlL,EAAAiD,iBAAAW,KAAAkG,IAtBA,GA0BAF,EAAAuB,mBAAAxB,GAGA,MAAAyB,MAGAvH,QAAA,SAAAH,GACA,IAAAgF,EAAA,KACA9B,EAAA,YAAAlD,iDACAtC,OAAAiK,eAAAzE,GAAAnG,MAAA,SAAAa,GACA,SAAAA,GAAA,MAAAA,EAAAlF,KAAA,CACA,IAAAkP,EAAAhK,EAAAlF,UACAmP,EAAA,GACAA,EAAA7C,EAAApI,MAAAuI,cAAA2C,qCAAAF,GACAC,EAAA7J,QAAA,CAAAC,EAAAC,KACAD,EAAA7C,KAAA4C,QAAA,CAAAG,EAAAC,KACA,cAAAD,EAAA7E,KACA6E,EAAArF,MAAA,OAEA,iBAAAqF,EAAA7E,KACA6E,EAAArF,MAAA,SACA,4BAAAqF,EAAA7E,KAAA,CACA,MAAA0D,EAAAmB,EAAA1C,OAAAC,QACAsB,EAAAe,OAAA,IACAI,EAAArF,MAAA,CAAAA,MAAAkE,EAAA,GAAAlE,MAAAwC,MAAA0B,EAAA,GAAA1D,WAGA,cAAA6E,EAAA7E,OACA6E,EAAA4J,WAAA,EACA5J,EAAA1C,OACA,CACAuM,QAAA,EACAC,OAAA,CACA,CACAC,SAAA,MACAC,UAAA,kBAEA,CACAD,SAAA,OACAC,UAAA,kBAEA,CACAD,SAAA,MACAC,UAAA,kBAEA,CACAD,SAAA,MACAC,UAAA,mBAEA,CACAD,SAAA,OACAC,UAAA,mBAEA,CACAD,SAAA,MACAC,UAAA,mBAEA,CACAD,SAAA,MACAC,UAAA,mBAEA,CACAD,SAAA,MACAC,UAAA,mBAEA,CACAD,SAAA,MACAC,UAAA,mBAEA,CACAD,SAAA,MACAC,UAAA,oBAKAxM,aAAA,EACAyM,iBAAA,GACAC,UAAA,IAGA,kBAAApK,EAAAoE,aACApE,EAAArC,YAAA,EACA,cAAAuC,EAAA7E,OACA6E,EAAAvC,YAAA,EACAuC,EAAA1C,OAAA,CAAA6M,KAAA,WAAAC,OAAA,aAEA,YAAApK,EAAA7E,OACA6E,EAAAvC,YAAA,EACAuC,EAAA1C,OAAA,CAAA6M,KAAA,WAAAC,OAAA,WAAA1C,QAAA,MAGA1H,EAAA1C,OAAAgE,SAAAuF,EAAAJ,2BAGAiD,EAAA3H,KACA,CACA/E,WAAA,SACAkH,WAAA,aACAzG,YAAA,EACAR,KAAA,EACAC,OAAA,YACA/B,KAAA,aACAR,MAAA,GACA8C,YAAA,MAGAiM,EAAA3H,KAAA,CACA/E,WAAA,SACAkH,WAAA,UACAzG,YAAA,EACAR,KAAA,EACAC,OAAA,YACA/B,KAAA,eACAR,MAAA,GACA8C,YAAA,EACAmM,WAAA,MAGA/C,EAAA3M,WAAAwP,OAIAjI,SAAA,SAAAjD,GACA,IAAAqI,EAAA,KACAA,EAAApI,MAAA4L,UAAA1L,WAAAC,KAAAC,IACA,GAAAA,EAAA,CACA,SAAAL,EAAA7D,QACAkM,EAAA3M,WAAA2F,QAAA,CAAAC,EAAAC,KACAD,EAAA7C,KAAA4C,QAAA,CAAAG,EAAAC,KACA,cAAAH,EAAAoE,YACA,cAAAlE,EAAA7E,OACA6E,EAAArF,MAAA,aAKAkM,EAAAxF,WAAA,SAEAwF,EAAApN,WAAA,EACA,IAAA6Q,EAAAzD,EAAApI,MAAAuI,cAAAuD,sCAAA1D,EAAA3M,YACAsQ,EAAA3D,EAAApI,MAAAuI,cAAAuD,sCAAA1D,EAAApG,WACA6J,EAAAzK,QAAA6G,IAWA,GAVA,yBAAAA,EAAA+D,aACA5D,EAAAlF,QAAA+E,EAAAgE,eACAhE,EAAAgE,YAAAhE,EAAAgE,YAAA/P,QAGA,gBAAA+L,EAAA+D,aACA5D,EAAAlF,QAAA+E,EAAAgE,eACAhE,EAAAgE,YAAAhE,EAAAgE,YAAA/P,QAGA,YAAA+L,EAAA+D,aACA5D,EAAAlF,QAAA+E,EAAAgE,aAAA,CACA,IAAAC,EAAA,GACAC,EAAA,EACA,IAAAA,EAAA,EAAAA,EAAAlE,EAAAgE,YAAA9K,OAAAgL,IAEAD,EADA,GAAAC,EACAlE,EAAAgE,YAAAE,GAAAjQ,MAEAgQ,EAAA,IAAAjE,EAAAgE,YAAAE,GAAAjQ,MAGA+L,EAAAgE,YAAAC,EAGA,UAAAjE,EAAA+D,aACA5D,EAAAlF,QAAA+E,EAAAgE,eACAhE,EAAAgE,YAAAhE,EAAAgE,YAAA/P,UAKA6P,EAAA3K,QAAA6G,IACA4D,EAAAvI,KAAA2E,KAGA,IAAAjB,EAAA,CACAlL,KAAA+P,EACAO,WAAA,YACAC,cAAA,YACAC,eAAAlE,EAAAzF,iBAAAxB,OAAA,EAAAiH,EAAAzF,iBAAA,MAEA7B,OAAAyL,gBAAA3L,KAAAC,UAAAmG,IAAA7G,MAAA,SAAAa,GAEAoH,EAAApN,WAAA,EACA,MAAAgG,GAAA,MAAAA,EAAAlF,MAAA,WAAAkF,EAAAlF,KAAA,GAAAyE,QACA6H,EAAAvG,aAAAjB,KAAA4L,MAAAxL,EAAAlF,KAAA,GAAA2Q,MAAAC,YAAAC,cACAvE,EAAAlH,UAAAkH,EAAAjN,GAAA,gBAAAiN,EAAAjN,GAAA,yBAAAiN,EAAAjN,GAAA,UACAiN,EAAA1G,kBAAA,EACA,SAAA0G,EAAAxF,WACAwF,EAAAxG,iBAAAwG,EAAAjN,GAAA,2BAGAiN,EAAAxG,iBAAAwG,EAAAjN,GAAA,wBAGAiN,EAAAlH,UAAAkH,EAAAjN,GAAA,oBAAAiN,EAAAjN,GAAA,wBAAAiN,EAAAjN,GAAA,UACAiN,EAAA1G,kBAAA,YCjuB4W,I,YCOxWD,EAAY,eACd,EACAhH,EACAkD,GACA,EACA,KACA,KACA,MAIa,aAAA8D,E","file":"js/chunk-13c0b9b7.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_c('h5',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('ManageCategory')))]),_c('button',{staticClass:\"close\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]),_c('div',{staticClass:\"modal-body\"},[_c('span',{staticClass:\"user-guide\"},[_c('a',{staticClass:\"ancuserguide\",attrs:{\"data-toggle\":\"collapse\",\"href\":\"#collapseReply\",\"role\":\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseExample\"}},[_vm._v(_vm._s(_vm.$t('UserGuide')))]),_c('div',{staticClass:\"divancuserguide collapse\",attrs:{\"id\":\"collapseReply\"}},[_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarmergeuserguide\"}},[_c('div',{staticClass:\"con\",domProps:{\"innerHTML\":_vm._s(_vm.$t('UgAddManageCategory'))}})])])]),_c('Form',{ref:\"AddManageCategoryModal\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},scopedSlots:_vm._u([{key:\"tgslot-Description\",fn:function({ data }){return [_c('ckeditor',{attrs:{\"editor\":_vm.editor},on:{\"ready\":_vm.onReady},model:{value:(data.fieldInfo.value),callback:function ($$v) {_vm.$set(data.fieldInfo, \"value\", $$v)},expression:\"data.fieldInfo.value\"}}),_c('span',{staticClass:\"invalid-feedback d-block\",attrs:{\"name\":\"Description\"}},[_vm._v(_vm._s(data.error))])]}},{key:\"tgslot-IsForServiceRequest\",fn:function({ data }){return [_c('div',{staticClass:\"form-group mb-0\"},[_c('label',{staticClass:\"switch\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.fieldInfo.value),expression:\"data.fieldInfo.value\"},{name:\"disabled\",rawName:\"v-disabled\",value:(_vm.disabled),expression:\"disabled\"}],staticClass:\"form-check-input custom-control-input dynamic\",attrs:{\"type\":\"checkbox\",\"name\":'IsLogin'},domProps:{\"checked\":Array.isArray(data.fieldInfo.value)?_vm._i(data.fieldInfo.value,null)>-1:(data.fieldInfo.value)},on:{\"change\":[function($event){var $$a=data.fieldInfo.value,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(data.fieldInfo, \"value\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(data.fieldInfo, \"value\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(data.fieldInfo, \"value\", $$c)}},function($event){return _vm.checkForAutoCreateEnable(data.fieldInfo.value)}]}}),_c('span',{staticClass:\"slider round\",staticStyle:{\"cursor\":\"default\"}},[_c('span',{staticClass:\"slider-yes\"},[_vm._v(_vm._s(_vm.$t('Yes')))]),_c('span',{staticClass:\"slider-no\"},[_vm._v(_vm._s(_vm.$t('No')))])])])])]}}])})],1)],1)])])])],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <section>\r\n        <div class=\"my-popups\">\r\n            <loader :is-visible=\"isLoading\"></loader>\r\n            <div class=\"modal d-block\">\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\">{{ $t('ManageCategory') }}</h5>\r\n                            <button v-on:click=\"Close\" href=\"javascript:;\" class=\"close\">\r\n                                <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <span class=\"user-guide\">\r\n                                <a class=\"ancuserguide\" data-toggle=\"collapse\" href=\"#collapseReply\" role=\"button\"\r\n                                    aria-expanded=\"false\" aria-controls=\"collapseExample\">{{ $t('UserGuide') }}</a>\r\n                                <div id=\"collapseReply\" class=\"divancuserguide collapse\">\r\n                                    <div id=\"scrollbarmergeuserguide\" class=\"custom-scrollbar-js\">\r\n                                        <div class=\"con\" v-html=\"$t('UgAddManageCategory')\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </span>\r\n                            <Form ref=\"AddManageCategoryModal\">\r\n                                <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\">\r\n                                    <template v-slot:tgslot-Description=\"{ data }\">\r\n                                        <ckeditor :editor=\"editor\" @ready=\"onReady\" v-model=\"data.fieldInfo.value\">\r\n                                        </ckeditor>\r\n                                        <span name=\"Description\" class=\"invalid-feedback d-block\">{{ data.error }}</span>\r\n                                    </template>\r\n                                    <template v-slot:tgslot-IsForServiceRequest=\"{ data }\">\r\n                                        <div class=\"form-group mb-0\">\r\n                                            <label class=\"switch\">\r\n                                                <input class=\"form-check-input custom-control-input dynamic\" type=\"checkbox\"\r\n                                                    v-model=\"data.fieldInfo.value\" v-bind:name=\"'IsLogin'\"\r\n                                                    v-on:change=\"checkForAutoCreateEnable(data.fieldInfo.value)\"\r\n                                                    v-disabled=\"disabled\">\r\n                                                <span class=\"slider round\" style=\"cursor:default;\">\r\n                                                    <span class=\"slider-yes\">{{ $t('Yes') }}</span>\r\n                                                    <span class=\"slider-no\">{{ $t('No') }}</span>\r\n                                                </span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </template>\r\n\r\n                                </dynamic-form>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\n//import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nexport default {\r\n    props: {\r\n        modulename: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        submodulecode: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        callbackfunction: {\r\n            type: Function\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            editor: this.CLASSIC_EDITOR,\r\n            isLoading: false,\r\n            isSaveAndClose: '',\r\n            AutoServiceDisabled: true,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Category'),\r\n                            name: \"Category\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Status'),\r\n                            name: \"Status\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{ value: '1001', name: 'Active' }, { value: '1003', name: 'Inactive' }],\r\n                                showAddIcon: false\r\n                            },\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('IsForServiceRequest'),\r\n                            name: \"IsForServiceRequest\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: \"\",\r\n                            settings: {\r\n                                isInSlot: true\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('Description'),\r\n                            name: \"Description\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            settings: {\r\n                                isInSlot: true\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: { \"required\": true, max: 200 },\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save And Close\",\r\n                    value: \"SaveAndClose\",\r\n                    onClick: this.SaveCategoryForm\r\n                },\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    onClick: this.SaveCategoryForm\r\n\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    async created() {\r\n        var vm = this;\r\n\r\n    },\r\n    methods: {\r\n        checkForAutoCreateEnable: function (isChecked) {\r\n            var vm = this;\r\n            if (isChecked == true) {\r\n                vm.AutoServiceDisabled = false;\r\n            } else {\r\n                vm.AutoServiceDisabled = true;\r\n            }\r\n        },\r\n        Close: function () {\r\n            var vm = this;\r\n            vm.$parent.isManageCategory = false;\r\n        },\r\n        ClearFieldValue: function () {\r\n            var vm = this;\r\n            vm._data.FormSchema[0].Data[0].value = \"\";\r\n            vm._data.FormSchema[0].Data[1].value = \"\";\r\n            vm._data.FormSchema[1].Data[0].value = \"\";\r\n            vm._data.FormSchema[2].Data[0].value = \"\";\r\n        },\r\n        SaveCategoryForm: function (btnType) {\r\n            var vm = this;\r\n            if (btnType.value == \"SaveAndClose\") {\r\n                vm.isSaveAndClose = \"SaveAndClose\";\r\n            }\r\n            debugger;\r\n            vm.$refs.AddManageCategoryModal.validate().then(result => {\r\n                if (result) {\r\n                    var jsonobj = {\r\n                        CategoryName: vm._data.FormSchema[0].Data[0].value,\r\n                        Status: vm._data.FormSchema[0].Data[1].value,\r\n                        IsForServiceRequest: vm._data.FormSchema[1].Data[0].value,\r\n                        Description: vm._data.FormSchema[2].Data[0].value,\r\n                        CategoryType: 'TICKET_CATEGORY'\r\n                    };\r\n                    var params = JSON.stringify(jsonobj);\r\n                    DataServices.SaveCategoryData(params).then((response) => {\r\n                        debugger;\r\n                        if (response.data.result.MSG == 'Success') {\r\n                            vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Category\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                            if (vm.isSaveAndClose == \"SaveAndClose\") {\r\n                                vm.Close();\r\n                                if (vm.$parent.FormSchema.length > 0) {\r\n                                    vm.$parent.FormSchema.forEach((group, gi) => {\r\n                                        group.Data.forEach((field, fi) => {\r\n                                            if (field.name == \"ticket_category_id\") {\r\n                                                vm.callbackfunction('TICKET_CATEGORY', field, null);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n                                vm.ClearFieldValue();\r\n                                if (vm.$parent.FormSchema.length > 0) {\r\n                                    vm.$parent.FormSchema.forEach((group, gi) => {\r\n                                        group.Data.forEach((field, fi) => {\r\n                                            if (field.name == \"ticket_category_id\") {\r\n                                                vm.callbackfunction('TICKET_CATEGORY', field, null);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t(\"AddedError\", [vm.$t(\"Category\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddManageCategoryModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddManageCategoryModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddManageCategoryModal.vue?vue&type=template&id=142378b2&\"\nimport script from \"./AddManageCategoryModal.vue?vue&type=script&lang=js&\"\nexport * from \"./AddManageCategoryModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(\" \"+_vm._s(_vm.$t('AddTicket')))]),_c('span',{staticClass:\"float-right\"},[_c('RouterLink',{staticClass:\"p-action-btn text-white float-right\",attrs:{\"to\":\"/Ticketing/Index\"}},[_c('em',{staticClass:\"fa fa-angle-double-left\"}),_c('br'),_vm._v(\" \"+_vm._s(_vm.$t('BacktoList'))+\" \")])],1)])])]),(_vm.isSuccessMessage)?_c('div',{staticClass:\"border p-3\"},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12 ticket-thankyou text-center\"},[_vm._m(0),_c('h1',{staticClass:\"mt-4 mb-4\"},[_vm._v(_vm._s(_vm.$t('ThankYou')))]),_c('div',{staticClass:\"pb-4 ticket-number\"},[_c('P',[_vm._v(_vm._s(_vm.saveTicketStatus))]),_c('div',{staticStyle:{\"font-size\":\"20px\",\"position\":\"relative\",\"background\":\"#fff3cd\",\"padding\":\"35px 30px\",\"margin\":\"20px\",\"border\":\"4px dotted #856404\",\"display\":\"inline-block\",\"color\":\"#856404\"}},[_vm._v(\" \"+_vm._s(_vm.TicketNumber))])],1)])]):_vm._e(),_c('Form',{ref:\"AddTicket\"},[(!_vm.isSuccessMessage)?_c('dynamic-form',{ref:\"AddTicketForm\",attrs:{\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},scopedSlots:_vm._u([{key:\"tgslot-Description\",fn:function({ data }){return [_c('ckeditor',{class:{ 'is-invalid': data.error != '' },attrs:{\"editor\":_vm.editor},on:{\"ready\":_vm.onReady},model:{value:(data.fieldInfo.value),callback:function ($$v) {_vm.$set(data.fieldInfo, \"value\", $$v)},expression:\"data.fieldInfo.value\"}}),_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(_vm._s(data.error))])]}},(_vm.isForServiceRequest)?{key:\"tgslot-addresFields\",fn:function({ data }){return [_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('dynamic-form',{ref:\"AddTicketForm1\",attrs:{\"schema\":_vm.StaticObj}})],1),_c('div',{staticClass:\"col-md-6\"},[(_vm.isShowMap)?_c('ManageMap',{staticClass:\"row\",attrs:{\"mapType\":\"MapBox\",\"mapContainer\":\"AddTicket\",\"latLng\":_vm.latLng,\"config\":_vm.config,\"mapHeight\":\"355px\"},on:{\"GetAddress\":_vm.GetAddress}}):_vm._e()],1)])]}}:null],null,true)}):_vm._e()],1),(_vm.isManageCategory)?_c('ManageCategory',{attrs:{\"modulename\":\"Ticketing\",\"submodulecode\":\"Ticketing\",\"callbackfunction\":_vm.GetDropDownData}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"checksign text-success\"},[_c('i',{staticClass:\"fa fa-check\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <section class=\"main-content\">\r\n        <!-- <loader :is-visible=\"isLoading\"></loader> -->\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 padding-t_8\">\r\n                <div class=\"theme-primary partition-full\">\r\n                    <span class=\"p-name text-white\"> {{ $t('AddTicket') }}</span>\r\n                    <span class=\"float-right\">\r\n                        <RouterLink to=\"/Ticketing/Index\" class=\"p-action-btn text-white float-right\">\r\n                            <em class=\"fa fa-angle-double-left\"></em>\r\n                            <br />\r\n                            {{ $t('BacktoList') }}\r\n                        </RouterLink>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border p-3\" v-if=\"isSuccessMessage\">\r\n            <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12  ticket-thankyou text-center\">\r\n                <span class=\"checksign text-success\"><i class=\"fa fa-check\"></i></span>\r\n                <h1 class=\"mt-4 mb-4\">{{ $t('ThankYou') }}</h1>\r\n\r\n                <div class=\"pb-4 ticket-number\">\r\n                    <P>{{ saveTicketStatus }}</P>\r\n                    <div style=\"font-size: 20px;position: relative;background: #fff3cd;padding: 35px 30px; margin: 20px; border: 4px dotted #856404;display: inline-block;color: #856404;\">\r\n                        {{ TicketNumber }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Form ref=\"AddTicket\">\r\n            <dynamic-form ref=\"AddTicketForm\" :buttons=\"buttons\" :schema=\"FormSchema\" v-if=\"!isSuccessMessage\">\r\n                <template v-slot:tgslot-Description=\"{ data }\">\r\n                    <ckeditor :editor=\"editor\" @ready=\"onReady\" v-model=\"data.fieldInfo.value\"\r\n                        :class=\"{ 'is-invalid': data.error != '' }\"></ckeditor>\r\n                    <span class=\"invalid-feedback\">{{ data.error }}</span>\r\n                </template>\r\n                <template v-slot:tgslot-addresFields=\"{ data }\" v-if=\"isForServiceRequest\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <dynamic-form ref=\"AddTicketForm1\" :schema=\"StaticObj\"></dynamic-form>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <ManageMap class=\"row\" mapType=\"MapBox\" mapContainer=\"AddTicket\" :latLng=\"latLng\" :config=\"config\"\r\n                                mapHeight=\"355px\" v-if=\"isShowMap\" @GetAddress=\"GetAddress\"></ManageMap>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </dynamic-form>\r\n        </Form>\r\n        <ManageCategory v-if=\"isManageCategory\" modulename=\"Ticketing\" submodulecode=\"Ticketing\"\r\n            v-bind:callbackfunction=\"GetDropDownData\"></ManageCategory>\r\n    </section>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nimport ManageMap from './../../components/Common/MapComponent.vue';\r\nimport ManageCategory from './DetailsComponent/AddManageCategoryModal.vue';\r\nexport default {\r\n    components: {\r\n        ManageMap,\r\n        ManageCategory\r\n    },\r\n    data: function () {\r\n        return {\r\n            config: {\r\n                isShowDrawButton: true,\r\n                isShowSearchBox: true\r\n            },\r\n            FormSchema: [],\r\n            CountryDDl: '',\r\n            isSuccessMessage: false,\r\n            fileMulitpleData: [],\r\n            isShowMap: true,\r\n            latLng:'',\r\n            ticketType: '',\r\n            isForServiceRequest: false,\r\n            StaticObj: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('ClientAddress'),\r\n                            name: \"AddrTo\",\r\n                            value: \"\",\r\n                            disabled: false,\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.onChangeDropdown\r\n\r\n                            },\r\n                            placeholder: this.$t('Select'),\r\n                            validationRules: \"\",\r\n\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Address'),\r\n                            name: \"Address\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterAddress'),\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Country'),\r\n                            name: \"country_id\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.GetStateDDL\r\n                            },\r\n                            placeholder: this.$t('Select'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('State'),\r\n                            name: \"State\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Select'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('County'),\r\n                            name: \"County\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterCounty'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('City'),\r\n                            name: \"City\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterCityName'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Street'),\r\n                            name: \"Street\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterStreet'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('ZipCode'),\r\n                            name: \"Zip\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterZipCode'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('NoteAboutAddress'),\r\n                            name: \"Notes\",\r\n                            value: \"\",\r\n                            disabled: false,\r\n                            placeholder: this.$t('PleaseEnterDescription'),\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-warning save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i> Save As Draft\",\r\n                    value: \"DRAFT\",\r\n                    onClick: this.saveForm\r\n                },\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i> Submit\",\r\n                    onClick: this.saveForm\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i> Cancel\",\r\n                    onClick: this.Close\r\n                }\r\n            ],\r\n            isManageCategory: false,\r\n            editor: this.CLASSIC_EDITOR,\r\n        }\r\n    },\r\n    created: function(){\r\n        var vm = this;\r\n        if (!vm.isBlank(vm.$route.params.id) && vm.$route.params.id != \"0\") {\r\n            let ticket_id = decodeURIComponent(vm.$route.params.id);\r\n            let ticket_type = vm.$route.params.ticket_Type;\r\n            vm.getForm(ticket_id);\r\n        }\r\n        else {\r\n            if (vm.$route.params.id == \"0\") {\r\n                vm.getForm(0);\r\n\r\n            }\r\n            else {\r\n                vm.$router.push({ name: \"add\", params: { id: 0 } });\r\n                vm.getForm(0);\r\n            }\r\n        }\r\n        vm.GetCountryDDL();\r\n    },\r\n    methods:{\r\n        GetAddress: function (data) {\r\n            var vueObj = this;\r\n            vueObj.Latitude = '';\r\n            vueObj.Longitude = '';\r\n            debugger;\r\n            var indexValue = data.length - 1;\r\n            let filteredCountry = vueObj.CountryDDl.filter((item) => {\r\n                return item.name === data[indexValue].CompleteAddress.Country.LongName;\r\n            });\r\n            vueObj.StaticObj[1].Data[0].value = data[indexValue].CompleteAddress.FullAddress;\r\n            var filterCountry = filteredCountry == '' ? '' : filteredCountry[0].value;\r\n            vueObj.StaticObj[1].Data[1].value = filterCountry;\r\n            vueObj.GetStateDDL(null, filterCountry);\r\n            setTimeout(function () {\r\n                let filteredState = vueObj.StateDDl.filter((item) => {\r\n                    return item.name === data[indexValue].CompleteAddress.AdministrativeAreaLevel1.LongName;\r\n                });\r\n                var filterState = filteredState == '' ? '' : filteredState[0].value;\r\n                vueObj.StaticObj[1].Data[2].value = filterState;\r\n            }, 1000);\r\n            vueObj.StaticObj[1].Data[3].value = data[indexValue].CompleteAddress.AdministrativeAreaLevel2.LongName;\r\n            vueObj.StaticObj[1].Data[4].value = data[indexValue].CompleteAddress.City.LongName;\r\n            vueObj.StaticObj[1].Data[5].value = data[indexValue].CompleteAddress.AdministrativeAreaLevel3.LongName;\r\n            vueObj.StaticObj[1].Data[6].value = data[indexValue].CompleteAddress.PinCode;\r\n            var dataLat1 = ''; var dataLat2 = ''; var dataLng1 = ''; var dataLng2 = '';\r\n            data[indexValue].LatLng.forEach((item, index) => {\r\n                if (index == 0) {\r\n                    dataLat1 = item.Lat;\r\n                    dataLat2 = item.Lng;\r\n                }\r\n                else {\r\n                    dataLng1 = item.Lat;\r\n                    dataLng2 = item.Lng;\r\n                }\r\n            });\r\n            vueObj.Latitude = dataLng1 + ',' + dataLat2;\r\n            vueObj.Longitude = dataLat1 + ',' + dataLng2;\r\n\r\n\r\n            vueObj.FormSchema.forEach((group, gi) => {\r\n                group.Data.forEach((field, fi) => {\r\n                    if (group.group_name == \"GeneralInformation\") {\r\n                        if (field.name == \"location_se\") {\r\n                            field.value = vueObj.Latitude;\r\n                        }\r\n                        if (field.name == \"location_nw\") {\r\n                            field.value = vueObj.Longitude;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        onChangeDropdown: async function (e) {\r\n            var vm = this;\r\n            var dropName = e.target.name;\r\n            var clientAddressId = '';\r\n            if (dropName == \"AddrTo\") {\r\n                clientAddressId = e.target.value;\r\n            }\r\n            vm.FormSchema.forEach((group, gi) => {\r\n                group.Data.forEach((field, fi) => {\r\n                    if (field.name == \"on_behalf_consumer_id\") {\r\n                        let clientid = field.value.value;\r\n                        if (!vm.isBlank(clientid) && clientAddressId != '') {\r\n                            vm.BindAddressUsingClientAdrress(clientid, clientAddressId);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        GetCountryDDL: async function (event) {\r\n            debugger\r\n            var vm = this;\r\n            vm.StaticObj[1].Data[1].config.options = [];\r\n            vm.CountryDDl = '';\r\n            var appendingUrl = `id=&&moduleName=TICKETING&type=${'COUNTRIES'}&search=&refId=`;\r\n            await DataServices.GetDDLDataFSM(appendingUrl).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    vm.CountryDDl = response.data.result.DATA;\r\n                    if (json != null) {\r\n                        response.data.result.DATA.forEach((item, index) => {\r\n                            vm.StaticObj[1].Data[1].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        GetStateDDL: async function (event, id) {\r\n            var vm = this;\r\n            var CountryId = 0;\r\n            if (event == null) {\r\n                CountryId = id;\r\n            } else {\r\n                CountryId = event.target.value.toString();\r\n            }\r\n            vm.StaticObj[1].Data[2].config.options = [];\r\n            vm.StateDDl = '';\r\n            var appendingUrl = `id=&&moduleName=TICKETING&type=${'STATE'}&search=&refId=` + CountryId;\r\n            await DataServices.GetDDLDataFSM(appendingUrl).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    vm.StateDDl = response.data.result.DATA;\r\n                    if (json != null) {\r\n                        response.data.result.DATA.forEach((item, index) => {\r\n                            vm.StaticObj[1].Data[2].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        BindAddressUsingClientAdrress:async function (clientid, clientAddressId) {\r\n            debugger\r\n            var vueObj = this;\r\n            vueObj.Latitude = '';\r\n            vueObj.Longitude = '';\r\n            vueObj.latLng='';\r\n            var url = `id=${clientid}&moduleName=TICKETING&addressId=${clientAddressId}`;\r\n            await DataServices.GetTicketClientAddress(url).then(response => {\r\n\r\n                if (response.data.result != null && response.data.result.data.length > 0) {\r\n                    vueObj.StaticObj[1].Data[0].value = response.data.result.data[0].USER_ADDRESS_1;\r\n                    vueObj.StaticObj[1].Data[1].value = response.data.result.data[0].COUNTRY_ID;\r\n                    vueObj.StaticObj[1].Data[2].value = response.data.result.data[0].CT[0].ST[0].STATE_ID;\r\n                    vueObj.StaticObj[1].Data[4].value = response.data.result.data[0].USER_CITY;\r\n                    vueObj.StaticObj[1].Data[6].value = response.data.result.data[0].USER_ZIPCODE;\r\n                    vueObj.StaticObj[1].Data[7].value = response.data.result.data[0].USER_ADDRESS_DESC;\r\n                    vueObj.Latitude = response.data.result.data[0].Latitude + ',' + response.data.result.data[0].Longitude;\r\n                    vueObj.Longitude = response.data.result.data[0].Latitude + ',' + response.data.result.data[0].Longitude;\r\n                    vueObj.FormSchema.forEach((group, gi) => {\r\n                        group.Data.forEach((field, fi) => {\r\n                            if (group.group_name == \"GeneralInformation\") {\r\n                                if (field.name == \"location_se\") {\r\n                                    field.value = vueObj.Latitude;\r\n                                }\r\n                                if (field.name == \"location_nw\") {\r\n                                    field.value = vueObj.Longitude;\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                    var obj = {location_nw:vueObj.Latitude}\r\n                    vueObj.latLng=obj;\r\n                }\r\n            })\r\n        },\r\n        onReady(editor) {\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n            let mediaIcon=document.getElementsByClassName('ck-dropdown')[2]\r\n            mediaIcon.remove();\r\n            var divToRemove = document.querySelector('.ck-file-dialog-button');\r\n            divToRemove.remove();\r\n            let ArrowIcon=document.getElementsByClassName('ck ck-button ck-off')[8]\r\n            ArrowIcon.remove();\r\n        },\r\n        onChangeEventForFields: function (x, y, z) {\r\n            let ths = this;\r\n            if(x == \"FILL_DEPENDENT\"){\r\n                y.config.options = [];\r\n                var url = `id=&moduleName=TICKETING&type=${y.config.fieldCode}&search=&refId=${z}`;\r\n                DataServices.GetDDLData(url).then(function (response) {\r\n                    if (response.data) {\r\n                        var json = response.data;\r\n                        if (json != null) {\r\n                            y.config.options = response.data.DATA;\r\n                            ths.$refs.AddTicketForm.UpdateKeyValue();\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                if (y.name == \"attachment\") {\r\n                    ths.GetBase64String(y.value);\r\n                } else if (y.name == \"ticket_category_id\"){\r\n                    let catOptions = ths.$refs.AddTicketForm.getPropertyValue(\"ticket_category_id\", \"config.options\")\r\n                    let getSelectedValue = catOptions.filter((x) => { return x.value ==  y.value})\r\n                    ths.isForServiceRequest = getSelectedValue[0].first_value == \"1\" ? true : false;\r\n                    if(ths.isForServiceRequest) {\r\n                        ths.FormSchema.forEach(function(g, gi){\r\n                            if(g.group_name == \"Address\"){\r\n                                g.visibility = true;\r\n                            }\r\n                        })\r\n                        ths.$refs.AddTicketForm.updateProperty(\"ticket_for\", \"value\", \"2\");\r\n                        ths.$refs.AddTicketForm.updateProperty(\"on_behalf\", \"value\", \"4\");\r\n                        ths.$refs.AddTicketForm.updateProperty(\"is_field_service\", \"value\", \"1\");\r\n                    } else {\r\n                        ths.FormSchema.forEach(function(g, gi){\r\n                            if(g.group_name == \"Address\"){\r\n                                g.visibility = false;\r\n                            }\r\n                        })\r\n                        ths.$refs.AddTicketForm.updateProperty(\"ticket_for\", \"value\", \"1\");\r\n                        ths.$refs.AddTicketForm.updateProperty(\"on_behalf\", \"value\", \"\");\r\n                        ths.$refs.AddTicketForm.updateProperty(\"is_field_service\", \"value\", \"0\");\r\n                    }\r\n                }\r\n                if(y.name == \"on_behalf\"){\r\n                    let type = (y.value == \"3\")? \"USERS\": \"CLIENTS\";\r\n                    var url = `id=&moduleName=TICKETING&type=${type}&search=&refId=`;\r\n                    DataServices.GetDDLData(url).then(function (response) {\r\n                        if (response.data) {\r\n                            var json = response.data;\r\n                            if (json != null) {\r\n                                //y.config.options = ;\r\n                                ths.$refs.AddTicketForm.updateProperty(\"on_behalf_consumer_id\", \"config.options\", response.data.DATA);\r\n                                ths.$refs.AddTicketForm.updateProperty(\"on_behalf_consumer_id\", \"label\", ths.$t(((y.value == \"3\")? \"User\": \"Client\")));\r\n                                ths.$refs.AddTicketForm.UpdateKeyValue();\r\n                            }\r\n                        }\r\n                    });\r\n                } else if (y.name == \"on_behalf_consumer_id\") {\r\n                    ths.GetClientaddress(null, z.value);\r\n                    ths.GetCountryDDL();\r\n                }\r\n                else if (y.name == \"START_DATE\") {\r\n                ths.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach((field, fi) => {\r\n                        if (field.name == \"END_DATE\") {\r\n                            field.config.minDate=x;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            }\r\n        },\r\n        GetClientaddress: async function (event, id) {\r\n            var vm = this;\r\n            var clientId = 0;\r\n            if (event == null) {\r\n                clientId = id;\r\n            } else {\r\n                clientId = event.target.value.toString();\r\n                vm.clientId = clientId;\r\n            }\r\n            vm.StaticObj[0].Data[0].config.options = [];\r\n            var appendingUrl = `id=&&moduleName=TICKETING&type=${'CLIENT_ADDRESS_LIST_WO'}&search=&refId=` + clientId;\r\n            await DataServices.GetDDLDataFSM(appendingUrl).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        if(response.data.result.DATA!=undefined)\r\n                        {\r\n                            response.data.result.DATA.forEach((item, index) => {\r\n                                vm.StaticObj[0].Data[0].config.options.push({\r\n                                    value: item.value,\r\n                                    name: item.name\r\n                                })\r\n                                if (item.first_value == \"1\") {\r\n                                    vm.StaticObj[0].Data[0].value = item.value;\r\n                                    vm.BindAddressUsingClientAdrress(clientId, item.value);\r\n                                }\r\n                            })\r\n                        }\r\n                        else {\r\n                            vm.StaticObj[1].Data[0].value='';\r\n                            vm.StaticObj[1].Data[1].value='';\r\n                            vm.StaticObj[1].Data[2].value='';\r\n                            vm.StaticObj[1].Data[3].value='';\r\n                            vm.StaticObj[1].Data[4].value='';\r\n                            vm.StaticObj[1].Data[5].value='';\r\n                            vm.StaticObj[1].Data[6].value='';\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n            });\r\n            //vm.GetUtilityDDL(event, id);\r\n        },\r\n        GetBase64String: function (evt) {\r\n            try {\r\n                var vm = this;\r\n                var f = evt[0]; // FileList object\r\n                // var f = evt.target.files[0]; // FileList object\r\n                var reader = new FileReader();\r\n                let fileObj = {};\r\n                // Closure to capture the file information.\r\n                reader.onload = (function (theFile) {\r\n                    return function (e) {\r\n                        var binaryData = e.target.result;\r\n                        //Converting Binary Data to base 64\r\n                        var base64StringEncoded = window.btoa(binaryData);\r\n                        //showing file converted to base64\r\n                        var fileName = f.name;\r\n                        vm.fileName = fileName;\r\n                        var n = fileName.lastIndexOf(\".\");\r\n                        var extensionName = fileName.substring(n + 1, fileName.length);\r\n                        vm.fileExt += \".\" + extensionName;\r\n                        var attachemnetMime = '{\"ContentType\":\"' + f.type + '\",\"Size\":\"' + f.size + '\",\"Extension\":\"' + extensionName + '\"}';\r\n                        var fileSize = f.size;\r\n                        vm.fileSize = fileSize;\r\n\r\n                        fileObj.attachement_mime = attachemnetMime,\r\n                            fileObj.fileName = fileName,\r\n                            fileObj.base64String = base64StringEncoded,\r\n                            fileObj.fileSize = f.size,\r\n                            fileObj.contentType = f.type,\r\n                            fileObj.ModuleName = 'TICKETING',\r\n                            fileObj.SubModuleCode = 'TICKETING'\r\n                        vm.fileMulitpleData.push(fileObj);\r\n                    };\r\n                })(f);\r\n                // Read in the image file as a data URL.\r\n                reader.readAsBinaryString(f);\r\n\r\n            }\r\n            catch (ex) {\r\n            }\r\n        },\r\n        getForm: function (id) {\r\n            var ths = this;\r\n            var url = `recordId=${id}&moduleName=Ticketing&subModuleCode=Ticketing`;\r\n            DataServices.GetDynamicForm(url).then(function (response) {\r\n                if (response != null && response.data != null) {\r\n                    var responseData = response.data.data;\r\n                    var frmSchma = []\r\n                    frmSchma = ths.$refs.AddTicketForm.ConvertCustomFieldIntoDynamicFormObj(responseData);\r\n                    frmSchma.forEach((group, gi) => {\r\n                        group.Data.forEach((field, fi) => {                         \r\n                            if (field.name == \"is_read\") {\r\n                                field.value = 0;\r\n                            } \r\n                            else if (field.name == \"ticket_for\") {\r\n                                field.value = \"1\";\r\n                            } else if (field.name == \"on_behalf_consumer_id\") {                               \r\n                                    const result = field.config.options;\r\n                                    if(result.length > 0){\r\n                                        field.value= { value: result[0].value, label: result[0].name };\r\n                                    }                           \r\n                                }  \r\n                            else if (field.name == \"attachment\") {\r\n                                field.showLabel = false;\r\n                                field.config =\r\n                                {\r\n                                    maxSize: 5,\r\n                                    accept: [\r\n                                        {\r\n                                            fileType: 'doc', // Document type\r\n                                            iconClass: 'fa-file-word-o' // Icon class for documents\r\n                                        },\r\n                                        {\r\n                                            fileType: 'docx', // Document type\r\n                                            iconClass: 'fa-file-word-o' // Icon class for documents\r\n                                        },\r\n                                        {\r\n                                            fileType: 'txt', // Text file type\r\n                                            iconClass: 'fa-file-text-o' // Icon class for text files\r\n                                        },\r\n                                        {\r\n                                            fileType: 'jpg', // Image types\r\n                                            iconClass: 'fa-file-image-o' // Icon class for images\r\n                                        },\r\n                                        {\r\n                                            fileType: 'jpeg', // Image types\r\n                                            iconClass: 'fa-file-image-o' // Icon class for images\r\n                                        },\r\n                                        {\r\n                                            fileType: 'png', // Image types\r\n                                            iconClass: 'fa-file-image-o' // Icon class for images\r\n                                        },\r\n                                        {\r\n                                            fileType: 'gif', // Image types\r\n                                            iconClass: 'fa-file-image-o' // Icon class for images\r\n                                        },\r\n                                        {\r\n                                            fileType: 'bmp', // Image types\r\n                                            iconClass: 'fa-file-image-o' // Icon class for images\r\n                                        },\r\n                                        {\r\n                                            fileType: 'mp4', // Video types\r\n                                            iconClass: 'fa-file-video-o' // Icon class for videos\r\n                                        },\r\n                                        {\r\n                                            fileType: 'mov', // Video types\r\n                                            iconClass: 'fa-file-video-o' // Icon class for videos\r\n                                        },\r\n                                        // Add more image, document, text, and video types as needed\r\n                                    ],\r\n                                    //onChange: ths.GetBase64String,\r\n                                    showAddIcon: false,\r\n                                    onAddButtonClick: '',\r\n                                    multiple: true\r\n                                }\r\n                            }\r\n                            if (group.group_name == \"Preferred Time\" ) {\r\n                                group.visibility = true;\r\n                                if (field.name == \"START_DATE\") {\r\n                                    field.visibility = true;\r\n                                    field.config = { mode: 'DateTime', format: \"M/D/YYYY\" }\r\n                                }\r\n                                if (field.name == \"END_DATE\") {\r\n                                    field.visibility = true;\r\n                                    field.config = { mode: 'DateTime', format: \"M/D/YYYY\",   minDate: \"\" }\r\n                                }\r\n                            }\r\n                            field.config.onChange = ths.onChangeEventForFields;\r\n                        })\r\n                    })\r\n                    frmSchma.push(\r\n                    {\r\n                        layoutType: \"single\",\r\n                        group_name: 'ticketType',\r\n                        visibility: false,\r\n                        Data: [{\r\n                            astype: \"SlotField\",                            \r\n                            name: \"TicketType\",\r\n                            value: \"\",\r\n                            visibility: false,\r\n                        }]                           \r\n                    });\r\n                    frmSchma.push({\r\n                        layoutType: \"single\",\r\n                        group_name: 'Address',\r\n                        visibility: false,\r\n                        Data: [{\r\n                            astype: \"SlotField\",\r\n                            name: \"addresFields\",\r\n                            value: \"\",\r\n                            visibility: true,\r\n                            showLabel: false\r\n                        }]\r\n                    });\r\n                    ths.FormSchema = frmSchma;\r\n                }\r\n            });\r\n        },\r\n        saveForm: function (btnType) {\r\n            var ths = this;\r\n            ths.$refs.AddTicket.validate().then(result => {\r\n                if (result) {\r\n                    if (btnType.value == \"DRAFT\") {\r\n                        ths.FormSchema.forEach((group, gi) => {\r\n                            group.Data.forEach((field, fi) => {\r\n                                if (group.group_name == \"ticketType\") {\r\n                                    if (field.name == \"TicketType\") {\r\n                                        field.value = 'DRAFT';\r\n                                    }\r\n                                }\r\n                            });\r\n                        });\r\n                        ths.ticketType = 'DRAFT';\r\n                    }\r\n                    ths.isLoading = true;\r\n                    var CustomFieldArray = ths.$refs.AddTicketForm.ConvertDynamicFormObjToCustomFieldObj(ths.FormSchema);\r\n                    var CustomFieldArrayStatic = ths.$refs.AddTicketForm.ConvertDynamicFormObjToCustomFieldObj(ths.StaticObj);\r\n                    CustomFieldArray.forEach((x) => {\r\n                        if (x.field_name == \"on_behalf_consumer_id\") {\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                x.field_value = x.field_value.value;\r\n                            }\r\n                        }\r\n                        if (x.field_name == \"work_type_id\") {\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                x.field_value = x.field_value.value;\r\n                            }\r\n                        }\r\n                        if (x.field_name == \"cc_users\") {\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                var CCUsers = '';\r\n                                var i = 0;\r\n                                for (i = 0; i < x.field_value.length; i++) {\r\n                                    if (i == 0) {\r\n                                        CCUsers = x.field_value[i].value;\r\n                                    } else {\r\n                                        CCUsers = CCUsers + \",\" + x.field_value[i].value;\r\n                                    }\r\n                                }\r\n                                x.field_value = CCUsers;\r\n                            }\r\n                        }\r\n                        if (x.field_name == \"weekly\") {\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                x.field_value = x.field_value.value;\r\n                            }\r\n                        }\r\n                    })\r\n                 \r\n                    CustomFieldArrayStatic.forEach((x) => {\r\n                        CustomFieldArray.push(x);\r\n                    });\r\n\r\n                    var obj = {\r\n                        data: CustomFieldArray,\r\n                        moduleCode: \"Ticketing\",\r\n                        subModuleCode: \"Ticketing\",\r\n                        attachmentData: ths.fileMulitpleData.length > 0 ? ths.fileMulitpleData : null\r\n                    }\r\n                    DataServices.SaveDynamicForm(JSON.stringify(obj)).then(function (response) {\r\n                        debugger;\r\n                        ths.isLoading = false;\r\n                        if (response != null && response.data != null && response.data[0].Status == \"Success\") {\r\n                            ths.TicketNumber = JSON.parse(response.data[0].Value.OTHER_DATA).TICKET_NUMBER;\r\n                            ths.ShowAlert(ths.$t(\"AddedSuccess\", [ths.$t(\"Ticket\")]), \"success\", true, ths.$t(\"Alert\"));\r\n                            ths.isSuccessMessage = true;\r\n                            if (ths.ticketType == 'DRAFT') {\r\n                                ths.saveTicketStatus = ths.$t(\"TicketDraftSubmitStatus\");\r\n                            }\r\n                            else {\r\n                                ths.saveTicketStatus = ths.$t(\"TicketSubmitStatus\");\r\n                            }\r\n                        } else {\r\n                            ths.ShowAlert(ths.$t(\"ErrorWhileSaving\", [ths.$t(\"Ticket\")]), \"danger\", true, ths.$t(\"Alert\"));\r\n                            ths.isSuccessMessage = false;\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./addWithCustomLayout.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./addWithCustomLayout.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./addWithCustomLayout.vue?vue&type=template&id=2810c906&\"\nimport script from \"./addWithCustomLayout.vue?vue&type=script&lang=js&\"\nexport * from \"./addWithCustomLayout.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}