{"version":3,"sources":["webpack:///./src/components/Modal/AddSubMenuPopup.vue?258d","webpack:///./src/components/Modal/AddChannelConfigurationPopup.vue?8d42","webpack:///./src/components/Modal/AddChannelConfigurationPopup.vue?c449","webpack:///./src/components/Modal/AddChannelConfigurationPopup.vue?53d3","webpack:///./src/components/Modal/AddSubMenuPopup.vue?9fe6","webpack:///./src/components/Modal/AddSubMenuPopup.vue?c920","webpack:///./src/views/ChannelConfiguration/ChannelConfigurationlisting.vue","webpack:///./src/views/ChannelConfiguration/ChannelConfigurationSchema.js","webpack:///./src/components/Modal/AddChannelConfigurationPopup.vue","webpack:///./src/components/Modal/AddSubMenuPopup.vue","webpack:///src/components/Modal/AddSubMenuPopup.vue","webpack:///./src/components/Modal/AddSubMenuPopup.vue?95cd","webpack:///./src/components/Modal/AddSubMenuPopup.vue?c69e","webpack:///src/components/Modal/AddChannelConfigurationPopup.vue","webpack:///./src/components/Modal/AddChannelConfigurationPopup.vue?bf37","webpack:///./src/components/Modal/AddChannelConfigurationPopup.vue?8965","webpack:///src/views/ChannelConfiguration/ChannelConfigurationlisting.vue","webpack:///./src/views/ChannelConfiguration/ChannelConfigurationlisting.vue?bb50","webpack:///./src/views/ChannelConfiguration/ChannelConfigurationlisting.vue?391e"],"names":["___CSS_LOADER_API_IMPORT___","exports","push","module","i","content","__esModule","default","locals","add","render","_vm","this","_c","_self","directives","name","rawName","value","IsGroupView","expression","attrs","$t","renderActions","channelConfigList","Headers","listheaderbuttons","TotalRecords","leftSearchFields","FetchData","SortExp","SortBy","on","leftCommonSearch","pagerMethod","commonHeaderButtonClick","actionButtonClick","scopedSlots","_u","key","fn","data","column","COLUMN_NAME","isCRMShowStausDrop","row","STATUS_ID","ref","SOURCE_ID","StatusListForListing","_e","staticClass","class","getStatusClass","_v","_s","AddChannelConfigurationPopup","SourceId","AddChannel","SettingList","tabChange","staticRenderFns","buttons","title","iconClass","callbackfunction","additionalClass","isdisabled","isvisible","checkPrivilege","id","isEnabledOnSelectedRow","leftsearchSchema","fieldName","fieldType","fieldIcon","fieldSearchConditionName","paramName","isSearch","listOptions","listActions","href","icon","additionalSpan","async","bindleftCommonSearchdropdown","instance","moduleName","filtername","AllCount","vm","param1","DataServices","GetDDLData","then","response","DATA","forEach","element","obj","staticStyle","close","tab","_l","channelOptions","option","index","$event","ExpandMenu","style","shadeColor","CHANNEL_COLOR","CHANNEL_ICON","CHANNEL_DESC","Math","ceil","subMenuRow","AddSubMenuPopup","subMenuClass","subMenuOptions","customEmailOptions","$","FormSchema","setEmailType","fieldInfo","domProps","target","composing","$set","FormSchemaExchange","_m","openTab","showBorder","size","menuItem","menuItemSize","goToAction","color","background","props","type","Boolean","required","String","Array","FacebookAppId","FacebookConfigurationId","FacebookAuthCallBackUrl","isLoading","TicketId","showSubMenu","selectedChannel","subMenu","isVisible","emailOptions","imapSettings","sourceId","emailAccountType","displayName","email","password","incomingMailServer","isSecureConnection","port","portIncomingChecked","outgoingServer","isOutgoingSecureConnection","outPort","portOutgoingChecked","exchangeSettings","exchangeServerVersion","exchangeDomainName","userName","timeZone","watch","setMenuItemSize","created","methods","length","console","log","percent","slice","newColor","toString","toUpperCase","padStart","action","$parent","LoginWithTwitter","window","location","component","components","errors","tabchange","callAndMessageOptions","whatsappOptions","chatbotOption","externalLinkOptions","TimeZoneList","layoutType","group_name","Data","astype","label","placeholder","disabled","config","options","showAddIcon","validationRules","max","selected","socialMediaOptions","Number","List","channelName","CHANNEL_NAME","channelId","CHANNEL_ID","getChannelOptions","setMappingList","GetTimeZoneList","GetTimeZoneListing","result","item","VALUE","TEXT","$refs","UpdateKeyValue","TYPE","USERNAME","EMAIL","PASSWORD","IP","PORT","IS_INCOMING_PORT_CHECKED","IS_INCOMING_CONNECTION_SECURE","OUTGOING_IP","OUTGOING_PORT","IS_OUTGOING_PORT_CHECKED","IS_OUTGOING_CONNECTION_SECURE","EXCHANGE_SERVER_VERSION","DOMAIN","TIMEZONE_ID","GetTwitterAuth","tabNum","FetchTicketingChannelOptionList","source","confirmR","CHANNEL_SOURCE_TYPE_NAME","jsonData","JSON","stringify","SubmitTicketingChannelConfiguration","ShowAlert","sourceData","AddCustomEmail","validate","valid","CHANNEL_SOURCE_DATA","status","showChannelModal","mapStatusId","PageSize","PageNumber","CurrentPage","user_type","user_id","companyId","Schema","noRecord","STATUS","STATUS_COLOR","STATUS_BG_COLOR","GetUserInfo","ID","UserType","CompanyId","paramsToObject","entries","isPaged","searchCondition","self","rtnActionArray","actionItem","event","commonDelete","editChannelConfig","commonDeleteData","openAddchannelConfiguration","undefined","params","GetTicketingChannelSourceById","vueObj","srchCondition","NameRegex","valuesInParenthesesRegex","url","isBlank","includes","accountNameMatch","match","channelNameMatch","created_by_match","status_Match","FetchFSMTicketingSetupSources","settings","isInSlot","setTimeout","ResponsiveDataTable","returnClass","val","not","each","postJSON","ids","userId","refCode","objectPostString","deleteActivityData","box","Status","modal","alert","prop","removeAttr","removeClass","addClass","UpdateStatus","updatestatus"],"mappings":"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","file":"js/chunk-2f95c8e9.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".multi-collapse[data-v-432b3f26]{padding-left:15px!important;padding-right:15px!important;padding-top:0!important;padding-bottom:0!important;max-width:99%!important}.sub-menu li[data-v-432b3f26]{width:100%;max-width:50%;padding:15px;float:left;display:flex;transition:all .4s}.sub-menu li .short-item-name[data-v-432b3f26]{font-size:15px;color:#000!important}.sub-menu-section-right[data-v-432b3f26]:before{content:\\\"\\\";position:absolute;left:66%;right:0;top:-8px;margin:auto;width:0;height:0;border-style:solid;border-color:transparent transparent rgba(0,0,0,.2) transparent;border-width:0 10px 10px 10px}.sub-menu-section-left[data-v-432b3f26]:before{right:66%}.sub-menu-section-center[data-v-432b3f26]:before,.sub-menu-section-left[data-v-432b3f26]:before{content:\\\"\\\";position:absolute;left:0;top:-8px;margin:auto;width:0;height:0;border-style:solid;border-color:transparent transparent rgba(0,0,0,.2) transparent;border-width:0 10px 10px 10px}.sub-menu-section-center[data-v-432b3f26]:before{right:0}.shortcuts-menu li .left-icon-m i[data-v-432b3f26]{color:#fff!important;font-size:25px!important}.shortcuts-menu li[data-v-432b3f26]:hover{transform:inherit!important}.shortcuts-menu li[data-v-432b3f26]{max-width:33%}.shortcuts-menu li[data-v-432b3f26],.shortcuts-menu li.large[data-v-432b3f26]{width:100%;padding:15px;float:left;display:flex;transition:all .4s}.shortcuts-menu li.large[data-v-432b3f26]{max-width:50%}.shortcuts-menu li .short-item-name[data-v-432b3f26]{color:#000!important}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddChannelConfigurationPopup.vue?vue&type=style&index=0&id=d16a7224&prod&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1e434b9a\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".shortcuts-menu li{width:100%;max-width:33%;padding:15px;float:left;display:flex;transition:all .4s}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddChannelConfigurationPopup.vue?vue&type=style&index=0&id=d16a7224&prod&lang=css&\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddSubMenuPopup.vue?vue&type=style&index=0&id=432b3f26&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4d0ef97c\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddSubMenuPopup.vue?vue&type=style&index=0&id=432b3f26&prod&scoped=true&lang=css&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('tg-list',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.IsGroupView),expression:\"IsGroupView\"}],attrs:{\"IsShowAction\":true,\"ModuleName\":\"Ticketing\",\"SubModuleCode\":\"FSM_Ticketing_Setup_Source\",\"IdentityColumn\":\"SOURCE_ID\",\"HeaderText\":_vm.$t('Channel Configuration Lis....'),\"LegendArray\":[],\"RenderRowActionMethod\":_vm.renderActions,\"widgets\":[],\"listType\":['List'],\"ListData\":_vm.channelConfigList,\"HeaderData\":_vm.Headers,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"SearchFields\":_vm.leftSearchFields,\"ListDataCallBackFunction\":_vm.FetchData,\"showCheckBox\":true,\"SortExp\":_vm.SortExp,\"SortBy\":_vm.SortBy,\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"ActionButtonClick\":_vm.actionButtonClick},scopedSlots:_vm._u([{key:\"slotdata\",fn:function({ data }){return [(data.column.COLUMN_NAME == 'STATUS_ID')?[(_vm.isCRMShowStausDrop(data.row.STATUS_ID, 'Ticketing'))?_c('listing-status',{ref:\"updatestatus\",attrs:{\"isfor\":'ChannelConfiguration',\"dataid\":data.row.SOURCE_ID,\"data-controller\":\"Crm\",\"statuslist\":_vm.StatusListForListing,\"item\":data.STATUS_ID,\"data-action\":\"index\",\"dataselected\":data.row.STATUS_ID == 1001 ? 'Active' : 'Inactive',\"callbackfunction\":_vm.FetchData,\"isselectedvaluestring\":true}}):_vm._e(),(!_vm.isCRMShowStausDrop(data.row.STATUS_ID, 'Ticketing'))?_c('a',{staticClass:\"inactive-disabled\"},[_c('span',{class:_vm.getStatusClass(data.row.STATUS_ID, 'STATUS_ID')},[_vm._v(\" \"+_vm._s(data.row[data.column.COLUMN_NAME])+\" \")])]):_vm._e()]:_vm._e()]}}])}),(_vm.AddChannelConfigurationPopup)?_c('AddChannelConfigurationPopup',{ref:\"ChannelConfiguration\",attrs:{\"SourceId\":_vm.SourceId,\"AddChannel\":_vm.AddChannel,\"List\":_vm.SettingList,\"tabChange\":_vm.tabChange}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import DataServices from \"@/services/DataService\";\r\n    let buttons =\r\n    [\r\n    {\r\n        title: 'Add a Channel Configuration',\r\n        iconClass: 'fa fa-plus',        \r\n        callbackfunction: 'openaddAddchannel',\r\n        additionalClass: '',\r\n        isdisabled: false,\r\n        isvisible: true,\r\n        checkPrivilege: true,\r\n        id:'Addticketing',\r\n         \r\n    },\r\n   \r\n   \r\n    {\r\n        id: 'DeleteMultiple',\r\n        title: 'Remove',\r\n        iconClass: 'ffa fa-trash',\r\n        callbackfunction: 'commonDeleteData',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: false,\r\n        isEnabledOnSelectedRow: true\r\n    }, \r\n   \r\n    ];\r\n\r\n    let leftsearchSchema = [\r\n        {\r\n            fieldName: 'Account Name',\r\n            fieldType: \"text\",\r\n            fieldIcon: \"fa fa-user\",\r\n            fieldSearchConditionName: ['TSM.account_name'],\r\n            paramName:\"AccountName\",\r\n            isSearch: false,\r\n            value: \"\",\r\n            listOptions: []        \r\n        },\r\n        {\r\n            fieldName: 'Channel Name',\r\n            fieldType: \"text\",\r\n            fieldIcon: \"fa fa-solid fa-tv\",\r\n            fieldSearchConditionName: ['TSM.channel_name'],\r\n            paramName:\"ChannelName\",\r\n            isSearch: false,\r\n            value: \"\",\r\n            listOptions: []\r\n        },\r\n        {\r\n            fieldName: 'Created By',\r\n            fieldType: \"ddl-check\",\r\n            fieldIcon: \"fa fa-user-circle\",\r\n            fieldSearchConditionName: ['TSM.created_by'],\r\n            isSearch: false,\r\n            paramName:\"CreatedBy\",\r\n            value: \"\",\r\n            listOptions: []\r\n        },\r\n        {\r\n            fieldName: 'Status',\r\n            fieldType: \"ddl-check\",\r\n            fieldIcon: \"fa fa-bar-chart\",\r\n            fieldSearchConditionName: ['TSM.Status'],\r\n            paramName:\"Status\",\r\n            isSearch: false,\r\n            value: \"\",           \r\n            listOptions: [{ value: \"1001\", name: \"Active\" }, { value: \"1002\", name: \"InActive\" }]\r\n        }\r\n    ]\r\n\r\n    let listActions=[  \r\n        {\r\n            title:'Edit',\r\n            href: 'javascript:void(0)',\r\n            callbackfunction: 'editChannelConfig',\r\n            icon: 'fa action-icon fa fa-pencil',\r\n            additionalSpan:''\r\n        },         \r\n        {\r\n            title:'Delete',\r\n            href: 'javascript:void(0)',\r\n            icon: 'fa fa-trash',\r\n            callbackfunction:'commonDeleteData',\r\n            additionalSpan:''\r\n        },          \r\n    ];\r\n    \r\n    async function  bindleftCommonSearchdropdown(instance, moduleName, filtername,data,AllCount) {\r\n        debugger;\r\n        var vm = instance;\r\n    var param = \"moduleName='\"+moduleName+\"'&type=\"+filtername+\"\"\r\n    var param1 = \"moduleName=FSM&type=\"+filtername+\"\"\r\n    if (filtername == 'FSM_USERS') {    \r\n        debugger;\r\n        await DataServices.GetDDLData(param1).then((response) => {\r\n            \r\n            response.data.DATA.forEach(element => {\r\n                let obj = {\r\n                    name: element.name,\r\n                    value: element.value\r\n                }\r\n                vm.leftSearchFields[2].listOptions.push(obj);           \r\n            });\r\n        });\r\n    }\r\n    }\r\n\r\n\r\n    export default { buttons, leftsearchSchema,listActions,bindleftCommonSearchdropdown};","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('div',{staticClass:\"modal my-popups right fade show\",staticStyle:{\"display\":\"block!important\"},attrs:{\"data-keyboard\":\"false\",\"data-backdrop\":\"static\",\"id\":\"manageChannelModal\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog mw-1100\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header mheader-user\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.close}},[_c('i',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title\",attrs:{\"id\":\"myModalLabel\"}},[_vm._v(_vm._s(_vm.title))])]),_c('div',{staticClass:\"modal-body\",staticStyle:{\"background\":\"white\"}},[(_vm.tab === 'main')?_c('ul',{staticClass:\"shortcuts-menu pb-3\",attrs:{\"id\":\"divChannelTypes\"}},[_vm._l((_vm.channelOptions),function(option,index){return [_c('li',{staticClass:\"position-relative\",on:{\"click\":function($event){return _vm.ExpandMenu(option, index)}}},[_c('a',{staticClass:\"short-menu-item\",style:({ 'background': _vm.shadeColor(option.CHANNEL_COLOR, 70) })},[_c('span',{staticClass:\"left-icon-m m-3 text-white\",style:({ 'background': option.CHANNEL_COLOR })},[_c('i',{class:option.CHANNEL_ICON})]),_c('span',{staticClass:\"short-item-name\"},[_vm._v(_vm._s(option.CHANNEL_DESC))])])]),(((index + 1) % 3 == 0 && Math.ceil((index + 1) / 3) == _vm.subMenuRow))?[(_vm.AddSubMenuPopup)?_c('AddSubMenuPopup',{class:_vm.subMenuClass,attrs:{\"size\":\"s\",\"showBorder\":true,\"channelOptions\":_vm.subMenuOptions}}):_vm._e()]:_vm._e()]})],2):_vm._e(),(_vm.tab == 'Email')?[(_vm.AddSubMenuPopup)?_c('AddSubMenuPopup',{attrs:{\"showBorder\":false,\"size\":\"m\",\"channelOptions\":_vm.customEmailOptions}}):_vm._e()]:_vm._e(),(_vm.tab == 'EmailSetUpSuccess')?[_c('div',{staticClass:\"text-center\",staticStyle:{\"margin\":\"100px!important\"}},[_c('i',{staticClass:\"fa fa-4x fa-check-circle text-success\",attrs:{\"aria-hidden\":\"true\"}}),_c('h1',[_c('b',[_vm._v(_vm._s(_vm.$(\"ThankYou!\")))])]),_c('strong',[_vm._v(_vm._s(_vm.$(\"SetTalygenEmailTicketChannelRequestSent\")))])])]:_vm._e(),_c('Form',{ref:\"AddCustomEmail\"},[(_vm.tab == 'imapSettings')?_c('dynamic-form',{ref:\"imapSettings\",attrs:{\"id\":\"imapSettingTab\",\"buttons\":false,\"lang\":\"en\",\"schema\":_vm.FormSchema},on:{\"OnSubmit\":function($event){return _vm.setEmailType('Custom')}},scopedSlots:_vm._u([{key:\"tgslot-Password\",fn:function({ data }){return [_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.fieldInfo.value),expression:\"data.fieldInfo.value\"}],staticClass:\"form-control w-100\",attrs:{\"type\":\"password\",\"name\":'Password'},domProps:{\"value\":(data.fieldInfo.value)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(data.fieldInfo, \"value\", $event.target.value)}}})])]}}],null,false,471427276)}):_vm._e(),(_vm.tab == 'exchangeSettings')?_c('dynamic-form',{ref:\"exchangeSettings\",attrs:{\"id\":\"exchangeSettingsTab\",\"buttons\":false,\"lang\":\"en\",\"schema\":_vm.FormSchemaExchange},on:{\"OnSubmit\":function($event){return _vm.setEmailType('Custom')}},scopedSlots:_vm._u([{key:\"tgslot-Password\",fn:function({ data }){return [_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.fieldInfo.value),expression:\"data.fieldInfo.value\"}],staticClass:\"form-control w-100\",attrs:{\"type\":\"password\",\"name\":'Password'},domProps:{\"value\":(data.fieldInfo.value)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(data.fieldInfo, \"value\", $event.target.value)}}})])]}}],null,false,471427276)}):_vm._e()],1),_c('div',{staticClass:\"modal-footer fixed-bottom\"},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12\"},[_c('div',{staticClass:\"col-sm-12 col-md-6 col-lg-6 col-xl-6\"},[(_vm.tab == 'imapSettings' || _vm.tab == 'exchangeSettings')?_c('span',{staticClass:\"text-danger float-left\"},[_vm._m(0)]):_vm._e()]),_c('div',{staticClass:\"col-sm-12 col-md-6 col-lg-6 col-xl-6 float-right\"},[_c('div',{staticClass:\"input-group text-right d-block\"},[(_vm.tab == 'Email')?_c('button',{staticClass:\"btn btn-secondary mr-1\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.openTab('main')}}},[_c('i',{staticClass:\"fa fa-angle-double-left mr-1\"}),_vm._v(_vm._s(_vm.$t('Back')))]):_vm._e(),(_vm.tab == 'EmailSetUpSuccess')?_c('button',{staticClass:\"btn btn-danger mr-1\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.close}},[_c('i',{staticClass:\"fa fa-close mr-1\"}),_vm._v(_vm._s(_vm.$t('Close')))]):_vm._e(),(_vm.tab == 'imapSettings' || _vm.tab == 'exchangeSettings')?_c('button',{staticClass:\"btn btn-success mr-1\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.setEmailType('Custom')}}},[_c('i',{staticClass:\"fa fa-save mr-1\"}),_vm._v(_vm._s(_vm.$t('SaveSettings')))]):_vm._e(),(_vm.tab == 'imapSettings' || _vm.tab == 'exchangeSettings')?_c('button',{staticClass:\"btn btn-secondary mr-1\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.openTab('Email')}}},[_c('i',{staticClass:\"fa fa-angle-double-left mr-1\"}),_vm._v(_vm._s(_vm.$t('Back')))]):_vm._e()])])])])],2)])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('small',[_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Fields marked with an asterisk (*) are mandatory.\")])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"collapse multi-collapse show position-relative\",attrs:{\"id\":\"multiCollapse\"}},[_c('div',{class:{'card':_vm.showBorder}},[_c('ul',{class:{'sub-menu':_vm.size ==='s','shortcuts-menu':_vm.size ==='m'}},[_vm._l((_vm.channelOptions),function(menuItem){return [_c('li',{staticClass:\"position-relative large\",style:({'width':_vm.menuItemSize+'%!important'}),on:{\"click\":function($event){return _vm.goToAction(menuItem.name)}}},[(_vm.size==='s')?_c('a',{staticClass:\"short-menu-item\",style:({'background':_vm.shadeColor(menuItem.color,menuItem.background),'border-color':menuItem.color})},[_c('span',{staticClass:\"icon m-2 text-white\"},[_c('i',{class:menuItem.icon,style:({'color':menuItem.color})})]),_c('span',{staticClass:\"short-item-name\"},[_vm._v(_vm._s(menuItem.title))])]):(_vm.size==='m')?_c('a',{staticClass:\"short-menu-item\",style:({'background':_vm.shadeColor(menuItem.color,menuItem.background),'border-color':menuItem.color})},[_c('span',{staticClass:\"left-icon-m m-3 text-white\",style:({'background':menuItem.color})},[_c('i',{class:menuItem.icon})]),_c('span',{staticClass:\"short-item-name\"},[_vm._v(_vm._s(menuItem.title))])]):_vm._e()])]})],2)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<style scoped>\r\n .multi-collapse {\r\n        padding-left: 15px !important;\r\n        padding-right: 15px !important;\r\n        padding-top: 0px !important;\r\n        padding-bottom: 0px !important;\r\n        max-width: 99% !important;\r\n    }\r\n\r\n    .sub-menu li {\r\n        width: 100%;\r\n        max-width: 50%;\r\n        padding: 15px;\r\n        float: left;\r\n        display: flex;\r\n        transition: all .4s;\r\n    }\r\n\r\n        .sub-menu li .short-item-name {\r\n            font-size: 15px;\r\n            color: black !important;\r\n        }\r\n\r\n    .shortcuts-menu li .short-item-name {\r\n        color: black !important;\r\n    }\r\n\r\n    .sub-menu-section-right:before {\r\n        content: '';\r\n        position: absolute;\r\n        left: 66%;\r\n        right: 0;\r\n        top: -8px;\r\n        margin: auto;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-color: transparent transparent rgba(0,0,0,.2) transparent;\r\n        border-width: 0px 10px 10px 10px;\r\n    }\r\n\r\n    .sub-menu-section-left:before {\r\n        content: '';\r\n        position: absolute;\r\n        left: 0;\r\n        right: 66%;\r\n        top: -8px;\r\n        margin: auto;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-color: transparent transparent rgba(0,0,0,.2) transparent;\r\n        border-width: 0px 10px 10px 10px;\r\n    }\r\n\r\n    .sub-menu-section-center:before {\r\n        content: '';\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: -8px;\r\n        margin: auto;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-color: transparent transparent rgba(0,0,0,.2) transparent;\r\n        border-width: 0px 10px 10px 10px;\r\n    }\r\n\r\n    .shortcuts-menu li .left-icon-m i {\r\n        color: white !important;\r\n        font-size: 25px !important;\r\n    }\r\n\r\n    .shortcuts-menu li:hover {\r\n        transform: inherit !important;\r\n    }\r\n\r\n    .shortcuts-menu li {\r\n        width: 100%;\r\n        max-width: 33%;\r\n        padding: 15px;\r\n        float: left;\r\n        display: flex;\r\n        transition: all .4s;\r\n    }\r\n\r\n        .shortcuts-menu li.large {\r\n            width: 100%;\r\n            max-width: 50%;\r\n            padding: 15px;\r\n            float: left;\r\n            display: flex;\r\n            transition: all .4s;\r\n        }\r\n\r\n        .shortcuts-menu li .short-item-name {\r\n        color: black !important;\r\n    }\r\n</style>\r\n\r\n\r\n<template>  \r\n        <div class=\"collapse multi-collapse show position-relative\" id=\"multiCollapse\">\r\n        <div v-bind:class=\"{'card':showBorder}\">\r\n            <ul v-bind:class=\"{'sub-menu':size ==='s','shortcuts-menu':size ==='m'}\">\r\n                <template v-for=\"menuItem in channelOptions\">                   \r\n                    <li class=\"position-relative large\" v-bind:style=\"{'width':menuItemSize+'%!important'}\" @click=\"goToAction(menuItem.name)\">\r\n                        <a class=\"short-menu-item\" v-bind:style=\"{'background':shadeColor(menuItem.color,menuItem.background),'border-color':menuItem.color}\" v-if=\"size==='s'\">\r\n                            <span class=\"icon m-2 text-white\">\r\n                                <i v-bind:class=\"menuItem.icon\" v-bind:style=\"{'color':menuItem.color}\"></i>\r\n                            </span>\r\n                            <span class=\"short-item-name\">{{menuItem.title}}</span>\r\n                        </a>\r\n                        <a class=\"short-menu-item\" v-bind:style=\"{'background':shadeColor(menuItem.color,menuItem.background),'border-color':menuItem.color}\" v-else-if=\"size==='m'\">\r\n                            <span class=\"left-icon-m m-3 text-white\" v-bind:style=\"{'background':menuItem.color}\">\r\n                                <i v-bind:class=\"menuItem.icon\"></i>\r\n                            </span>\r\n                            <span class=\"short-item-name\">{{menuItem.title}}</span>\r\n                        </a>\r\n                    </li>\r\n                </template>\r\n            </ul>\r\n        </div>\r\n    </div>  \r\n</template>\r\n\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\n\r\n\r\nexport default {\r\n    props: {            \r\n            showBorder: {\r\n                type: Boolean,\r\n                required: false\r\n            },\r\n            size: {\r\n                type: String,\r\n                required: true\r\n            },\r\n            channelOptions: {\r\n                type:Array,\r\n                required: true\r\n            }\r\n        },\r\n    data() {\r\n        return {\r\n            FacebookAppId: \"1977869235924234\",\r\n            FacebookConfigurationId: \"854925422657929\",\r\n            FacebookAuthCallBackUrl: \"https://stage.talygen.com/CallBack/FacebookAuth\",\r\n            menuItemSize:25,\r\n            subMenuClass: 'sub-menu-section-center',\r\n            isLoading: false,\r\n            TicketId: null, \r\n            tab: 'main',\r\n            showSubMenu: false,            \r\n            subMenuRow: 1,\r\n            selectedChannel: null,\r\n            subMenu: '',\r\n            subMenuOptions: [],          \r\n            isVisible:false,\r\n            emailOptions: [\r\n                    {\r\n                        name: 'setupTalygenEmail',\r\n                        title: 'Talygen Email',\r\n                        icon: 'fa fa-envelope',\r\n                        color: '#e5a30ebf',\r\n                        background:60\r\n                    },\r\n                    {\r\n                        name: 'setupCustomEmail',\r\n                        title: 'Add Custom Email',\r\n                        icon: 'fa fa-envelope',\r\n                        color: '#008de0c9',\r\n                        background: 60\r\n\r\n                    }\r\n                ],  \r\n                imapSettings: {\r\n                    sourceId:0,\r\n                    emailAccountType: 'IMAP',\r\n                    displayName: '',\r\n                    email: '',\r\n                    password: '',\r\n                    incomingMailServer: '',\r\n                    isSecureConnection: false,\r\n                    port: '',\r\n                    portIncomingChecked: false,\r\n                    outgoingServer: '',\r\n                    isOutgoingSecureConnection: false,\r\n                    outPort: '',\r\n                    portOutgoingChecked: false\r\n                },\r\n                exchangeSettings: {\r\n                    sourceId: 0,\r\n                    exchangeServerVersion: '2013',\r\n                    exchangeDomainName: '',\r\n                    userName: '',\r\n                    password: '',\r\n                    timeZone: ''\r\n                },\r\n                  \r\n        }\r\n    },   \r\n    watch:{\r\n            channelOptions:function(value){\r\n                var vm = this;\r\n                vm.setMenuItemSize();\r\n            }\r\n        },\r\n    created: async function () {\r\n        debugger;\r\n        var vm = this;            \r\n        vm.setMenuItemSize();\r\n        \r\n    },\r\n       methods: {       \r\n        setMenuItemSize: function(){\r\n            debugger;\r\n                var vm=this;\r\n                var length = vm.channelOptions.length;\r\n                if(length>4)\r\n                {\r\n                    vm.menuItemSize=25;\r\n                }\r\n                else{\r\n                        vm.menuItemSize = Math.ceil(100 / length);\r\n                        console.log(vm.menuItemSize);\r\n                }\r\n            }, \r\n        shadeColor: function(color, percent)\r\n        {\r\n            debugger; //add sub menu\r\n            color = color.length == 6 ? color : color.slice(0, -2);\r\n          var newColor = color + percent.toString(16).toUpperCase().padStart(2, '0');\r\n           return newColor;\r\n        },\r\n        goToAction: function (action) {\r\n            debugger;\r\n                var vm = this;\r\n                if (action == 'Email') {\r\n                    vm.tab = \"Email\";\r\n                }\r\n                if (action == 'setupTalygenEmail') {\r\n                    vm.$parent.setEmailType('Talygen');\r\n                }\r\n                else if (action == 'twitter') {\r\n                    vm.$parent.LoginWithTwitter();\r\n                }\r\n                 else if (action == 'facebook') {\r\n                    debugger;\r\n                    window.location.href = \"https://graph.facebook.com/oauth/authorize?client_id=\"+ vm.FacebookAppId.toString() +\"&config_id=\"+ vm.FacebookConfigurationId.toString() +\"&redirect_uri=\"+ vm.FacebookAuthCallBackUrl.toString() +\"\";                    \r\n                }\r\n                else if (action == 'setupCustomEmail') {\r\n                    vm.$parent.openTab('Email');\r\n                }\r\n                else if (action == 'imap') {\r\n                    vm.$parent.openTab('imapSettings');\r\n                }\r\n                else if (action == 'exchange') {\r\n                    vm.$parent.openTab('exchangeSettings');\r\n                }\r\n            }, \r\n            close: function () {\r\n            this.$parent.AddSubMenuPopup = false;\r\n        },\r\n       \r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddSubMenuPopup.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddSubMenuPopup.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddSubMenuPopup.vue?vue&type=template&id=432b3f26&scoped=true&\"\nimport script from \"./AddSubMenuPopup.vue?vue&type=script&lang=js&\"\nexport * from \"./AddSubMenuPopup.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AddSubMenuPopup.vue?vue&type=style&index=0&id=432b3f26&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"432b3f26\",\n  null\n  \n)\n\nexport default component.exports","<style>\r\n.shortcuts-menu li {\r\n    width: 100%;\r\n    max-width: 33%;\r\n    padding: 15px;\r\n    float: left;\r\n    display: flex;\r\n    transition: all .4s;\r\n}\r\n</style>\r\n\r\n<template>\r\n    <section>\r\n        <div class=\"modal my-popups right fade show\" data-keyboard=\"false\" data-backdrop=\"static\" id=\"manageChannelModal\"\r\n            role=\"dialog\" style=\"display:block!important\">\r\n            <div class=\"modal-dialog mw-1100\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header mheader-user\">\r\n                        <button type=\"button\" class=\"close\" @click=\"close\"><i class=\"fa fa-times\"\r\n                                aria-hidden=\"true\"></i></button>\r\n                        <h4 class=\"modal-title\" id=\"myModalLabel\">{{ title }}</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\" style=\"background:white;\">\r\n                        <ul class=\"shortcuts-menu pb-3\" id=\"divChannelTypes\" v-if=\"tab === 'main'\">\r\n                            <template v-for=\"(option, index) in channelOptions\">\r\n                                <li class=\"position-relative\" @click=\"ExpandMenu(option, index)\">\r\n                                    <a class=\"short-menu-item\"\r\n                                        v-bind:style=\"{ 'background': shadeColor(option.CHANNEL_COLOR, 70) }\">\r\n                                        <span class=\"left-icon-m m-3 text-white\"\r\n                                            v-bind:style=\"{ 'background': option.CHANNEL_COLOR }\">\r\n                                            <i v-bind:class=\"option.CHANNEL_ICON\"></i>\r\n                                        </span>\r\n                                        <span class=\"short-item-name\">{{ option.CHANNEL_DESC }}</span>\r\n                                    </a>\r\n                                </li>\r\n\r\n                                <template v-if=\"((index + 1) % 3 == 0 && Math.ceil((index + 1) / 3) == subMenuRow)\">\r\n                                    <AddSubMenuPopup v-if=\"AddSubMenuPopup\" v-bind:class=\"subMenuClass\" size=\"s\"\r\n                                        v-bind:showBorder=\"true\" v-bind:channelOptions=\"subMenuOptions\"></AddSubMenuPopup>\r\n                                </template>\r\n                            </template>\r\n                        </ul>\r\n\r\n                        <template v-if=\"tab == 'Email'\">\r\n                            <AddSubMenuPopup v-if=\"AddSubMenuPopup\" v-bind:showBorder=\"false\" size=\"m\"\r\n                                v-bind:channelOptions=\"customEmailOptions\"></AddSubMenuPopup>\r\n                        </template>\r\n\r\n                        <template v-if=\"tab == 'EmailSetUpSuccess'\">\r\n                            <div class=\"text-center\" style=\"margin:100px!important\">\r\n                                <i class=\"fa fa-4x fa-check-circle text-success\" aria-hidden=\"true\"></i>\r\n                                <h1>\r\n                                    <b>{{ $(\"ThankYou!\") }}</b>\r\n                                </h1>\r\n                                <strong>{{ $(\"SetTalygenEmailTicketChannelRequestSent\") }}</strong>\r\n                            </div>\r\n                        </template>\r\n\r\n                        <Form ref=\"AddCustomEmail\">\r\n                            <dynamic-form ref=\"imapSettings\" id=\"imapSettingTab\" :buttons=\"false\" lang=\"en\"\r\n                                v-if=\"tab == 'imapSettings'\" :schema=\"FormSchema\" v-on:OnSubmit=\"setEmailType('Custom')\">\r\n                                <template v-slot:tgslot-Password=\"{ data }\">\r\n                                    <div class=\"input-group\">\r\n                                        <input type=\"password\" class=\"form-control w-100\" v-model=\"data.fieldInfo.value\"\r\n                                            :name=\"'Password'\">\r\n                                    </div>\r\n                                </template>\r\n                            </dynamic-form>\r\n\r\n                            <dynamic-form ref=\"exchangeSettings\" id=\"exchangeSettingsTab\" :buttons=\"false\" lang=\"en\"\r\n                                v-if=\"tab == 'exchangeSettings'\" :schema=\"FormSchemaExchange\"\r\n                                v-on:OnSubmit=\"setEmailType('Custom')\">\r\n                                <template v-slot:tgslot-Password=\"{ data }\">\r\n                                    <div class=\"input-group\">\r\n                                        <input type=\"password\" class=\"form-control w-100\" v-model=\"data.fieldInfo.value\"\r\n                                            :name=\"'Password'\">\r\n                                    </div>\r\n                                </template>\r\n                            </dynamic-form>\r\n                        </Form>\r\n\r\n\r\n\r\n                        <div class=\"modal-footer fixed-bottom\">\r\n                            <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n                                <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                                    <span class=\"text-danger float-left\"\r\n                                        v-if=\"tab == 'imapSettings' || tab == 'exchangeSettings'\"><small><span\r\n                                                class=\"text-danger\">Fields marked with an asterisk (*) are\r\n                                                mandatory.</span></small></span>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6 float-right\">\r\n                                    <div class=\"input-group text-right d-block\">\r\n                                        <button type=\"button\" class=\"btn btn-secondary mr-1\" v-if=\"tab == 'Email'\"\r\n                                            @click=\"openTab('main')\"><i class=\"fa fa-angle-double-left mr-1\"></i>{{\r\n                                                $t('Back') }}</button>\r\n                                        <button type=\"button\" class=\"btn btn-danger mr-1\" v-if=\"tab == 'EmailSetUpSuccess'\"\r\n                                            @click=\"close\"><i class=\"fa fa-close mr-1\"></i>{{ $t('Close') }}</button>\r\n                                        <button type=\"button\" class=\"btn btn-success mr-1\"\r\n                                            v-if=\"tab == 'imapSettings' || tab == 'exchangeSettings'\"\r\n                                            @click=\"setEmailType('Custom')\"><i class=\"fa fa-save mr-1\"></i>{{\r\n                                                $t('SaveSettings') }}</button>\r\n                                        <button type=\"button\" class=\"btn btn-secondary mr-1\"\r\n                                            v-if=\"tab == 'imapSettings' || tab == 'exchangeSettings'\"\r\n                                            @click=\"openTab('Email')\"><i class=\"fa fa-angle-double-left mr-1\"></i>{{\r\n                                                $t('Back') }}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n\r\nimport DataServices from \"@/services/DataService\";\r\nimport AddSubMenuPopup from '../../components/Modal/AddSubMenuPopup.vue'\r\n\r\n\r\nexport default {\r\n    components: { AddSubMenuPopup },\r\n    data() {\r\n        return {\r\n            errors: {},\r\n            SourceId: 0,\r\n            AddSubMenuPopup: false,\r\n            AddChannel: null,\r\n            tabchange: null,\r\n            title: 'Setup Ticket Channel',\r\n            menuItemSize: 25,\r\n            isLoading: false,\r\n            TicketId: null,\r\n            tab: 'main',\r\n            showSubMenu: false,\r\n            subMenuClass: 'sub-menu-section-center',\r\n            subMenuRow: 1,\r\n            channelOptions: [],\r\n            selectedChannel: null,\r\n            subMenu: '',\r\n            subMenuOptions: [],\r\n            callAndMessageOptions: [],\r\n            whatsappOptions: [],\r\n            chatbotOption: [],\r\n            externalLinkOptions: [],\r\n            TimeZoneList: [],\r\n            isVisible: false,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    group_name: 'User Information',\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Emails Account Type'),\r\n                            name: \"EmailsAccountType\",\r\n                            value: \"IMAP\",\r\n                            placeholder: \"\",\r\n                            disabled: true,\r\n                            config: {\r\n                                options: [{ value: \"IMAP\", name: \"IMAP\" }],\r\n                                showAddIcon: false,\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Display Name'),\r\n                            name: \"DisplayName\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Email Address'),\r\n                            name: \"EmailAddress\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('Password'),\r\n                            name: \"Password\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true, max: 200 },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    group_name: 'Incoming Server Setting',\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Incoming Mail Server'),\r\n                            name: \"IncomingMailServer\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: this.$t('Is Secure Connection'),\r\n                            name: \"IsSecureConnection\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [\r\n                                    { name: '', value: \"true\" }\r\n                                ]\r\n                            },\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Port'),\r\n                            name: \"Port\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: this.$t('Port Incoming Checked'),\r\n                            name: \"PortIncomingChecked\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [\r\n                                    { name: '', value: \"true\" }\r\n                                ]\r\n                            },\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    group_name: 'Outgoing Server Setting',\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Outgoing Server (SMTP)'),\r\n                            name: \"OutgoingServer\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: this.$t('Is Secure Connection'),\r\n                            name: \"IsOutgoingSecureConnection\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [\r\n                                    { name: '', value: \"true\" }\r\n                                ]\r\n                            },\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Port'),\r\n                            name: \"Outgoing Port\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: this.$t('Port Outgoing Checked'),\r\n                            name: \"PortOutgoingChecked\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [\r\n                                    { name: '', value: \"true\" }\r\n                                ]\r\n                            },\r\n                            validationRules: { \"required\": false }\r\n                        },\r\n                    ],\r\n                }\r\n            ],\r\n            FormSchemaExchange: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Exchange Server Version'),\r\n                            name: \"ExchangeServerVersion\",\r\n                            value: \"2013\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{ value: \"2013\", name: \"2013\", selected: \"selected\" }],\r\n                                showAddIcon: false,\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Exchange Domain Name'),\r\n                            name: \"ExchangeDomainName\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('User Name'),\r\n                            name: \"UserName\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('Password'),\r\n                            name: \"Password\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true, max: 200 },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Time Zone'),\r\n                            name: \"TimeZone\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                    ]\r\n                },\r\n            ],\r\n            emailOptions: [\r\n                {\r\n                    name: 'setupTalygenEmail',\r\n                    title: 'Talygen Email',\r\n                    icon: 'fa fa-envelope',\r\n                    color: '#e5a30ebf',\r\n                    background: 60\r\n                },\r\n                {\r\n                    name: 'setupCustomEmail',\r\n                    title: 'Add Custom Email',\r\n                    icon: 'fa fa-envelope',\r\n                    color: '#008de0c9',\r\n                    background: 60\r\n\r\n                }\r\n            ],\r\n            customEmailOptions: [\r\n                {\r\n                    name: 'imap',\r\n                    title: 'IMAP',\r\n                    icon: 'fa fa-envelope',\r\n                    color: '#00000082',\r\n                    background: 60\r\n                },\r\n                {\r\n                    name: 'exchange',\r\n                    title: 'Exchange',\r\n                    icon: 'fa fa-envelope',\r\n                    color: '#00000082',\r\n                    background: 60\r\n                }\r\n            ],\r\n            socialMediaOptions: [{\r\n                name: 'facebook',\r\n                title: 'Connect with Facebook',\r\n                icon: 'fa fa-facebook-square',\r\n                color: '#002d7ef2',\r\n                background: 0\r\n            },\r\n            {\r\n                name: 'twitter',\r\n                title: 'Connect with Twitter',\r\n                icon: 'fa fa-twitter-square',\r\n                color: '#008de0c9',\r\n                background: 0\r\n            },\r\n            {\r\n                name: 'instagram',\r\n                title: 'Connect with Instagram',\r\n                icon: 'fa fa-instagram',\r\n                color: '#cf0949f0',\r\n                background: 0\r\n            },\r\n            {\r\n                name: 'linkedin',\r\n                title: 'Connect with Linkedin',\r\n                icon: 'fa fa-linkedin-square',\r\n                color: '#006bc7f0',\r\n                background: 0\r\n            }],\r\n            imapSettings: {\r\n                sourceId: 0,\r\n                emailAccountType: 'IMAP',\r\n                displayName: '',\r\n                email: '',\r\n                password: '',\r\n                incomingMailServer: '',\r\n                isSecureConnection: false,\r\n                port: '',\r\n                portIncomingChecked: false,\r\n                outgoingServer: '',\r\n                isOutgoingSecureConnection: false,\r\n                outPort: '',\r\n                portOutgoingChecked: false\r\n            },\r\n            exchangeSettings: {\r\n                sourceId: 0,\r\n                exchangeServerVersion: '2013',\r\n                exchangeDomainName: '',\r\n                userName: '',\r\n                password: '',\r\n                timeZone: ''\r\n            },\r\n\r\n        }\r\n    },\r\n    props: {\r\n        tabChange: {\r\n            type: String,\r\n            required: false\r\n        },\r\n        SourceId: {\r\n            type: Number,\r\n            required: false\r\n        },\r\n        AddChannel: {\r\n            type: String,\r\n            required: false\r\n        },\r\n        List: {\r\n            type: Array,\r\n            required: false\r\n        }\r\n    },\r\n    created: async function () {\r\n        debugger;\r\n        var vm = this;\r\n        vm.tabchange = this.tabChange;\r\n        vm.AddChannel = this.AddChannel;\r\n        vm.SourceId = this.SourceId;\r\n        vm.selectedChannel = {\r\n            channelName: this.List.CHANNEL_NAME,\r\n            channelId: this.List.CHANNEL_ID\r\n        };\r\n        if (vm.AddChannel == 'Addticketing') {\r\n            vm.getChannelOptions();\r\n            this.AddChannel = null;\r\n        }\r\n        if (vm.tabchange != null && vm.AddChannel == 'Edit') {\r\n            if (vm.tabchange == 'imapSettings') {\r\n                vm.openTab('imapSettings');\r\n            }\r\n            else {\r\n                vm.openTab('exchangeSettings');\r\n            }\r\n            this.setMappingList(this.List);\r\n            this.tabchange = null;\r\n            this.AddChannel = null;\r\n        }\r\n    },\r\n    methods: {\r\n        GetTimeZoneList: function () {\r\n            debugger;\r\n            var vm = this;\r\n            DataServices.GetTimeZoneListing().then(function (response) {\r\n                debugger;\r\n                if (response.data.result.length > 0) {\r\n                    vm.TimeZoneList = response.data.result;\r\n                    debugger\r\n                    vm.TimeZoneList.forEach((item, index) => {\r\n                        (vm.FormSchemaExchange)[2].Data[0].config.options.push({\r\n                            value: item.VALUE,\r\n                            name: item.TEXT\r\n                        });                        \r\n                        vm.$refs.exchangeSettings.UpdateKeyValue();\r\n                    })\r\n                }\r\n            });\r\n        },\r\n        setMappingList: function (data) {\r\n            debugger;\r\n            var vm = this;\r\n            if (data.TYPE == 'IMAP') {               \r\n                    this.FormSchema[0].Data[1].value = data.USERNAME,\r\n                    this.FormSchema[1].Data[0].value = data.EMAIL,\r\n                    this.FormSchema[1].Data[1].value = data.PASSWORD,\r\n                    this.FormSchema[2].Data[0].value = data.IP,\r\n                    this.FormSchema[3].Data[0].value = data.PORT,\r\n                    this.FormSchema[2].Data[1].value = data.IS_INCOMING_PORT_CHECKED ? true : false,\r\n                    this.FormSchema[3].Data[1].value = data.IS_INCOMING_CONNECTION_SECURE ? true : false,\r\n                    this.FormSchema[4].Data[0].value = data.OUTGOING_IP,\r\n                    this.FormSchema[5].Data[0].value = data.OUTGOING_PORT,\r\n                    this.FormSchema[4].Data[1].value = data.IS_OUTGOING_PORT_CHECKED ? true : false,\r\n                    this.FormSchema[5].Data[1].value = data.IS_OUTGOING_CONNECTION_SECURE ? true : false\r\n            }\r\n            else {\r\n                    this.FormSchemaExchange[0].Data[0].value = data.EXCHANGE_SERVER_VERSION,\r\n                    this.FormSchemaExchange[0].Data[1].value = data.DOMAIN,\r\n                    this.FormSchemaExchange[1].Data[0].value = data.USERNAME,\r\n                    this.FormSchemaExchange[1].Data[1].value = data.PASSWORD,\r\n                    this.FormSchemaExchange[2].Data[0].value = data.TIMEZONE_ID\r\n            }\r\n        },\r\n        LoginWithTwitter: function () {\r\n            debugger;\r\n            DataServices.GetTwitterAuth().then(function (response) {\r\n                debugger;\r\n                window.location = response.data;\r\n            });\r\n        },\r\n        shadeColor: function (color, percent) {\r\n            debugger // add channel config\r\n            color = color.length == 6 ? color : color.slice(0, -2);\r\n            var newColor = color + percent.toString(16).toUpperCase().padStart(2, '0');\r\n            return newColor;\r\n        },\r\n        openTab: function (tab) {\r\n            debugger;\r\n            var vm = this;\r\n            if (tab === 'Email') {\r\n                vm.title = 'Email Setup';\r\n            }\r\n            else if (tab === 'main') {\r\n                vm.title = 'Setup Ticket Channel';\r\n                vm.selectedChannel = null;\r\n            }\r\n            else if (tab === 'EmailSetUpSuccess') {\r\n                vm.selectedChannel = null;\r\n            }\r\n            else if (tab === 'imapSettings') {\r\n                vm.title = 'IMAP Settings';\r\n            }\r\n            else if (tab === 'exchangeSettings') {\r\n                vm.title = 'Exchange Settings';\r\n                vm.GetTimeZoneList();\r\n            }\r\n            vm.tab = tab;\r\n            vm.AddSubMenuPopup = true;\r\n        },\r\n\r\n        ExpandMenu: function (tab, index) {\r\n            debugger;\r\n            var vm = this;\r\n            vm.showSubMenu = false;\r\n            var tabNum = Math.ceil((index + 1) / 3);\r\n            vm.subMenuRow = tabNum;\r\n            vm.subMenuOptions = [];\r\n            vm.selectedChannel = {\r\n                channelName: tab.CHANNEL_NAME,\r\n                channelId: tab.CHANNEL_ID\r\n            };\r\n\r\n            if (tab.CHANNEL_NAME === 'Email') {\r\n                vm.subMenuOptions = vm.emailOptions;\r\n            }\r\n            else if (tab.CHANNEL_NAME === 'SocialMedia') {\r\n                vm.subMenuOptions = vm.socialMediaOptions;\r\n            }\r\n            else if (tab.CHANNEL_NAME === 'ExternalLink') {\r\n                vm.subMenuOptions = vm.externalLinkOptions;\r\n            }\r\n            else if (tab.CHANNEL_NAME === 'Chatbot') {\r\n                vm.subMenuOptions = vm.chatbotOption;\r\n            }\r\n            else if (tab.CHANNEL_NAME === 'WhatsApp') {\r\n                vm.subMenuOptions = vm.whatsappOptions;\r\n            }\r\n            else if (tab.CHANNEL_NAME === 'CallMessage') {\r\n                vm.subMenuOptions = vm.callAndMessageOptions;\r\n            }\r\n\r\n            if (vm.subMenu == '' || vm.subMenu != tab.CHANNEL_NAME) {\r\n                vm.subMenuClass = 'sub-menu-section-right';\r\n                if ((index + 1) % 3 === 2) {\r\n                    vm.subMenuClass = 'sub-menu-section-center';\r\n                }\r\n                else if ((index + 1) % 3 === 1) {\r\n                    vm.subMenuClass = 'sub-menu-section-left';\r\n                }\r\n                if (vm.subMenuOptions.length > 0) {\r\n                    vm.AddSubMenuPopup = true;\r\n                }\r\n                vm.subMenu = tab.CHANNEL_NAME;\r\n            }\r\n            else {\r\n                vm.AddSubMenuPopup = false;\r\n                vm.subMenu = '';\r\n                vm.selectedChannel = null;\r\n            }\r\n        },\r\n        getChannelOptions: function () {\r\n            //debugger\r\n            var vm = this;\r\n            DataServices.FetchTicketingChannelOptionList().then(function (response) {\r\n                debugger;\r\n                if (response.data.result.data != null) {\r\n                    if (response.data.result.data.length > 0) {\r\n                        vm.channelOptions = response.data.result.data;\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        setEmailType: function (source) {\r\n            var msg = \"\";\r\n            var vm = this;\r\n            if (source === 'Talygen') {\r\n                vm.confirmR(vm.$t(\"Are you sure you want to set Talygen email as ticket channel?\"), true, vm.$t(\"Delete\"), function () {\r\n                    let data = {\r\n                        CHANNEL_NAME: vm.selectedChannel.channelName,\r\n                        CHANNEL_SOURCE_TYPE_NAME: source\r\n                    };\r\n                    var jsonData = JSON.stringify(data);\r\n\r\n                    DataServices.SubmitTicketingChannelConfiguration(jsonData).then(function (response) {\r\n\r\n                        if (response.data.result === 1) {\r\n                            vm.openTab('EmailSetUpSuccess');\r\n                            vm.getChannelOptions();\r\n                            vm.ShowAlert(vm.$t('EmpShareSentSuccessfully'), \"success\", true, vm.$t('Alert'));\r\n                        }\r\n                        else if (response.data.result === 'ALREADY EXISTS') {\r\n                            vm.ShowAlert(vm.$t('RequestAlreadySent'), \"success\", true, vm.$t('Alert'));\r\n                        }\r\n                    });\r\n\r\n                },\r\n                    function (response) {\r\n\r\n                    });\r\n            }\r\n            else {\r\n                var sourceData = {};\r\n                var isDataValidated = false;\r\n                if (source === 'Custom') {\r\n                    if (vm.tab === 'imapSettings') {\r\n                        sourceData = {\r\n                            SOURCE_ID: vm.SourceId,\r\n                            USERNAME: this.FormSchema[0].Data[1].value,\r\n                            EMAIL: this.FormSchema[1].Data[0].value,\r\n                            PASSWORD: this.FormSchema[1].Data[1].value,\r\n                            IP: this.FormSchema[2].Data[0].value,\r\n                            PORT: this.FormSchema[3].Data[0].value,\r\n                            IS_INCOMING_PORT_CHECKED: this.FormSchema[2].Data[1].value == null ? null : this.FormSchema[2].Data[1].value[0],\r\n                            IS_INCOMING_CONNECTION_SECURE: this.FormSchema[3].Data[1].value == null ? null : this.FormSchema[3].Data[1].value[0],\r\n                            OUTGOING_IP: this.FormSchema[4].Data[0].value,\r\n                            OUTGOING_PORT: this.FormSchema[5].Data[0].value,\r\n                            IS_OUTGOING_PORT_CHECKED: this.FormSchema[4].Data[1].value == null ? null : this.FormSchema[4].Data[1].value[0],\r\n                            IS_OUTGOING_CONNECTION_SECURE: this.FormSchema[5].Data[1].value == null ? null : this.FormSchema[5].Data[1].value[0],\r\n                            TYPE: 'IMAP'\r\n                        };\r\n                    }\r\n                    else {\r\n                        sourceData = {\r\n                            SOURCE_ID: vm.SourceId,\r\n                            EXCHANGE_SERVER_VERSION: this.FormSchemaExchange[0].Data[0].value,\r\n                            DOMAIN: this.FormSchemaExchange[0].Data[1].value,\r\n                            USERNAME: this.FormSchemaExchange[1].Data[0].value,\r\n                            PASSWORD: this.FormSchemaExchange[1].Data[1].value,\r\n                            TIMEZONE_ID: this.FormSchemaExchange[2].Data[0].value,\r\n                            TYPE: 'EXCHANGE'\r\n                        };\r\n                    }\r\n                    var form = vm.tab === 'imapSettings' ? this.$refs.imapSettings : this.$refs.exchangeSettings;\r\n\r\n                    vm.$refs.AddCustomEmail.validate().then(valid => {\r\n                        let data = {\r\n                            CHANNEL_NAME: vm.selectedChannel.channelName,\r\n                            CHANNEL_SOURCE_TYPE_NAME: source,\r\n                            CHANNEL_SOURCE_DATA: sourceData\r\n                        };\r\n\r\n\r\n                        var jsonData = JSON.stringify(data);\r\n                        if (valid) {\r\n                            DataServices.SubmitTicketingChannelConfiguration(jsonData).then(function (response) {\r\n                                if (response.data.status === 'Success') {\r\n                                    vm.ShowAlert(vm.$t(\"SavedSuccessfully\", [vm.$t(vm.tab)]), \"success\", true, vm.$t(\"Alert\"));\r\n                                    vm.close();\r\n                                    vm.getChannelOptions();\r\n                                    vm.$parent.FetchData();\r\n                                }\r\n                                if (response.data == \"INVALID_CREDENTIAL\") {\r\n                                    vm.ShowAlert(vm.$t(\"PleaseCheckTheCredentials\", [vm.$t(vm.tab)]), \"failure\", true, vm.$t(\"Alert\"));\r\n                                }\r\n                                if (response.data == \"CHECKBOX_UNCHECKED\") {\r\n                                    vm.ShowAlert(vm.$t(\"CheckboxPending\", [vm.$t(vm.tab)]), \"failure\", true, vm.$t(\"Alert\"));\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t(\"FillTheRequiredFields\", [vm.$t(vm.tab)]), \"failure\", true, vm.$t(\"Alert\"));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        close: function () {\r\n            var vm = this;\r\n            vm.SourceId = 0;\r\n            this.$parent.AddChannelConfigurationPopup = false;          \r\n        },\r\n\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddChannelConfigurationPopup.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddChannelConfigurationPopup.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddChannelConfigurationPopup.vue?vue&type=template&id=d16a7224&\"\nimport script from \"./AddChannelConfigurationPopup.vue?vue&type=script&lang=js&\"\nexport * from \"./AddChannelConfigurationPopup.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AddChannelConfigurationPopup.vue?vue&type=style&index=0&id=d16a7224&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <section>\r\n        <tg-list v-show=\"IsGroupView\" :IsShowAction=\"true\" ModuleName=\"Ticketing\" SubModuleCode=\"FSM_Ticketing_Setup_Source\"\r\n            IdentityColumn=\"SOURCE_ID\" :HeaderText=\"$t('Channel Configuration Lis....')\" :LegendArray=\"[]\"\r\n            :RenderRowActionMethod=\"renderActions\" :widgets=\"[]\" :listType=\"['List']\" :ListData=\"channelConfigList\"\r\n            :HeaderData=\"Headers\" :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecords\"\r\n            :SearchFields=\"leftSearchFields\" :ListDataCallBackFunction=\"FetchData\" :showCheckBox=\"true\" :SortExp=\"SortExp\"\r\n            :SortBy=\"SortBy\" :NorecordfoundText=\"$t('NoRecordfound')\" v-on:LeftsearchButtonClick=\"leftCommonSearch\"\r\n            v-on:PagerButtonClick=\"pagerMethod\" v-on:HeaderButtonClick=\"commonHeaderButtonClick\"\r\n            v-on:ActionButtonClick=\"actionButtonClick\">\r\n            <template v-slot:slotdata=\"{ data }\">               \r\n                <template v-if=\"data.column.COLUMN_NAME == 'STATUS_ID'\">\r\n                    <listing-status :isfor=\"'ChannelConfiguration'\"\r\n                        v-if=\"isCRMShowStausDrop(data.row.STATUS_ID, 'Ticketing')\" ref=\"updatestatus\"\r\n                        v-bind:dataid=\"data.row.SOURCE_ID\" data-controller=\"Crm\" v-bind:statuslist=\"StatusListForListing\"\r\n                        v-bind:item=\"data.STATUS_ID\" data-action=\"index\"\r\n                        v-bind:dataselected=\"data.row.STATUS_ID == 1001 ? 'Active' : 'Inactive'\"\r\n                        v-bind:callbackfunction=\"FetchData\" v-bind:isselectedvaluestring=\"true\">\r\n                    </listing-status>\r\n                    <a class=\"inactive-disabled\" v-if=\"!isCRMShowStausDrop(data.row.STATUS_ID, 'Ticketing')\">\r\n                        <span v-bind:class=\"getStatusClass(data.row.STATUS_ID, 'STATUS_ID')\">\r\n                            {{ data.row[data.column.COLUMN_NAME] }}\r\n                        </span>\r\n                    </a>\r\n                </template>\r\n            </template>\r\n        </tg-list>\r\n        <AddChannelConfigurationPopup v-if=\"AddChannelConfigurationPopup\" ref=\"ChannelConfiguration\" :SourceId=\"SourceId\" :AddChannel=\"AddChannel\" :List=\"SettingList\" :tabChange=\"tabChange\"></AddChannelConfigurationPopup>\r\n    </section>    \r\n</template>\r\n\r\n<script>\r\nimport Schema from \"@/views/ChannelConfiguration/ChannelConfigurationSchema\";\r\nimport DataServices from \"@/services/DataService\";\r\nimport AddChannelConfigurationPopup from '../../components/Modal/AddChannelConfigurationPopup.vue'\r\n\r\nexport default {\r\n    components:{AddChannelConfigurationPopup},\r\n    data() {\r\n        return {\r\n            tabChange:null,\r\n            channelConfigList: [],\r\n            SettingList:[],\r\n            AddChannelConfigurationPopup:false,\r\n            showChannelModal: false,    \r\n            mapStatusId: 0,\r\n            SourceId:0,\r\n            AddChannel:null,\r\n            TotalRecords: 0,\r\n            PageSize: 10,\r\n            PageNumber: 1,\r\n            CurrentPage: 1,\r\n            SortBy: '',\r\n            SortExp: '',\r\n            user_type: null,\r\n            user_id: null,\r\n            companyId: null,\r\n            listActions: Schema.listActions,\r\n            Headers: [{\r\n                \"COLUMN_NAME\": \"ACCOUNT_NAME\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Account Name\",\r\n                \"DISPLAY_ORDER\": 1\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"CHANNEL_NAME\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Channel Name\",\r\n                \"DISPLAY_ORDER\": 2\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"CREATED_BY\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Created By\",\r\n                \"DISPLAY_ORDER\": 3\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"STATUS_ID\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Status\",\r\n                \"DISPLAY_ORDER\": 4\r\n            }    \r\n            ],\r\n            listheaderbuttons: Schema.buttons,\r\n            leftSearchFields: Schema.leftsearchSchema,\r\n            IsGroupView: true,\r\n            noRecord: false,\r\n            StatusListForListing: [{ STATUS: 'Active', STATUS_ID: 1001, STATUS_COLOR: \"#ffffff\", STATUS_BG_COLOR: \"#28a745\" },\r\n            { STATUS: 'Inactive', STATUS_ID: 1002, STATUS_COLOR: \"#ffffff\", STATUS_BG_COLOR: \"#d72435\" }],\r\n        }\r\n    },\r\n    created: async function () {        \r\n        var vm = this;\r\n        this.user_id = this.GetUserInfo.ID\r\n        this.user_type = this.GetUserInfo.UserType\r\n        this.companyId = this.GetUserInfo.CompanyId;\r\n        await this.FetchData();\r\n        await Schema.bindleftCommonSearchdropdown(vm, \"FSM\", \"FSM_USERS\");\r\n    },\r\n    methods: {\r\n        paramsToObject(entries) {\r\n            const result = {}\r\n            for (const [key, value] of entries) { // each 'entry' is a [key, value] tupple\r\n                result[key] = value;\r\n            }\r\n            return result;\r\n        },\r\n        leftCommonSearch: function (value) {            \r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchCondition;\r\n            }\r\n            else {\r\n                this.searchCondition = \"\";\r\n            }\r\n            this.FetchData();\r\n        },\r\n        renderActions: function (row) {\r\n            var self = this;\r\n            let rtnActionArray = [];\r\n            self.listActions.forEach(actionItem => {\r\n                let action = { ...actionItem };\r\n                switch (action.title) {\r\n                    default: {\r\n                        action.isVisible = true;\r\n                    }\r\n                }\r\n                rtnActionArray.push(action);\r\n            });\r\n            return rtnActionArray;\r\n        },\r\n        actionButtonClick: function (callbackfunction, item, index, event) {            \r\n            switch (callbackfunction) {\r\n                case 'commonDeleteData':\r\n                    this.commonDelete(item.SOURCE_ID);\r\n                    break;\r\n                case 'editChannelConfig':\r\n                    this.editChannelConfig(item.SOURCE_ID, item.CHANNEL_NAME);\r\n                    break;\r\n            }\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            switch (event.callbackfunction) {\r\n                case \"commonDeleteData\":\r\n                    this.commonDeleteData();\r\n                    break;\r\n                case \"openaddAddchannel\":\r\n                    this.openAddchannelConfiguration(event.id);\r\n                    break;\r\n            }\r\n        },\r\n        openAddchannelConfiguration: function (id) {\r\n                if(id == undefined)\r\n                    id = 0;                \r\n                this.AddChannel = id;\r\n                this.SourceId = 0;\r\n                this.AddChannelConfigurationPopup = !this.AddChannelConfigurationPopup;\r\n            },\r\n            editChannelConfig: function (SOURCE_ID, CHANNEL_NAME) { \r\n                var vm = this;               \r\n                if(CHANNEL_NAME==='Email'){                  \r\n                    var params=`postString=${SOURCE_ID}`\r\n                    DataServices.GetTicketingChannelSourceById(params).then(response => {\r\n                        if (response.data.result.data != null) {\r\n                            if (response.data.result.data.length > 0) {                                \r\n                                var data = response.data.result.data[0];                                \r\n                                if (data.TYPE.toUpperCase() === 'IMAP') {\r\n                                    vm.tabChange='imapSettings';\r\n                                    vm.AddChannel = 'Edit';\r\n                                    vm.SettingList = data;\r\n                                    vm.SourceId = SOURCE_ID;\r\n                                    vm.AddChannelConfigurationPopup=true;                                                                                                \r\n                                }\r\n                                else if (data.TYPE.toUpperCase() === 'EXCHANGE') {\r\n                                    vm.tabChange='exchangeSettings';\r\n                                    vm.AddChannel = 'Edit';\r\n                                    vm.SettingList = data;\r\n                                    vm.SourceId = SOURCE_ID;\r\n                                    vm.AddChannelConfigurationPopup=true;                                    \r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n        pagerMethod: function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            this.FetchData();\r\n        },\r\n        FetchData: async function () {            \r\n            var vueObj = this;\r\n            var srchCondition = \"\";\r\n            const NameRegex = /LIKE '%(.*?)%'/;\r\n            const valuesInParenthesesRegex = /'([^']+)'/;\r\n            var url = `pageSize=${vueObj.PageSize}&pageNum=${vueObj.PageNumber}`;\r\n\r\n            if (!this.isBlank(this.searchCondition)) {\r\n                srchCondition = srchCondition + this.searchCondition;\r\n            }\r\n\r\n            if (!this.isBlank(srchCondition)) {\r\n                if (srchCondition.includes(\"account_name\")) {\r\n                    var accountNameMatch = srchCondition.match(NameRegex);\r\n                    url = url + \"&accountName=\" + accountNameMatch[1];\r\n                }\r\n                else if (srchCondition.includes(\"channel_name\")) {\r\n                    var channelNameMatch = srchCondition.match(NameRegex);\r\n                    url = url + \"&channelName=\" + channelNameMatch[1];\r\n                }\r\n                else if (srchCondition.includes(\"created_by\")) {\r\n                    var created_by_match = srchCondition.match(valuesInParenthesesRegex);\r\n                    url = url + \"&createdBy=\" + created_by_match[1];\r\n                }\r\n                else if (srchCondition.includes(\"Status\")) {\r\n                    var status_Match = srchCondition.match(valuesInParenthesesRegex);\r\n                    url = url + \"&statusId=\" + status_Match[1];\r\n                }\r\n            }\r\n            await DataServices.FetchFSMTicketingSetupSources(url).then(function (response) {                \r\n                if (response.data != \"\" && response.data != null) {\r\n                    vueObj.Headers.forEach((column) => {\r\n                        column.settings = null;\r\n                        if (column.COLUMN_NAME == \"STATUS_ID\") {\r\n                            column.settings = {\r\n                                isInSlot: true,\r\n                            };\r\n                        }\r\n                        if (column.COLUMN_NAME == 'Action') {\r\n                            column.settings = {\r\n                                isInSlot: true\r\n                            }\r\n                        }\r\n                    });\r\n                    if (response.data.result.DATA.length > 0) {                        \r\n                        vueObj.channelConfigList = response.data.result.DATA;   \r\n                        vueObj.TotalRecords = response.data.result.DATA.length;\r\n                        vueObj.CurrentPage = vueObj.PageNumber;\r\n                        vueObj.listheaderbuttons[1].isdisabled=true;\r\n                        vueObj.noRecord = false;\r\n                    }\r\n                    else {\r\n                        vueObj.channelConfigList = response.data.result.DATA; \r\n                        vueObj.noRecord = true;\r\n                        vueObj.TotalRecords = 0\r\n                    }\r\n                }\r\n                else {\r\n                    vueObj.noRecord = true;\r\n                    vueObj.Headers = [];\r\n                    vueObj.TotalRecords = 0\r\n                }                \r\n                setTimeout(function () { vueObj.ResponsiveDataTable('tablelistingdata') }, 500);\r\n            })\r\n        },       \r\n        getStatusClass: function (status) {\r\n            var returnClass = '';\r\n            switch (status) {\r\n                case 'Active':\r\n                    returnClass = 'px-2 text-center bg-success text-white d-block';\r\n                    break;\r\n                case 'Inactive':\r\n                    returnClass = 'px-2 text-center bg-danger text-white d-block';\r\n                    break;\r\n                default:\r\n                    returnClass = '';\r\n            }\r\n            return returnClass;\r\n        },\r\n        commonDeleteData: function (event) {            \r\n            var vm = this;\r\n            var val = \"\";\r\n            $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                if (val.length > 0)\r\n                    val += ',';\r\n                val += $(this).val();\r\n            });\r\n            if (val.length > 0) {\r\n                vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Resource\")), function () {                  \r\n                    var postJSON = {\r\n                        ids: val,\r\n                        companyId: vm.companyId,\r\n                        userId: vm.user_id,\r\n                        moduleName: \"FSM\",\r\n                        refCode: \"DELETE_FSM_TICKET_SOURCE\"\r\n\r\n                    };\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    DataServices.deleteActivityData(objectPostString).then(response => {                       \r\n                        var box = \"\";\r\n                        if (response.data[0].Status == \"Success\") {\r\n                            vueObj.listheaderbuttons[1].isdisabled=true;\r\n                            vm.FetchData();\r\n                            box = vm.ShowAlert(vm.$t('DeletedSuccess', [vm.$t('Record')]), \"Success\", true, vm.$t('Alert'));\r\n                        }\r\n                        else {\r\n                            box = vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Record')]), \"failure\", true, vm.$t('Alert'));\r\n                        }\r\n                        setTimeout(function () {\r\n                            box.modal('hide');\r\n                        }, 2000);\r\n\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                alert(vm.$t(\"Selectanyrecordtodelete\"));\r\n            }\r\n        },\r\n        commonDelete: function (item) {           \r\n            var vm = this;\r\n            if (item > 0) {\r\n                vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Resource\")), function () {                   \r\n                    var postJSON = {\r\n                        ids: item,\r\n                        companyId: vm.companyId,\r\n                        userId: vm.user_id,\r\n                        moduleName: \"FSM\",\r\n                        refCode: \"DELETE_FSM_TICKET_SOURCE\"\r\n\r\n                    };\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    DataServices.deleteActivityData(objectPostString).then(response => {                        \r\n                        var box = \"\";\r\n                        if (response.data[0].Status == \"Success\") {\r\n                            $(\"[id^='chkAll']\").prop(\"checked\", false).removeAttr('checked');\r\n                            $(\"[id^='DeleteItem']\").removeClass('enable').addClass('disabled');\r\n                            $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                            vm.FetchData();\r\n                            box = vm.ShowAlert(vm.$t('DeletedSuccess', [vm.$t('Record')]), \"Success\", true, vm.$t('Alert'));\r\n                        }\r\n                        else {\r\n                            box = vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Record')]), \"failure\", true, vm.$t('Alert'));\r\n                        }\r\n                        setTimeout(function () {\r\n                            box.modal('hide');\r\n                        }, 2000);\r\n\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                alert(vm.$t(\"Selectanyrecordtodelete\"));\r\n            }\r\n        },\r\n        UpdateStatus: async function (status) {  \r\n            var vm = this;\r\n            if (status == 'Active') {\r\n                status = 1001\r\n            }\r\n            else {\r\n                status = 1002\r\n            }\r\n            var val = \"\";\r\n            $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                if (val.length > 0)\r\n                    val += ',';\r\n                val += $(this).val();\r\n            });\r\n            if (val.length > 0) {\r\n                vm.confirmR(vm.$t(\"Confirm\"), true, (vm.$t(\"update\") + \"  \" + vm.$t(\"status\")), function () {\r\n                    var url = `id=${val}&status_id=${status}&isFor=${'group'}`;\r\n                    DataServices.updatestatus(url).then(response => {                        \r\n                        if (response.data == true) {\r\n                            $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                            vm.FetchData();\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChannelConfigurationlisting.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChannelConfigurationlisting.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChannelConfigurationlisting.vue?vue&type=template&id=286ab738&\"\nimport script from \"./ChannelConfigurationlisting.vue?vue&type=script&lang=js&\"\nexport * from \"./ChannelConfigurationlisting.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}