{"version":3,"sources":["webpack:///./src/views/crew/CrewListing.vue","webpack:///./src/views/crew/crewSchema.js","webpack:///./src/components/Modal/AddCrewPopup.vue","webpack:///src/components/Modal/AddCrewPopup.vue","webpack:///./src/components/Modal/AddCrewPopup.vue?40ea","webpack:///./src/components/Modal/AddCrewPopup.vue?da13","webpack:///src/views/crew/CrewListing.vue","webpack:///./src/views/crew/CrewListing.vue?e667","webpack:///./src/views/crew/CrewListing.vue?65f0"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","IscrewView","expression","attrs","renderActions","$t","CrewList","Headers","listheaderbuttons","TotalRecords","leftSearchFields","FetchRecords","SortExp","SortBy","on","actionButtonClick","leftCommonSearch","pagerMethod","commonHeaderButtonClick","sortdata","scopedSlots","_u","key","fn","data","column","COLUMN_NAME","staticClass","row","STATUS_NAME","class","getStatusClassList","_v","_s","_e","AddCrewPopup","ticketSourceId","staticRenderFns","buttons","title","iconClass","callbackfunction","additionalClass","isdisabled","isvisible","checkPrivilege","id","isEnabledOnSelectedRow","leftsearchSchema","fieldName","fieldType","fieldIcon","fieldSearchConditionName","paramName","isSearch","listOptions","listActions","href","icon","additionalSpan","isLoading","Close","domProps","FormSchema","onSubmit","props","CrewId","type","Number","required","layoutType","Data","astype","label","placeholder","validationRules","max","config","options","text","onClick","created","FetchData","methods","vueObj","url","DataServices","FetchDataByCrewId","then","response","status","result","crew_name","crew_size","status_id","description","$parent","formfields","val","vm","jsonobj","Id","CrewName","CrewSize","FSMTerritoryListId","Desc","Description","Status","params","JSON","stringify","SaveTicketingCrew","rslt","parse","MSG","ShowAlert","component","components","showSetupTickectSource","showExpanded","StatusMappingList","noRecords","PageSize","PageNumber","CurrentPage","TotalPages","SearchCondition","GroupStart","GroupEnd","Schema","user_type","user_id","companyId","search","GetUserInfo","ID","UserType","CompanyId","paramsToObject","entries","searchParams","URLSearchParams","searchConditionJson","hasOwnProperty","isPaged","searchCondition","item","index","event","openPopupForSetupCrewList","crew_id","CrewDeatail","self","rtnActionArray","forEach","actionItem","action","isVisible","push","isBlank","GetFsmCrewList","settings","isInSlot","isForTag","Math","ceil","length","TOTALRECORDS","setTimeout","ResponsiveDataTable","commonDeleteData","sortBy","sortExp","undefined","$","not","each","confirmR","postJSON","ids","userId","moduleName","refCode","objectPostString","deleteActivityData","box","modal","alert","returnClass","ths","$router"],"mappings":"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","file":"js/chunk-2d0cc92e.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('tg-list',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.IscrewView),expression:\"IscrewView\"}],attrs:{\"IsShowAction\":true,\"ModuleName\":\"Ticketing\",\"SubModuleCode\":\"FSM_CREW\",\"LegendArray\":[],\"RenderRowActionMethod\":_vm.renderActions,\"widgets\":[],\"IdentityColumn\":\"crew_id\",\"HeaderText\":_vm.$t('Crew'),\"listType\":['List'],\"ListData\":_vm.CrewList,\"HeaderData\":_vm.Headers,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"SearchFields\":_vm.leftSearchFields,\"ListDataCallBackFunction\":_vm.FetchRecords,\"showCheckBox\":true,\"SortExp\":_vm.SortExp,\"SortBy\":_vm.SortBy,\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"ActionButtonClick\":_vm.actionButtonClick,\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"SortdataButtonClick\":_vm.sortdata},scopedSlots:_vm._u([{key:\"slotdata\",fn:function({ data }){return [(data.column.COLUMN_NAME == 'STATUS_NAME')?[_c('a',{staticClass:\"active\"},[(data.row.STATUS_NAME == 'Active')?_c('span',{class:_vm.getStatusClassList(data.row.STATUS_NAME, 'STATUS_NAME')},[_vm._v(\" \"+_vm._s(data.row[data.column.COLUMN_NAME])+\" \")]):_vm._e(),(data.row.STATUS_NAME == 'Inactive')?_c('span',{class:_vm.getStatusClassList(data.row.STATUS_NAME, 'STATUS_NAME')},[_vm._v(\" \"+_vm._s(_vm.$t('Inactive'))+\" \")]):_vm._e()])]:_vm._e()]}}])}),(_vm.AddCrewPopup)?_c('AddCrewPopup',{attrs:{\"CrewId\":_vm.ticketSourceId}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","let buttons =\r\n    [\r\n    {\r\n        title: 'Add',\r\n        iconClass: 'fa fa-plus',        \r\n        callbackfunction: 'openaddWorkType',\r\n        additionalClass: '',\r\n        isdisabled: false,\r\n        isvisible: true,\r\n        checkPrivilege: true,\r\n        id:'Addticketing',\r\n         \r\n    },\r\n\r\n    \r\n    {\r\n        title: 'Delete',\r\n        iconClass: 'fa-trash-o',\r\n        callbackfunction: 'commonDeleteData',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: false,\r\n        id:'DeleteMultiple',\r\n        isEnabledOnSelectedRow: true\r\n    }, \r\n   \r\n    ];\r\n\r\n    let leftsearchSchema = [\r\n        {\r\n            fieldName: 'Crew Name',\r\n            fieldType: \"text\",\r\n            fieldIcon: \"fa fa-map-marker\",\r\n            fieldSearchConditionName: ['search'],\r\n            paramName:\"search\",\r\n            isSearch: false,\r\n            value: \"\",\r\n            listOptions: []\r\n        \r\n        },\r\n    ]\r\n    let listActions=[  \r\n        {\r\n            title:'Edit',   \r\n            href: 'javascript:void(0)',         \r\n            icon: 'fa fa-pencil action-icon',\r\n            callbackfunction:'Edit',\r\n            additionalSpan:''\r\n        }, \r\n        {\r\n            title:'View',\r\n            href: 'javascript:void(0)',\r\n            callbackfunction:'ClickOnView',\r\n            icon: 'fa fa-eye action-icon',\r\n            additionalSpan:''\r\n        }\r\n    ]; \r\n\r\n    export default { buttons, leftsearchSchema,listActions};","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full d-flex\"},[_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('ManageServiceCrew')))]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('span',{staticClass:\"user-guide\"},[_c('a',{staticClass:\"ancuserguide text-white\",attrs:{\"data-toggle\":\"collapse\",\"href\":\"#collapseReplyUG\",\"role\":\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseExample\"}},[_c('em',{staticClass:\"fa fa-files-o pr-2\"}),_vm._v(_vm._s(_vm.$t('GuideForUser')))]),_c('div',{staticClass:\"divancuserguide collapse overflow-auto\",attrs:{\"id\":\"collapseReplyUG\"}},[_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarreplyuserguideMangeView\"}},[_c('div',{staticClass:\"con\",domProps:{\"innerHTML\":_vm._s(_vm.$t('UgAddEditFSMCrew'))}})])])])]),_c('div',{staticClass:\"modal-body\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}})],1)])])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"my-popups\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"modal d-block\">\r\n            <div class=\"modal-dialog modal-dialog-centered\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header theme-primary partition-full d-flex\">\r\n                        <h4 class=\"modal-title\">{{ $t('ManageServiceCrew') }}</h4>\r\n                        <button type=\"button\" class=\"close\" v-on:click=\"Close\">\r\n                            <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                        </button>\r\n                        <span class=\"user-guide\">\r\n                            <a class=\"ancuserguide text-white\" data-toggle=\"collapse\" href=\"#collapseReplyUG\" role=\"button\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseExample\"> <em\r\n                                    class=\"fa fa-files-o pr-2\"></em>{{ $t('GuideForUser') }}</a>\r\n                            <div id=\"collapseReplyUG\" class=\"divancuserguide collapse overflow-auto\">\r\n                                <div id=\"scrollbarreplyuserguideMangeView\" class=\"custom-scrollbar-js\">\r\n                                    <div class=\"con\" v-html=\"$t('UgAddEditFSMCrew')\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div class=\"modal-body\">\r\n                        <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\"\r\n                            v-on:OnSubmit=\"onSubmit\"></dynamic-form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nexport default {\r\n    props: {\r\n        CrewId: {\r\n            type: Number,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('CrewName'),\r\n                            name: \"CrewName\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('EnterCrewName'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"NumericField\",\r\n                            label: this.$t('CrewSize'),\r\n                            name: \"CrewSize\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('EnterCrewSize'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Status'),\r\n                            name: \"Status\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [{ value: \"1001\", name: \"Active\" }, { value: \"1002\", name: \"InActive\" }]\r\n                            },\r\n                            placeholder: this.$t('SelectStatus'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: this.$t('description'),\r\n                            name: \"Description\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('EnterDescription'),\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Close\",\r\n                    onClick: this.Close\r\n                }\r\n            ],\r\n        }\r\n    },\r\n    created: async function () {\r\n        this.FetchData();\r\n    },\r\n    methods: {\r\n        FetchData: function () {\r\n            var vueObj = this;\r\n            var url = `Id=${vueObj.CrewId}`;\r\n            DataServices.FetchDataByCrewId(url).then(\r\n                function (response) {\r\n                    if (response.data != null && response.data != \"\") {\r\n                        if (response.data.status == \"Success\") {\r\n                            (vueObj.FormSchema)[0].Data[0].value = response.data.result.data[0].crew_name;\r\n                            (vueObj.FormSchema)[0].Data[1].value = response.data.result.data[0].crew_size;\r\n                            (vueObj.FormSchema)[1].Data[0].value = response.data.result.data[0].status_id;\r\n                            (vueObj.FormSchema)[2].Data[0].value = response.data.result.data[0].description;\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        },\r\n        Close: function () {\r\n            this.$parent.AddCrewPopup = false;\r\n        },\r\n        onSubmit(formfields, val) {\r\n            var vm = this;\r\n            var jsonobj = {\r\n                Id: vm.CrewId == null ? 0 : vm.CrewId,\r\n                CrewName: formfields.CrewName,\r\n                CrewSize: formfields.CrewSize,\r\n                FSMTerritoryListId: null,\r\n                Desc: formfields.Description,\r\n                Status: formfields.Status\r\n            };\r\n            var params = JSON.stringify(jsonobj);\r\n            DataServices.SaveTicketingCrew(params).then((response) => {\r\n                if (response.data.status == 'Success') {\r\n                    var rslt = JSON.parse(response.data.result);\r\n                    if (rslt.MSG == 'ALREADY EXISTS') {\r\n                        vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"Crew\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                    else {\r\n                        if (vm.CrewId > 0) {\r\n                            vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"Crew\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                            vm.Close();\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Crew\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                        }\r\n                        vm.Close();\r\n                        vm.$parent.FetchRecords();\r\n                    }\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t(\"AddedError\", [vm.$t(\"Crew\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                    vm.Close();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddCrewPopup.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddCrewPopup.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddCrewPopup.vue?vue&type=template&id=8e74dca0&\"\nimport script from \"./AddCrewPopup.vue?vue&type=script&lang=js&\"\nexport * from \"./AddCrewPopup.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <section>\r\n        <tg-list v-show=\"IscrewView\" :IsShowAction=\"true\" ModuleName=\"Ticketing\" SubModuleCode=\"FSM_CREW\" :LegendArray=\"[]\"\r\n            :RenderRowActionMethod=\"renderActions\" v-on:ActionButtonClick=\"actionButtonClick\" :widgets=\"[]\"\r\n            IdentityColumn=\"crew_id\" :HeaderText=\"$t('Crew')\" :listType=\"['List']\" :ListData=\"CrewList\"\r\n            :HeaderData=\"Headers\" :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecords\"\r\n            :SearchFields=\"leftSearchFields\" :ListDataCallBackFunction=\"FetchRecords\" :showCheckBox=\"true\"\r\n            :SortExp=\"SortExp\" :SortBy=\"SortBy\" :NorecordfoundText=\"$t('NoRecordfound')\"\r\n            v-on:LeftsearchButtonClick=\"leftCommonSearch\" v-on:PagerButtonClick=\"pagerMethod\"\r\n            v-on:HeaderButtonClick=\"commonHeaderButtonClick\" v-on:SortdataButtonClick=\"sortdata\">\r\n            <template v-slot:slotdata=\"{ data }\">\r\n                <template v-if=\"data.column.COLUMN_NAME == 'STATUS_NAME'\">\r\n                    <a class=\"active\">\r\n                        <span v-bind:class=\"getStatusClassList(data.row.STATUS_NAME, 'STATUS_NAME')\"\r\n                            v-if=\"data.row.STATUS_NAME == 'Active'\">\r\n                            {{ data.row[data.column.COLUMN_NAME] }}\r\n                        </span>\r\n                        <span v-bind:class=\"getStatusClassList(data.row.STATUS_NAME, 'STATUS_NAME')\"\r\n                            v-if=\"data.row.STATUS_NAME == 'Inactive'\">\r\n                            {{ $t('Inactive') }}\r\n                        </span>\r\n                    </a>\r\n                </template>\r\n            </template>\r\n        </tg-list>\r\n        <AddCrewPopup v-if=\"AddCrewPopup\" :CrewId=\"ticketSourceId\"></AddCrewPopup>\r\n    </section>\r\n</template>\r\n<script>\r\nimport Schema from \"@/views/crew/crewSchema\";\r\nimport DataServices from \"@/services/DataService\";\r\nimport AddCrewPopup from '../../components/Modal/AddCrewPopup.vue'\r\nexport default {\r\n    components: { AddCrewPopup },\r\n    data() {\r\n        return {\r\n            IscrewView: true,\r\n            AddCrewPopup: false,\r\n            showSetupTickectSource: false,\r\n            showExpanded: '',\r\n            StatusMappingList: [],\r\n            noRecords: false,\r\n            SortBy: '',\r\n            SortExp: '',\r\n            PageSize: \"10\",\r\n            PageNumber: \"1\",\r\n            TotalRecords: 0,\r\n            CurrentPage: 1,\r\n            TotalPages: 0,\r\n            SearchCondition: '',\r\n            CrewList: [],\r\n            GroupStart: 1,\r\n            GroupEnd: 3,\r\n            ticketSourceId: 0,\r\n            Headers: [{\r\n                \"COLUMN_NAME\": \"crew_name\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Crew Name\",\r\n                \"DISPLAY_ORDER\": 1\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"crew_size\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Crew Size\",\r\n                \"DISPLAY_ORDER\": 2\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"STATUS_NAME\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Status\",\r\n                \"DISPLAY_ORDER\": 3\r\n            }\r\n            ],\r\n            listheaderbuttons: Schema.buttons,\r\n            leftSearchFields: Schema.leftsearchSchema,\r\n            listActions: Schema.listActions,\r\n            user_type: null,\r\n            user_id: null,\r\n            companyId: null,\r\n            search: ''\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        vm.user_id = this.GetUserInfo.ID\r\n        vm.user_type = this.GetUserInfo.UserType\r\n        vm.companyId = this.GetUserInfo.CompanyId;\r\n        await vm.FetchRecords();\r\n    },\r\n    methods: {\r\n        paramsToObject(entries) {\r\n            const result = {}\r\n            for (const [key, value] of entries) { // each 'entry' is a [key, value] tupple\r\n                result[key] = value;\r\n            }\r\n            return result;\r\n        },\r\n        leftCommonSearch: function (value) {\r\n            const searchParams = new URLSearchParams(value.searchConditionJson);\r\n            const entries = searchParams.entries();\r\n            const params = this.paramsToObject(entries);\r\n            if (params.hasOwnProperty('search')) {\r\n                this.search = params['search'];\r\n            }\r\n            else {\r\n                this.search = '';\r\n            }\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchCondition;\r\n            }\r\n            else {\r\n                this.searchCondition = \"\";\r\n            }\r\n            this.FetchRecords();\r\n        },\r\n        actionButtonClick(callbackfunction, item, index, event) {\r\n            switch (callbackfunction) {\r\n                case 'Edit':\r\n                    this.openPopupForSetupCrewList(item.crew_id)\r\n                    break;\r\n                case 'ClickOnView':\r\n                    this.CrewDeatail(item.crew_id);\r\n                    break;\r\n            }\r\n        },\r\n        renderActions: function (row) {\r\n            var self = this;\r\n            let rtnActionArray = [];\r\n            self.listActions.forEach(actionItem => {\r\n                let action = { ...actionItem };\r\n                switch (action.title) {\r\n                    case 'Edit':\r\n                        action.isVisible = true;\r\n                        break;\r\n                    case 'ClickOnView':\r\n                        action.isVisible = true;\r\n                        break;\r\n                    default: {\r\n                        action.isVisible = true;\r\n                    }\r\n                }\r\n                rtnActionArray.push(action);\r\n            });\r\n            return rtnActionArray;\r\n        },\r\n        FetchRecords: async function () {\r\n            var vueObj = this;\r\n            if (!vueObj.isBlank(vueObj.SearchCondition)) {\r\n                vueObj.PageNumber = 1;\r\n            }\r\n            var url = `sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}&pageSize=${vueObj.PageSize}&pageNumber=${vueObj.PageNumber}`;\r\n            if (!vueObj.isBlank(this.search)) {\r\n                url += `&search=${this.search}`;\r\n            }\r\n            debugger\r\n            await DataServices.GetFsmCrewList(url).then(function (response) {\r\n                vueObj.Headers.forEach((column) => {\r\n                    column.settings = null;\r\n                    if (column.COLUMN_NAME == 'STATUS_NAME') {                     \r\n                        column.settings = {\r\n                            isInSlot: true,\r\n                            isForTag: true\r\n                        }\r\n                    }\r\n                    if (column.COLUMN_NAME == 'View') {\r\n                        column.settings = {\r\n                            isInSlot: true\r\n                        }\r\n                    }\r\n                    if (column.COLUMN_NAME == 'Edit') {\r\n                        column.settings = {\r\n                            isInSlot: true\r\n                        }\r\n                    }\r\n                });\r\n                vueObj.CrewList = [];\r\n                vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                vueObj.TotalRecords = 0;\r\n                if (response.data != null && response.data != \"\") {\r\n                    if (response.data.status == \"Success\") {\r\n                        vueObj.CrewList = response.data.result.data;\r\n                        vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                        vueObj.CurrentPage = vueObj.PageNumber;\r\n                        if (vueObj.CrewList.length > 0) {\r\n                            vueObj.TotalRecords = response.data.result.data[0].TOTALRECORDS;\r\n                            vueObj.listheaderbuttons[1].isdisabled=true;\r\n                            vueObj.noRecords = false;\r\n                        }\r\n                        else {\r\n                            vueObj.noRecords = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        vueObj.noRecords = true;\r\n                    }\r\n                    setTimeout(function () { vueObj.ResponsiveDataTable('tablelistingdata') }, 500);\r\n                }\r\n            });\r\n        },\r\n        pagerMethod: function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            this.FetchRecords();\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            switch (event.callbackfunction) {\r\n                case \"commonDeleteData\":\r\n                    this.commonDeleteData();\r\n                    break;\r\n                case \"openaddWorkType\":\r\n                    this.openPopupForSetupCrewList(null);\r\n                    break;\r\n            }\r\n        },\r\n        sortdata: function (sortBy) {\r\n            debugger\r\n            this.SortBy = sortBy;\r\n            var sortExp = 'ASC';\r\n            if (this.SortExp == 'ASC') {\r\n                sortExp = 'DESC';\r\n            }\r\n            this.SortExp = sortExp;\r\n            this.SortBy = sortBy;\r\n            this.SortExp = sortExp;\r\n            this.PageNumber = 1;\r\n            this.GroupStart = this.PageNumber;\r\n            this.GroupEnd = this.PageNumber + 2;\r\n            this.FetchRecords();\r\n        },\r\n        openPopupForSetupCrewList: function (id) {\r\n            if (id == undefined)\r\n                id = 0;\r\n            this.ticketSourceId = id;\r\n            this.AddCrewPopup = !this.AddCrewPopup;\r\n        },\r\n        commonDeleteData: function (event) {\r\n            var vm = this;\r\n            var val = \"\";\r\n            $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                if (val.length > 0)\r\n                    val += ',';\r\n                val += $(this).val();\r\n            });\r\n            if (val.length > 0) {\r\n                vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Crew\")), function () {\r\n                    var postJSON = {\r\n                        ids: val,\r\n                        companyId: vm.companyId,\r\n                        userId: vm.user_id,\r\n                        moduleName: \"FSM\",\r\n                        refCode: \"TALYGEN_FSM_CREW\"\r\n\r\n                    };\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    DataServices.deleteActivityData(objectPostString).then(response => {\r\n                        var box = \"\";\r\n                        if (response.data[0].Status == \"Success\") {\r\n                            vm.FetchRecords();\r\n                            box = vm.ShowAlert(vm.$t('DeletedSuccess', [vm.$t('Crew')]), \"Success\", true, vm.$t('Alert'));\r\n                        }\r\n                        else {\r\n                            box = vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Crew')]), \"failure\", true, vm.$t('Alert'));\r\n                        }\r\n                        setTimeout(function () {\r\n                            box.modal('hide');\r\n                        }, 2000);\r\n\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                alert(vm.$t(\"Selectanyrecordtodelete\"));\r\n            }\r\n        },\r\n        getStatusClassList: function (status) {\r\n            var returnClass = '';\r\n            switch (status) {\r\n                case 'Active':\r\n                    returnClass = 'px-2 text-center text-white d-block bg-success';\r\n                    break;\r\n                case 'Inactive':\r\n                    returnClass = 'px-2 text-center text-white d-block bg-danger';\r\n                    break;\r\n                default:\r\n                    returnClass = '';\r\n            }\r\n            return returnClass;\r\n        },\r\n        CrewDeatail(ths) {\r\n            this.$router.push({ name: \"CrewDetail\", params: { id: ths } });\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CrewListing.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CrewListing.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CrewListing.vue?vue&type=template&id=48e0eb9a&\"\nimport script from \"./CrewListing.vue?vue&type=script&lang=js&\"\nexport * from \"./CrewListing.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}