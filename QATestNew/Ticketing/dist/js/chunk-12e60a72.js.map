{"version":3,"sources":["webpack:///./src/components/Modal/ImportWorkTypeMapping.vue?019f","webpack:///./src/components/Modal/ImportWorkTypeMapping.vue?6cde","webpack:///./src/components/Modal/ImportWorkTypeMapping.vue?7e02","webpack:///./src/views/Service/ImportService.vue","webpack:///./src/components/Modal/ImportWorkTypeMapping.vue","webpack:///src/components/Modal/ImportWorkTypeMapping.vue","webpack:///./src/components/Modal/ImportWorkTypeMapping.vue?fffa","webpack:///./src/components/Modal/ImportWorkTypeMapping.vue?901b","webpack:///src/views/Service/ImportService.vue","webpack:///./src/views/Service/ImportService.vue?416b","webpack:///./src/views/Service/ImportService.vue?a767","webpack:///./src/components/Modal/AddWorkTypePopup.vue","webpack:///src/components/Modal/AddWorkTypePopup.vue","webpack:///./src/components/Modal/AddWorkTypePopup.vue?eb88","webpack:///./src/components/Modal/AddWorkTypePopup.vue?787e"],"names":["___CSS_LOADER_API_IMPORT___","exports","push","module","i","content","__esModule","default","locals","add","render","_vm","this","_c","_self","attrs","isLoading","chkImpServiceMapping","staticClass","_v","_s","$t","on","setFile","UploadServiceFile","resetFile","staticStyle","_m","showSaveButton","SaveServiceFile","_e","chkImpWorkTypeMapping","ImpServiceTableMapping","batchId","staticRenderFns","_l","WorkTypeData","workType","index","key","directives","name","rawName","value","expression","class","saveAttempted","workTypeMatchesExisting","domProps","$event","target","composing","$set","getExistingWorkTypeName","OpenWorkTypePopup","SaveData","AddWorkTypePopup","components","props","type","String","data","file","filepath","excelFileName","allrequiredcol","requiredcol","ddlExistingWorkTypeOptions","created","FetchRecords","methods","url","DataServices","GetDDLData","then","response","status","DATA","loadExcelWorkTypeHeaderValue","GetWorkTypeTableValue","undefined","length","map","item","createMultiRows","existingWorkType","find","option","workTypeValue","some","totalRecords","$","addClass","rownumber","ex","console","error","id","vm","invalidWorkTypes","filter","forEach","xmlString","existingWorkTypeName","jsonobj","xmlServiceTableMapping","xmlWorkTypeMapping","params","JSON","stringify","SaveWorkTypeMapping","result","ShowAlert","$router","path","component","ImpWorkTypeMapping","BackToList","event","files","formdata","FormData","append","ImportServicePost","Status","Msg","setTimeout","loadTableHeader","loadExcelHeader","param","GetServiceExcelColumn","select","empty","column_Name","trim","toLowerCase","each","itemData","val","batch_id","column_Length","data_Type","change","CheckDuplicateExcelRecord","CheckDuplicateTableRecord","document","getElementById","removeClass","GetServiceTableColumn","table","Exceloptions","Tableoptions","clone","attr","_","end","appendTo","children","remove","tc_datatype","ex_datatype","tc_Value","ex_Value","ctrlid","controlid","dupid2","dupid","objarr","flag","ddlval","eq","text","j","indexno","savebtn","hasClass","xml","saveFlag","hasSelection","checkMandatoryColumns","mandatoryCols","split","replace","RegExp","scrollTop","row","rowid","ddlTableColumn","ddlExcelColumn","valid","CheckRequiredR","original_column_name","data_type","pattern","match","formattedText","excel_column_name","excel_data_type","toggleClass","postJSON","xmltrackentries","Close","buttons","FormSchema","onSubmit","scopedSlots","_u","fn","fieldInfo","disabled","Array","isArray","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","slice","checkForAutoCreateEnable","AutoServiceDisabled","WorkTypeId","Number","required","fileData","layoutType","Data","astype","label","placeholder","validationRules","max","config","options","visibility","settings","isInSlot","showLabel","FieldIndex","maxSize","accept","fileType","iconClass","onChange","GetBase64String","showAddIcon","onAddButtonClick","multiple","onClick","FetchData","vueObj","FetchDataByWorktypeId","worktype_name","description","auto_create_sa","min_crew_size","rec_crew_size","duration_type","estimate_duration","maximum_duration","color","$parent","isChecked","evt","f","reader","FileReader","onload","theFile","e","binaryData","base64StringEncoded","window","btoa","fileName","n","lastIndexOf","extensionName","substring","fileExt","attachemnetMime","size","fileSize","fileObj","attachement_mime","contentType","base64String","readAsBinaryString","formfields","WorkTypeID","WorktypeName","WorkTypeName","Desc","DESCRIPTION","Auto","AutoCreateService","MinimumCrew","MinimumCrewSize","Crew","RecommendedCrewSize","DurationType","Duration","EstimateDuration","MaxDuration","ColorField","due_date_offset","Exect","CommissionType","CommissionValue","FileData","status_id","SaveWorkType","rslt","parse","MSG"],"mappings":"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","file":"js/chunk-12e60a72.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".custom-btn{border-color:#25a5ff;color:#25a5ff;background-color:#fff}.custom-btn:hover{background-color:#25a5ff;color:#fff}.border-danger{border-color:red!important}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportWorkTypeMapping.vue?vue&type=style&index=0&id=77e2d9d4&prod&lang=css&\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportWorkTypeMapping.vue?vue&type=style&index=0&id=77e2d9d4&prod&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e65386ba\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),(_vm.chkImpServiceMapping)?_c('section',{staticClass:\"main-content\",attrs:{\"id\":\"main-content\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ImportServices')))]),_c('span',{staticClass:\"p-actions float-right\"},[_c('RouterLink',{staticClass:\"p-action-btn text-white float-right\",attrs:{\"to\":\"/Ticketing/ServiceListing\",\"title\":_vm.$t('BacktoList')}},[_c('em',{staticClass:\"fa fa-angle-double-left pr-2\"}),_c('br'),_vm._v(_vm._s(_vm.$t('BacktoList')))])],1)])])]),_c('div',{staticClass:\"border p-3\",attrs:{\"id\":\"divMainLeadData\"}},[_c('div',{attrs:{\"id\":\"CrmImportMain\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-12\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('Download'))+\" \"+_vm._s(_vm.$t('SampleFile'))+\":\")]),_c('div',{staticClass:\"d-flex align-items-center\"},[_c('p',[_c('a',{staticClass:\"text-dark\",attrs:{\"href\":\"/Content/files/LeadImportSampleFile.xlsx\",\"checkprivilege\":\"no\",\"download\":\"\"}},[_c('img',{staticClass:\"mr-2\",attrs:{\"src\":\"/Content/images/excel-icon.png\",\"alt\":\"\"}}),_vm._v(_vm._s(_vm.$t('Service'))+\" \"),_c('em',{staticClass:\"fa fa-download ml-2 text-dark\"})])])])])]),_c('div',{staticClass:\"col-xl-4 col-lg-4 col-md-6\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('UploadFile'))+\":\"),_c('span',{staticClass:\"text-danger\"},[_vm._v(\"*\")])]),_c('div',{staticClass:\"custom-file\"},[_c('input',{staticClass:\"downloadexcel\",attrs:{\"type\":\"file\",\"id\":\"flUserFile\",\"size\":\"19\",\"name\":\"flUserFile\",\"tabindex\":\"1\"},on:{\"change\":_vm.setFile}})])])]),_c('div',{staticClass:\"col-12 mt-3\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-info my-2 mr-2\",attrs:{\"href\":\"javascript:void(0);\",\"id\":\"uploadfile\",\"title\":_vm.$t('ImportFromExcelFile')},on:{\"click\":_vm.UploadServiceFile}},[_c('em',{staticClass:\"fa fa-file-excel-o mr-2\",attrs:{\"aria-hidden\":\"true\"}}),_vm._v(_vm._s(_vm.$t('ImportFromExcelFile')))]),_c('a',{staticClass:\"btn btn-danger mr-2\",attrs:{\"href\":\"javascript:void(0);\",\"title\":_vm.$t('Reset')},on:{\"click\":_vm.resetFile}},[_c('em',{staticClass:\"fa fa-refresh mr-2\"}),_vm._v(_vm._s(_vm.$t('Reset'))+\" \")]),_c('RouterLink',{staticClass:\"btn btn-secondary my-2\",attrs:{\"to\":\"/Ticketing/ServiceListing\",\"title\":_vm.$t('BacktoList')}},[_c('em',{staticClass:\"fa fa-angle-double-left pr-2\"}),_vm._v(\" \"+_vm._s(_vm.$t('BacktoList'))+\" \")])],1),_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"py-2\"},[_c('span',{staticClass:\"text-danger\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])])])])])])])]),_c('div',{staticClass:\"col-lg-12 p-0 float-left\"},[_c('div',{staticClass:\"listing mt-2\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-bordered dt-responsive nowrap m-0\",staticStyle:{\"width\":\"100%\"},attrs:{\"id\":\"tblbulkservice\",\"aria-describedby\":\"importlead\"}},[_vm._m(0),_c('tbody',[_c('tr',[_c('td',{staticClass:\"text-center text-danger norecord no-record\",attrs:{\"colspan\":\"2\"}},[_vm._v(_vm._s(_vm.$t('NoRecordfound'))+\" \")])]),_c('tr',{staticClass:\"d-none\",attrs:{\"id\":\"trdata\",\"crtrwid\":\"1001\"}},[_c('td',[_c('select',{staticClass:\"form-control d-none\",attrs:{\"name\":\"TableColumns\"}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(_vm._s(_vm.$t('Select'))+\" \"+_vm._s(_vm.$t('Column')))])]),_c('select',{staticClass:\"form-control\",attrs:{\"id\":\"ddlTableColumn\",\"name\":\"TableColumn\"}})]),_c('td',[_c('select',{staticClass:\"form-control\",attrs:{\"name\":\"ExcelColumns\"}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(_vm._s(_vm.$t('Select'))+\" \"+_vm._s(_vm.$t('Column')))])]),_c('select',{staticClass:\"form-control\",attrs:{\"id\":\"ddlExcelColumn\",\"name\":\"ExcelColumn\"}})])])])])]),_c('div',{staticClass:\"col-lg-12 text-right mt-3 p-0\"},[_c('input',{attrs:{\"type\":\"hidden\",\"id\":\"hdnBatchId\",\"value\":\"Batch_id\"}}),(_vm.showSaveButton)?_c('a',{staticClass:\"btn btn-success formbtn widthhalf\",attrs:{\"href\":\"javascript:void(0);\",\"id\":\"savebtn\",\"title\":_vm.$t('Next')},on:{\"click\":_vm.SaveServiceFile}},[_c('em',{staticClass:\"fa fa-save pr-2\"}),_c('span',[_vm._v(_vm._s(_vm.$t('Next')))])]):_vm._e()])])])]):_vm._e(),(_vm.chkImpWorkTypeMapping)?_c('ImpWorkTypeMapping',{attrs:{\"ImpServiceTableMapping\":_vm.ImpServiceTableMapping,\"batchId\":_vm.batchId}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('thead',{staticClass:\"thead-bg\"},[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Table Column\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Excel Column\")])])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('section',{staticClass:\"main-content\",attrs:{\"id\":\"main-content\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ImportServices')))])])])]),_c('div',{staticClass:\"container-fluid mt-2\"},[_vm._m(0),_c('div',{staticClass:\"col-lg-12 p-0 float-left\"},[_c('div',{staticClass:\"listing mt-2\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-bordered dt-responsive nowrap m-0\",staticStyle:{\"width\":\"100%\"},attrs:{\"id\":\"tblbulkleadoption\",\"aria-describedby\":\"importlead\"}},[_vm._m(1),_c('tbody',_vm._l((_vm.WorkTypeData),function(workType,index){return _c('tr',{key:index},[_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(workType.value),expression:\"workType.value\"}],staticClass:\"form-control\",class:{ 'border-danger': workType.saveAttempted && !_vm.workTypeMatchesExisting(workType.value) },attrs:{\"type\":\"text\",\"disabled\":\"disabled\",\"id\":'txtExcelWorkType' + index,\"name\":'txtExcelWorkType' + index},domProps:{\"value\":(workType.value)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(workType, \"value\", $event.target.value)}}}),(workType.saveAttempted && !_vm.workTypeMatchesExisting(workType.value))?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"This Work Type is not mapped\")]):_vm._e()]),_c('td',[(_vm.workTypeMatchesExisting(workType.value))?[_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\",\"disabled\":\"disabled\",\"id\":'txtExistingWorkType' + index,\"name\":'txtExistingWorkType' + index},domProps:{\"value\":workType.value}}),_c('span',{staticClass:\"hidden\"},[_vm._v(_vm._s(_vm.getExistingWorkTypeName(workType.value)))])]:[_c('button',{staticClass:\"btn btn-primary custom-btn\",staticStyle:{\"width\":\"100%\"},on:{\"click\":function($event){return _vm.OpenWorkTypePopup(index)}}},[_c('i',{staticClass:\"fa fa-plus\"}),_vm._v(\" Create New \")])]],2)])}),0)])]),_c('div',{staticClass:\"col-12 mt-3\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success\",attrs:{\"href\":\"javascript:;\",\"title\":\"Save\"},on:{\"click\":_vm.SaveData}},[_c('i',{staticClass:\"fa fa-floppy-o pr-2\"}),_c('span',[_vm._v(_vm._s(_vm.$t('Save')))])]),_vm._v(\"  \"),_c('RouterLink',{staticClass:\"btn btn-danger\",attrs:{\"to\":\"/Ticketing/ServiceListing\",\"title\":\"Cancel\"}},[_c('i',{staticClass:\"fa fa-times pr-2\"}),_c('span',[_vm._v(_vm._s(_vm.$t('Cancel')))])])],1)])])])])]),(_vm.AddWorkTypePopup)?_c('AddWorkTypePopup'):_vm._e()],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-12 mb-3\"},[_c('div',{staticClass:\"heading-border mt-2\"},[_c('h5',{staticClass:\"h5\"},[_c('span',[_vm._v(\"Work Type mapping\")])])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('thead',{staticClass:\"thead-bg\"},[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Excel Work Type\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Existing Work Type\")])])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <section id=\"main-content\" class=\"main-content\">\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{ $t('ImportServices') }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"container-fluid mt-2\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12 mb-3\">\r\n                        <div class=\"heading-border mt-2\">\r\n                            <h5 class=\"h5\"><span>Work Type mapping</span></h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-12 p-0 float-left\">\r\n                    <div class=\"listing mt-2\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"tblbulkleadoption\" class=\"table table-bordered dt-responsive nowrap m-0\"\r\n                                style=\"width:100%;\" aria-describedby=\"importlead\">\r\n                                <thead class=\"thead-bg\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">Excel Work Type</th>\r\n                                        <th scope=\"col\">Existing Work Type</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <!-- Dynamic rows -->\r\n                                    <tr v-for=\"(workType, index) in WorkTypeData\" :key=\"index\">\r\n                                        <!-- Input for Excel Work Type -->\r\n                                        <td>\r\n                                            <input type=\"text\" class=\"form-control\"\r\n                                                :class=\"{ 'border-danger': workType.saveAttempted && !workTypeMatchesExisting(workType.value) }\"\r\n                                                disabled=\"disabled\" :id=\"'txtExcelWorkType' + index\"\r\n                                                :name=\"'txtExcelWorkType' + index\" v-model=\"workType.value\">\r\n                                            <!-- Show validation error only for Excel Work Type -->\r\n                                            <span v-if=\"workType.saveAttempted && !workTypeMatchesExisting(workType.value)\"\r\n                                                class=\"text-danger\">This Work Type is not mapped</span>\r\n                                        </td>\r\n                                        <!-- Conditional rendering for Existing Work Type -->\r\n                                        <td>\r\n                                            <template v-if=\"workTypeMatchesExisting(workType.value)\">\r\n                                                <!-- Show input field if match -->\r\n                                                <input type=\"text\" class=\"form-control\" disabled=\"disabled\"\r\n                                                    :id=\"'txtExistingWorkType' + index\"\r\n                                                    :name=\"'txtExistingWorkType' + index\" :value=\"workType.value\">\r\n                                                <span class=\"hidden\">{{ getExistingWorkTypeName(workType.value) }}</span>\r\n                                            </template>\r\n                                            <template v-else>\r\n                                                <button class=\"btn btn-primary custom-btn\" style=\"width: 100%;\"\r\n                                                    @click=\"OpenWorkTypePopup(index)\">\r\n                                                    <i class=\"fa fa-plus\"></i> Create New\r\n                                                </button>\r\n                                            </template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div class=\"col-12 mt-3\">\r\n                            <div class=\"row flex-row-reverse\">\r\n                                <div class=\"col-lg-6 text-right\">\r\n                                    <a href=\"javascript:;\" class=\"btn btn-success\" @click=\"SaveData\" title=\"Save\"><i\r\n                                            class=\"fa fa-floppy-o pr-2\"></i><span>{{ $t('Save') }}</span></a>&nbsp;\r\n                                    <RouterLink to=\"/Ticketing/ServiceListing\" title=\"Cancel\" class=\"btn btn-danger\">\r\n                                        <i class=\"fa fa-times pr-2\"></i><span>{{ $t('Cancel') }}</span>\r\n                                    </RouterLink>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddWorkTypePopup v-if=\"AddWorkTypePopup\"></AddWorkTypePopup>\r\n        </section>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nimport AddWorkTypePopup from '../../components/Modal/AddWorkTypePopup.vue'\r\nexport default {\r\n    components: { AddWorkTypePopup },\r\n    props: {\r\n        ImpServiceTableMapping: {\r\n            type: String\r\n        },\r\n        batchId: {\r\n            type: String\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            file: null,\r\n            filepath: null,\r\n            AddWorkTypePopup: false,\r\n            excelFileName: null,\r\n            allrequiredcol: '',\r\n            requiredcol: '',\r\n            showSaveButton: false,\r\n            WorkTypeData: [],\r\n            ddlExistingWorkTypeOptions: []\r\n        }\r\n    },\r\n    created() {\r\n        this.FetchRecords();\r\n    },\r\n    methods: {\r\n        FetchRecords() {\r\n            //debugger;\r\n            var url = `id=&moduleName=TICKETING&type=FSM_WORKTYPE&search=&refId=`;\r\n            DataServices.GetDDLData(url).then(response => {\r\n                if (response.status == 200) {\r\n                    this.ddlExistingWorkTypeOptions = response.data.DATA;\r\n                }\r\n            }).then(() => {\r\n                this.loadExcelWorkTypeHeaderValue();\r\n            });\r\n        },\r\n        loadExcelWorkTypeHeaderValue() {\r\n            var url = `batchId=${this.batchId}`;\r\n            DataServices.GetWorkTypeTableValue(url).then(response => {\r\n             //debugger;\r\n                var data = response.data;\r\n                if (data.length != undefined && data.length > 0) {\r\n                    this.WorkTypeData = data.map(item => ({ value: item.value, saveAttempted: false }));\r\n                    this.createMultiRows(data.length);\r\n                }\r\n            });\r\n        },\r\n        getExistingWorkTypeName(value) {\r\n            const existingWorkType = this.ddlExistingWorkTypeOptions.find(option => option.name === value);\r\n            return existingWorkType ? existingWorkType.value : '';\r\n        },\r\n        workTypeMatchesExisting(workTypeValue) {\r\n            return this.ddlExistingWorkTypeOptions.some(item => item.name === workTypeValue);\r\n        },\r\n\r\n        createMultiRows(totalRecords) {\r\n            try {\r\n                var rownumber = 1001;\r\n                $(\".norecord\").addClass(\"d-none\");\r\n                for (var i = 0; i < totalRecords; i++) {\r\n                    rownumber++;\r\n                }\r\n            } catch (ex) {\r\n                console.error(\"Error in createMultiRows: \", ex);\r\n            }\r\n        },\r\n        OpenWorkTypePopup: function (id) {\r\n            var vm = this;\r\n           // //debugger;\r\n            vm.AddWorkTypePopup = !vm.AddWorkTypePopup;\r\n           // //debugger;\r\n            if (vm.chkImpWorkTypeMapping == true) {\r\n                vm.chkImpWorkTypeMapping = true;\r\n            }\r\n            else {\r\n\r\n                vm.chkImpServiceMapping = false;\r\n            }\r\n        },\r\n        SaveData() {\r\n            var vm = this;\r\n            const invalidWorkTypes = vm.WorkTypeData.filter(workType => !vm.workTypeMatchesExisting(workType.value));\r\n            if (invalidWorkTypes.length > 0) {\r\n                vm.WorkTypeData.forEach(workType => {\r\n                    workType.saveAttempted = true;\r\n                });\r\n                return;\r\n            }\r\n            let xmlString = '<workTypes>';\r\n            this.WorkTypeData.forEach((workType, index) => {\r\n                xmlString += `<worktype><excelWorkType>${workType.value}</excelWorkType>`;\r\n                const existingWorkTypeName = vm.getExistingWorkTypeName(workType.value);\r\n                xmlString += `<existingWorkTypeValue>${existingWorkTypeName}</existingWorkTypeValue></worktype>`;\r\n            });\r\n            xmlString += '</workTypes>';\r\n            var jsonobj = {\r\n                xmlServiceTableMapping: vm.ImpServiceTableMapping,\r\n                xmlWorkTypeMapping: xmlString\r\n            };\r\n            var params = JSON.stringify(jsonobj);\r\n            DataServices.SaveWorkTypeMapping(params).then(response => {\r\n               // //debugger;\r\n                if (response.data.status == 'Success') {\r\n                    if (response.data.result == 1) {\r\n                        vm.ShowAlert(vm.$t('AddedSuccess', [vm.$t('Mapping')]), \"Success\", true, vm.$t('Alert'));\r\n                        vm.$router.push({ path: '/Ticketing/ServiceListing' });\r\n                    }\r\n                    else{\r\n                        vm.ShowAlert(vm.$t(\"ErrorWhileSaving\", [vm.$t(\"Mapping\")]), \"danger\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                   \r\n                }\r\n                vm.isLoading = false;\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n<style>\r\n.custom-btn {\r\n    border-color: #25a5ff;\r\n    color: #25a5ff;\r\n    background-color: white;\r\n}\r\n\r\n.custom-btn:hover {\r\n    background-color: #25a5ff;\r\n    color: white;\r\n}\r\n\r\n.border-danger {\r\n    border-color: red !important;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportWorkTypeMapping.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportWorkTypeMapping.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImportWorkTypeMapping.vue?vue&type=template&id=77e2d9d4&\"\nimport script from \"./ImportWorkTypeMapping.vue?vue&type=script&lang=js&\"\nexport * from \"./ImportWorkTypeMapping.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ImportWorkTypeMapping.vue?vue&type=style&index=0&id=77e2d9d4&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <section id=\"main-content\" class=\"main-content\" v-if=\"chkImpServiceMapping\">\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{ $t('ImportServices') }}</span>\r\n                        <span class=\"p-actions float-right\">\r\n                            <RouterLink to=\"/Ticketing/ServiceListing\" :title=\"$t('BacktoList')\"\r\n                                class=\"p-action-btn text-white float-right\"><em\r\n                                    class=\"fa fa-angle-double-left pr-2\"></em><br />{{ $t('BacktoList') }}</RouterLink>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"border p-3\" id=\"divMainLeadData\">\r\n                <div id=\"CrmImportMain\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{ $t('Download') }} {{ $t('SampleFile') }}:</label>\r\n                                <div class=\"d-flex align-items-center\">\r\n                                    <p><a href=\"/Content/files/LeadImportSampleFile.xlsx\" checkprivilege=\"no\"\r\n                                            class=\"text-dark\" download>\r\n                                            <img src=\"/Content/images/excel-icon.png\" alt=\"\" class=\"mr-2\" />{{ $t('Service')\r\n                                            }}\r\n                                            <em class=\"fa fa-download ml-2 text-dark\"></em></a></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xl-4 col-lg-4 col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{ $t('UploadFile') }}:<span class=\"text-danger\">*</span></label>\r\n                                <div class=\"custom-file\">\r\n                                    <input type=\"file\" class=\"downloadexcel\" id=\"flUserFile\" size=\"19\" name=\"flUserFile\"\r\n                                        tabindex=\"1\" @change=\"setFile\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-12 mt-3\">\r\n                            <div class=\"row flex-row-reverse\">\r\n                                <div class=\"col-lg-6 text-right\">\r\n                                    <a href=\"javascript:void(0);\" id=\"uploadfile\" :title=\"$t('ImportFromExcelFile')\"\r\n                                        @click=\"UploadServiceFile\" class=\"btn btn-info my-2 mr-2\"><em\r\n                                            class=\"fa fa-file-excel-o mr-2\" aria-hidden=\"true\"></em>{{\r\n                                                $t('ImportFromExcelFile') }}</a>\r\n                                    <a href=\"javascript:void(0);\" @click=\"resetFile\" :title=\"$t('Reset')\"\r\n                                        class=\"btn btn-danger mr-2\">\r\n                                        <em class=\"fa fa-refresh mr-2 \"></em>{{ $t('Reset') }}\r\n                                    </a>\r\n\r\n                                    <RouterLink to=\"/Ticketing/ServiceListing\" :title=\"$t('BacktoList')\"\r\n                                        class=\"btn btn-secondary my-2\">\r\n                                        <em class=\"fa fa-angle-double-left pr-2\"></em> {{ $t('BacktoList') }}\r\n                                    </RouterLink>\r\n                                </div>\r\n                                <div class=\"col-lg-6\">\r\n                                    <div class=\"py-2\"><span class=\"text-danger\"><small class=\"text-danger\">{{\r\n                                        $t('MandatoryString') }}</small></span></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-12 p-0 float-left\">\r\n                <div class=\"listing mt-2\">\r\n                    <div class=\"table-responsive\">\r\n                        <table id=\"tblbulkservice\" class=\"table table-bordered dt-responsive nowrap m-0\" style=\"width:100%;\"\r\n                            aria-describedby=\"importlead\">\r\n                            <thead class=\"thead-bg\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Table Column</th>\r\n                                    <th scope=\"col\">Excel Column</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td colspan=\"2\" class=\"text-center text-danger norecord no-record\">{{\r\n                                        $t('NoRecordfound') }}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr id=\"trdata\" crtrwid=\"1001\" class=\"d-none\">\r\n                                    <td>\r\n                                        <select class=\"form-control d-none\" name=\"TableColumns\">\r\n                                            <option value=\"\">{{ $t('Select') }} {{ $t('Column') }}</option>\r\n                                        </select>\r\n                                        <select class=\"form-control\" id=\"ddlTableColumn\" name=\"TableColumn\"></select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class=\"form-control\" name=\"ExcelColumns\">\r\n                                            <option value=\"\">{{ $t('Select') }} {{ $t('Column') }}</option>\r\n                                        </select>\r\n                                        <select class=\"form-control\" id=\"ddlExcelColumn\" name=\"ExcelColumn\"></select>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-12 text-right mt-3 p-0\">\r\n                        <input type=\"hidden\" id=\"hdnBatchId\" value=\"Batch_id\" />\r\n                        <a v-if=\"showSaveButton\" href=\"javascript:void(0);\" @click=\"SaveServiceFile\" id=\"savebtn\"\r\n                            :title=\"$t('Next')\" class=\"btn btn-success formbtn widthhalf\"><em\r\n                                class=\"fa fa-save pr-2\"></em><span>{{ $t('Next') }}</span></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        <ImpWorkTypeMapping v-if=\"chkImpWorkTypeMapping\" :ImpServiceTableMapping=\"ImpServiceTableMapping\"\r\n            :batchId=\"batchId\">\r\n        </ImpWorkTypeMapping>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nimport ImpWorkTypeMapping from '../../components/Modal/ImportWorkTypeMapping.vue';\r\nexport default {\r\n    components: {\r\n        ImpWorkTypeMapping\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            file: null,\r\n            filepath: null,\r\n            excelFileName: null,\r\n            allrequiredcol: '',\r\n            requiredcol: '',\r\n            showSaveButton: false,\r\n            ImpServiceTableMapping: '',\r\n            batchId: '',\r\n            chkImpWorkTypeMapping: false,\r\n            chkImpServiceMapping: true\r\n        }\r\n    },\r\n    created: function () {\r\n        var vm = this;\r\n        if (vm.chkImpWorkTypeMapping == false) {\r\n            vm.chkImpServiceMapping = true;\r\n        }\r\n        else {\r\n            vm.chkImpServiceMapping = false;\r\n        }\r\n    },\r\n    methods: {\r\n        BackToList: function () {\r\n            this.$router.push({ name: 'ServiceListing' });\r\n        },\r\n        setFile: function (event) {\r\n            this.file = event.target.files[0];\r\n            this.excelFileName = this.file ? this.file.name : '';\r\n        },\r\n\r\n        UploadServiceFile: function () {\r\n            // // //debugger;\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            const formdata = new FormData();\r\n            formdata.append(\"file\", vm.file);\r\n            if (vm.file != undefined && vm.file != null) {\r\n                DataServices.ImportServicePost(formdata).then(function (response) {\r\n                    var data = response.data;\r\n                    if (data.Status == 0) {\r\n                        vm.filepath = data.Msg;\r\n                        setTimeout(function () { vm.loadTableHeader(); }, 1000);\r\n                        setTimeout(function () { vm.loadExcelHeader(data.Msg); vm.isLoading = false; }, 2000);\r\n                    } else if (data.Status == 1) {\r\n                        vm.ShowAlert(vm.$t(\"IsNotValidFileUpload\"), \"warning\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                    else {\r\n                        vm.isLoading = false;\r\n\r\n                        vm.ShowAlert(data.Msg, \"warning\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                vm.isLoading = false;\r\n                vm.ShowAlert(vm.$t(\"Please upload valid excel file.\"), \"warning\", true, vm.$t(\"Alert\"));\r\n            }\r\n        },\r\n        loadExcelHeader: function (filepath) {\r\n            var vm = this;\r\n            var param = `filepath=${filepath}&excelFileName=${vm.excelFileName}`;\r\n            DataServices.GetServiceExcelColumn(param)\r\n                .then(function (response) {\r\n                    var data = response.data;\r\n                    if (data.length != undefined) {\r\n                        var select = $(\"#ddlExcelColumn\");\r\n                        select.empty();\r\n                        data = data.filter(item => item.column_Name.trim().toLowerCase() !== 'work type');\r\n                        $.each(data, function (index, itemData) {\r\n                            $('#hdnBatchId').val(itemData.batch_id);\r\n                            $(\"#ddlExcelColumn\").append(\"<option value='\" + itemData.column_Name + \"'Column_length='\" + itemData.column_Length + \"'Data_Type='\" + itemData.data_Type + \"' >\" + itemData.column_Name + \"</option>\");\r\n                        });\r\n                        vm.createMultiRows(data.length);\r\n                        // Attach event listener to each select element\r\n                        $(\"table#tblbulkservice tr.visible td select[name^='ExcelColumns']\").change(function () {\r\n                            vm.CheckDuplicateExcelRecord($(this).val());\r\n                        });\r\n                        // Attach event listener to each select element\r\n                        $(\"table#tblbulkservice tr.visible td select[name^='TableColumns']\").change(function () {\r\n                            vm.CheckDuplicateTableRecord($(this).val());\r\n                        });\r\n                    }\r\n                })\r\n        },\r\n        resetFile: function () {\r\n            var vm = this;\r\n            vm.file = null;\r\n            vm.excelFileName = null;\r\n            document.getElementById('flUserFile').value = '';\r\n            // $(\"table#tblbulkservice tbody\").empty();\r\n            $('#uploadfile').removeClass(\"disabled\");\r\n            $(\"table#tblbulkservice select\").removeClass('border border-danger');\r\n            $('#savebtn').removeClass(\"disabled\");\r\n        },\r\n        loadTableHeader: function () {\r\n            var vm = this;\r\n            DataServices.GetServiceTableColumn()\r\n                .then(function (response) {\r\n                    var data = response.data;\r\n                    if (data.length != undefined) {\r\n                        var select = $(\"#ddlTableColumn\");\r\n                        select.empty();\r\n                        $.each(data, function (index, itemData) {\r\n                            $(\"#ddlTableColumn\").append(\"<option value='\" + itemData.column_Name + \"'Column_length='\" + itemData.column_Length + \"'Data_Type='\" + itemData.data_Type + \"' >\" + itemData.column_Name + \"</option>\");\r\n                        });\r\n                    }\r\n                })\r\n        },\r\n        createMultiRows(totalRecords) {\r\n            try {\r\n                var vm = this;\r\n                // // //debugger;\r\n                $('#uploadfile').addClass(\"disabled\");\r\n                this.showSaveButton = true;\r\n                var rownumber = 1002;\r\n                vm.isLoading = true;\r\n                var table = $(\"table#tblbulkservice tr#trdata\");\r\n                var Exceloptions = \"\";\r\n                var Tableoptions = \"\";\r\n                $(\".norecord\").addClass(\"d-none\");\r\n                for (var i = 0; i < totalRecords; i++) {\r\n                    $(table).clone().attr({ 'crtrwid': rownumber }).removeClass(\"d-none\").addClass(\"visible\")\r\n                        .find(\"input,a,select,div\").each(function () {\r\n                            $(this).attr({\r\n                                'id': function (_, id) { return id + \"\" + rownumber; },\r\n                                'name': function (_, name) { return name + \"\" + rownumber; },\r\n                                'value': function (_, value) { return value; }\r\n                            });\r\n                            $(this).removeClass(\"d-none\");\r\n                        }).end().appendTo(\"table#tblbulkservice\");\r\n                    Exceloptions = $('#ddlExcelColumn').children('option').clone();\r\n                    Tableoptions = $('#ddlTableColumn').children('option').clone();\r\n                    $(\"table#tblbulkservice tr.visible td select[id='ddlTableColumn\" + rownumber + \"']\").remove();\r\n                    $(\"table#tblbulkservice tr.visible td select[name='TableColumns\" + rownumber + \"']\").attr('id', 'ddlTableColumn' + rownumber);\r\n                    $(\"table#tblbulkservice tr.visible td select[name='TableColumns\" + rownumber + \"']\").append(Tableoptions);\r\n                    $(\"table#tblbulkservice tr.visible td select[id='ddlExcelColumn\" + rownumber + \"']\").remove();\r\n                    $(\"table#tblbulkservice tr.visible td select[name='ExcelColumns\" + rownumber + \"']\").attr('id', 'ddlExcelColumn' + rownumber);\r\n                    $(\"table#tblbulkservice tr.visible td select[name='ExcelColumns\" + rownumber + \"']\").append(Exceloptions);\r\n                    if (Exceloptions.length > i) {\r\n                        var tc_datatype = $(\"#ddlTableColumn\" + rownumber + \" option[value='\" + Exceloptions[i].value + \"']\").attr('data_type');\r\n                        var ex_datatype = $(\"#ddlExcelColumn\" + rownumber + \" option[value='\" + Exceloptions[i].value + \"']\").attr('data_type');\r\n                        var tc_Value = $(\"#ddlTableColumn\" + rownumber + \" option[value='\" + Exceloptions[i].value + \"']\").attr('value');\r\n                        var ex_Value = $(\"#ddlExcelColumn\" + rownumber + \" option[value='\" + Exceloptions[i].value + \"']\").attr('value');\r\n                        if (tc_datatype != undefined && ex_datatype != undefined) {\r\n                            if (tc_Value.toLowerCase() == ex_Value.toLowerCase()) {\r\n                                $(\"#ddlTableColumn\" + rownumber + \" option[value='\" + Exceloptions[i].value + \"']\").attr('selected', 'selected');\r\n                                $(\"#ddlExcelColumn\" + rownumber + \" option[value='\" + Exceloptions[i].value + \"']\").attr('selected', 'selected');\r\n                            }\r\n                        }\r\n                    }\r\n                    rownumber++;\r\n                }\r\n                $(\"table#tblbulkservice tr.visible[crtrwid ='\" + 1001 + \"']\").removeClass(\"visible\").addClass(\"d-none\");\r\n                vm.isLoading = false;\r\n            } catch (ex) {\r\n\r\n            }\r\n        },\r\n\r\n        CheckDuplicateTableRecord: function (ctrlid) {\r\n            // // //debugger;\r\n            var objarr = [];\r\n            var flag = true;\r\n            $(\"table#tblbulkservice tr#trdata\").each(function () {\r\n                var ddlval = $(this).find(\"td\").eq(0).find(\"select option:selected\").text();\r\n                objarr.push(ddlval);\r\n            }); //end of each\r\n            var controlid;\r\n            var dupid2;\r\n            var dupid;\r\n            var indexno = 1002;\r\n            flag = false;\r\n            var i; var j;\r\n            for (i = 1; i < objarr.length; i++) {\r\n                controlid = '#ddlTableColumn' + indexno;\r\n\r\n                for (j = i + 1; j < objarr.length; j++) {\r\n\r\n                    if (objarr[i] == objarr[j] && objarr[i] != \"Select Column\") {\r\n                        flag = true;\r\n\r\n                        dupid = controlid;\r\n                        dupid2 = '#ddlTableColumn' + (1002 + (j - 1));\r\n                        break;\r\n                    }\r\n                }\r\n                if (flag) {\r\n                    break;\r\n                }\r\n                $(controlid).removeClass('border border-danger');\r\n                $(savebtn).removeClass(\"disabled\");\r\n                indexno++;\r\n            }\r\n            if (flag) {\r\n                $(dupid).addClass('border border-danger');\r\n                $(dupid2).addClass('border border-danger');\r\n                $(savebtn).addClass(\"disabled\");\r\n            }\r\n            flag = false;\r\n            $(\"table#tblbulkservice tr#trdata\").each(function () {\r\n                if ($(this).find(\"td\").eq(1).find(\"select\").hasClass(\"border-danger\")) {\r\n                    $(savebtn).addClass(\"disabled\");\r\n                }\r\n            });\r\n        },\r\n\r\n        CheckDuplicateExcelRecord(ctrlid) {\r\n            // // //debugger;\r\n            var objarr = [];\r\n            var flag = true;\r\n            $(\"table#tblbulkservice tr#trdata\").each(function () {\r\n                var ddlval = $(this).find(\"td\").eq(1).find(\"select option:selected\").text();\r\n                objarr.push(ddlval);\r\n            });\r\n            var controlid;\r\n            var dupid2;\r\n            var dupid;\r\n            var indexno = 1002;\r\n            var flag = false;\r\n            var i; var j;\r\n            for (i = 1; i < objarr.length; i++) {\r\n                controlid = '#ddlExcelColumn' + indexno;\r\n                for (j = i + 1; j < objarr.length; j++) {\r\n                    if (objarr[i] == objarr[j] && objarr[i] != \"Select Column\") {\r\n                        flag = true;\r\n                        dupid = controlid;\r\n                        dupid2 = '#ddlExcelColumn' + (1002 + (j - 1));\r\n                        break;\r\n                    }\r\n                }\r\n                if (flag) {\r\n                    break;\r\n                }\r\n                $(controlid).removeClass('border border-danger');\r\n                $(savebtn).removeClass(\"disabled\");\r\n                indexno++;\r\n            }\r\n            if (flag) {\r\n                $(dupid).addClass('border border-danger');\r\n                $(dupid2).addClass('border border-danger');\r\n                $(savebtn).addClass(\"disabled\");\r\n            }\r\n            flag = false;\r\n            $(\"table#tblbulkservice tr#trdata\").each(function () {\r\n                if ($(this).find(\"td\").eq(0).find(\"select\").hasClass(\"border-danger\")) {\r\n                    $(savebtn).addClass(\"disabled\");\r\n                }\r\n            });\r\n        },\r\n\r\n\r\n        SaveServiceFile: function () {\r\n            this.isLoading = true;\r\n            var vm = this;\r\n            var xml = \"<serviceentries>\\n\";\r\n            var saveFlag = false;\r\n            var hasSelection = false;\r\n\r\n            function checkMandatoryColumns() {\r\n                var mandatoryCols = vm.allrequiredcol.split(\",\");\r\n                mandatoryCols.forEach(index => {\r\n                    $(\"table#tblbulkservice tr.visible\").each(function () {\r\n                        if (!$(this).hasClass('alert-success') && index == $(this).find('#ddlTableColumn' + $(this).attr(\"crtrwid\")).val()) {\r\n                            vm.requiredcol = vm.requiredcol.replace(new RegExp(index + ',?'), '');\r\n                        }\r\n                    });\r\n                });\r\n                return vm.requiredcol.length > 0;\r\n            }\r\n\r\n            if (checkMandatoryColumns()) {\r\n                $(document).scrollTop(0);\r\n                this.isLoading = false;\r\n                return;\r\n            }\r\n\r\n            $(\"table#tblbulkservice tr.visible\").each(function () {\r\n                var row = $(this);\r\n                var rowid = row.attr(\"crtrwid\");\r\n                var ddlTableColumn = row.find('#ddlTableColumn' + rowid);\r\n                var ddlExcelColumn = row.find('#ddlExcelColumn' + rowid);\r\n\r\n                if (ddlTableColumn.val() !== \"\") {\r\n                    hasSelection = true;\r\n                    if (!row.hasClass('alert-success')) {\r\n                        if (ddlExcelColumn.val() === \"\") {\r\n                            var valid = CheckRequiredR(\"ddlExcelColumn\" + rowid, vm.$t(\"PleaseSelectAnyRecordsForFurther\"), \"invalid-feedback\");\r\n                            if (valid !== '') {\r\n                                $(document).scrollTop(0);\r\n                                vm.isLoading = false;\r\n                                return false;\r\n                            }\r\n                        } else {\r\n                            saveFlag = true;\r\n                            var original_column_name = ddlTableColumn.val();\r\n                            var data_type = ddlTableColumn.find(\":selected\").attr('data_type').toLowerCase();\r\n                            const pattern = /^\\s*([^()]+)/;\r\n                            const match = ddlExcelColumn.val().trim().toLowerCase().match(pattern);\r\n                            let result = match ? match[1].trim() : \"\";\r\n                            result = result.replace(/[^a-zA-Z0-9\\s]+/g, \"\").replace(/ /g, \"_\").replace(/_+$/g, '');\r\n                            var formattedText = result;\r\n                            var excel_column_name = formattedText;\r\n                            var excel_data_type = ddlExcelColumn.find(\":selected\").attr('data_type').toLowerCase();\r\n\r\n                            xml += `\\n<Service>\r\n                    \\n\\t<batch_id>${$('#hdnBatchId').val()}</batch_id>\r\n                    \\n\\t<row_id>${rowid}</row_id>\r\n                    \\n\\t<original_column_name>${original_column_name}</original_column_name>\r\n                    \\n\\t<column_name>${original_column_name}</column_name>\r\n                    \\n\\t<data_type>${data_type}</data_type>\r\n                    \\n\\t<excel_column_name>${excel_column_name}</excel_column_name>\r\n                    \\n\\t<excel_data_type>${excel_data_type}</excel_data_type>\r\n                    \\n</Service>\\n`;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            $(\"table#tblbulkservice tr.visible\").toggleClass(\"border border-danger\", !hasSelection);\r\n\r\n            xml += \"\\n</serviceentries>\\n\";\r\n            if (saveFlag) {\r\n                var postJSON = {\r\n                    xmltrackentries: xml\r\n                };\r\n                vm.ImpServiceTableMapping = JSON.stringify(postJSON);\r\n                vm.batchId = $('#hdnBatchId').val();\r\n                vm.chkImpWorkTypeMapping = true;\r\n                vm.chkImpServiceMapping = false;\r\n            }\r\n            this.isLoading = false;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportService.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportService.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImportService.vue?vue&type=template&id=39d8aeb5&\"\nimport script from \"./ImportService.vue?vue&type=script&lang=js&\"\nexport * from \"./ImportService.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full d-flex\"},[_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('ManageWorkType')))]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('span',{staticClass:\"user-guide\"},[_c('a',{staticClass:\"ancuserguide text-white\",attrs:{\"data-toggle\":\"collapse\",\"href\":\"#collapseReplyUG\",\"role\":\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseExample\"}},[_c('em',{staticClass:\"fa fa-files-o pr-2\"}),_vm._v(_vm._s(_vm.$t('GuideForUser')))]),_c('div',{staticClass:\"divancuserguide collapse overflow-auto\",attrs:{\"id\":\"collapseReplyUG\"}},[_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarreplyuserguideMangeView\"}},[_c('div',{staticClass:\"con\",domProps:{\"innerHTML\":_vm._s(_vm.$t('UgAddEditWorkType'))}})])])])]),_c('div',{staticClass:\"modal-body\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-AutoCreateService\",fn:function({ data }){return [_c('div',{staticClass:\"form-group mb-0\"},[_c('label',{staticClass:\"switch\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.fieldInfo.value),expression:\"data.fieldInfo.value\"},{name:\"disabled\",rawName:\"v-disabled\",value:(_vm.disabled),expression:\"disabled\"}],staticClass:\"form-check-input custom-control-input dynamic\",attrs:{\"type\":\"checkbox\",\"name\":'IsLogin'},domProps:{\"checked\":Array.isArray(data.fieldInfo.value)?_vm._i(data.fieldInfo.value,null)>-1:(data.fieldInfo.value)},on:{\"change\":[function($event){var $$a=data.fieldInfo.value,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(data.fieldInfo, \"value\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(data.fieldInfo, \"value\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(data.fieldInfo, \"value\", $$c)}},function($event){return _vm.checkForAutoCreateEnable(data.fieldInfo.value)}]}}),_c('span',{staticClass:\"slider round\",staticStyle:{\"cursor\":\"default\"}},[_c('span',{staticClass:\"slider-yes\"},[_vm._v(_vm._s(_vm.$t('Yes')))]),_c('span',{staticClass:\"slider-no\"},[_vm._v(_vm._s(_vm.$t('No')))])])])]),(_vm.AutoServiceDisabled)?_c('span',{staticClass:\"text-danger\",staticStyle:{\"font-size\":\"12px\"}},[_vm._v(_vm._s(_vm.$t('AutoServiceDisabled')))]):_vm._e()]}}])})],1)])])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"my-popups\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"modal d-block\">\r\n            <div class=\"modal-dialog modal-dialog-centered\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header theme-primary partition-full d-flex\">\r\n                        <h4 class=\"modal-title\">{{ $t('ManageWorkType') }}</h4>\r\n                        <button type=\"button\" class=\"close\" v-on:click=\"Close\">\r\n                            <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                        </button>\r\n                        <span class=\"user-guide\">\r\n                            <a class=\"ancuserguide text-white\" data-toggle=\"collapse\" href=\"#collapseReplyUG\" role=\"button\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseExample\"> <em\r\n                                    class=\"fa fa-files-o pr-2\"></em>{{ $t('GuideForUser') }}</a>\r\n                            <div id=\"collapseReplyUG\" class=\"divancuserguide collapse overflow-auto\">\r\n                                <div id=\"scrollbarreplyuserguideMangeView\" class=\"custom-scrollbar-js\">\r\n                                    <div class=\"con\" v-html=\"$t('UgAddEditWorkType')\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\">\r\n                            <template v-slot:tgslot-AutoCreateService=\"{ data }\">\r\n                                <div class=\"form-group mb-0\">\r\n                                    <label class=\"switch\">\r\n                                        <input class=\"form-check-input custom-control-input dynamic\" type=\"checkbox\"\r\n                                            v-model=\"data.fieldInfo.value\" v-bind:name=\"'IsLogin'\"\r\n                                            v-on:change=\"checkForAutoCreateEnable(data.fieldInfo.value)\"\r\n                                            v-disabled=\"disabled\">\r\n                                        <span class=\"slider round\" style=\"cursor:default;\">\r\n                                            <span class=\"slider-yes\">{{ $t('Yes') }}</span>\r\n                                            <span class=\"slider-no\">{{ $t('No') }}</span>\r\n                                        </span>\r\n                                    </label>\r\n                                </div>\r\n                                <span v-if=\"AutoServiceDisabled\" class=\"text-danger\" style=\" font-size: 12px;\">{{\r\n                                    $t('AutoServiceDisabled') }}</span>\r\n                            </template>\r\n                        </dynamic-form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nexport default {\r\n    props: {\r\n        WorkTypeId: {\r\n            type: Number,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            fileData: [],\r\n            AutoServiceDisabled: true,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"triple\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('WorkTypeName'),\r\n                            name: \"WorkTypeName\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('EnterWorkTypeName'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: this.$t('DESCRIPTION'),\r\n                            name: \"DESCRIPTION\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('EnterDescription'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('AutoCreateService'),\r\n                            name: \"AutoCreateService\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: \"\",\r\n                            settings: {\r\n                                isInSlot: true\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"NumericField\",\r\n                            label: this.$t('MinimumCrewSize'),\r\n                            name: \"MinimumCrewSize\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('EnterMinimumCrewSize'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"NumericField\",\r\n                            label: this.$t('RecommendedCrewSize'),\r\n                            name: \"RecommendedCrewSize\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('EnterRecommendedCrewSize'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('DurationType'),\r\n                            name: \"DurationType\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('SelectDuration'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                            config: {\r\n                                options: [{ value: \"HH\", name: \"Hours\" }, { value: \"MM\", name: \"Minutes\" }]\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"NumericField\",\r\n                            label: this.$t('EstimateDuration'),\r\n                            name: \"EstimateDuration\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"NumericField\",\r\n                            label: this.$t('MaxDuration'),\r\n                            name: \"MaxDuration\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"ColorField\",\r\n                            label: this.$t('ColorField'),\r\n                            name: \"ColorField\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"FileField\",\r\n                            showLabel: false,\r\n                            name: \"Attachment\",\r\n                            label: this.$t('MaxDuration'),\r\n                            placeholder: \"\",\r\n                            validationRules: \"\",\r\n                            FieldIndex: 0,\r\n                            config: {\r\n                                maxSize: 5,\r\n                                accept: [\r\n                                    {\r\n                                        fileType: 'png',\r\n                                        iconClass: 'fa-file-image-o'\r\n                                    },\r\n                                    {\r\n                                        fileType: 'jpg',\r\n                                        iconClass: 'fa-file-image-o'\r\n                                    },\r\n                                    {\r\n                                        fileType: 'pdf',\r\n                                        iconClass: 'fa-file-archive-o'\r\n                                    }\r\n                                ],\r\n                                onChange: this.GetBase64String,\r\n                                showAddIcon: false,\r\n                                onAddButtonClick: '',\r\n                                multiple: false\r\n                            }\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Close\",\r\n                    onClick: this.Close\r\n                }\r\n            ],\r\n        }\r\n    },\r\n    created: async function () {\r\n        this.FetchData();\r\n    },\r\n    methods: {\r\n        FetchData: function () {\r\n            var vueObj = this;\r\n            var url = `WtId=${vueObj.WorkTypeId}`;\r\n            DataServices.FetchDataByWorktypeId(url).then(\r\n                function (response) {\r\n                    if (response.data != null && response.data != \"\") {\r\n                        if (response.data.status == \"Success\") {\r\n                            (vueObj.FormSchema)[0].Data[0].value = response.data.result.data[0].worktype_name;\r\n                            (vueObj.FormSchema)[0].Data[1].value = response.data.result.data[0].description;\r\n                            (vueObj.FormSchema)[0].Data[2].value = response.data.result.data[0].auto_create_sa;\r\n                            (vueObj.FormSchema)[0].Data[3].value = response.data.result.data[0].min_crew_size;\r\n                            (vueObj.FormSchema)[0].Data[4].value = response.data.result.data[0].rec_crew_size;\r\n                            (vueObj.FormSchema)[0].Data[5].value = response.data.result.data[0].duration_type;\r\n                            (vueObj.FormSchema)[0].Data[6].value = response.data.result.data[0].estimate_duration;\r\n                            (vueObj.FormSchema)[0].Data[7].value = response.data.result.data[0].maximum_duration;\r\n                            (vueObj.FormSchema)[0].Data[9].value = response.data.result.data[0].color;\r\n                        }\r\n                        if (response.data.result.data[0].auto_create_sa == true) {\r\n                            vueObj.AutoServiceDisabled = false;\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        },\r\n        Close: function () {\r\n            this.$parent.AddWorkTypePopup = false;\r\n        },\r\n        checkForAutoCreateEnable: function (isChecked) {\r\n            var vm = this;\r\n            if (isChecked == true) {\r\n                vm.AutoServiceDisabled = false;\r\n            } else {\r\n                vm.AutoServiceDisabled = true;\r\n            }\r\n        },\r\n        GetBase64String: function (evt) {\r\n            debugger;\r\n            try {\r\n                // debugger;\r\n                var vm = this;\r\n                //alert(vm.apiurl);\r\n                vm.fileData = [];\r\n\r\n                var f = evt.target.files[0]; // FileList object\r\n                var reader = new FileReader();\r\n                // Closure to capture the file information.\r\n                reader.onload = (function (theFile) {\r\n                    debugger;\r\n                    return function (e) {\r\n                        var binaryData = e.target.result;\r\n                        //Converting Binary Data to base 64\r\n                        var base64StringEncoded = window.btoa(binaryData);\r\n                        //showing file converted to base64\r\n\r\n                        var fileName = f.name;\r\n                        vm.fileName = fileName;\r\n                        var n = fileName.lastIndexOf(\".\");\r\n                        var extensionName = fileName.substring(n + 1, fileName.length);\r\n\r\n                        vm.fileExt += \".\" + extensionName;\r\n                        var attachemnetMime = '{\"ContentType\":\"' + f.type + '\",\"Size\":\"' + f.size + '\",\"Extension\":\"' + extensionName + '\"}';\r\n                        var fileSize = f.size;\r\n                        vm.fileSize = fileSize;\r\n                        // debugger;\r\n                        // var ggg = vm.configData;\r\n                        var fileObj = {\r\n                            attachement_mime: attachemnetMime,\r\n                            fileName: fileName,                           \r\n                            fileSize: f.size,\r\n                            contentType: f.type,\r\n                            base64String: base64StringEncoded\r\n                        };\r\n\r\n                        vm.fileData.push(fileObj);\r\n                    };\r\n                })(f);\r\n                // Read in the image file as a data URL.\r\n                reader.readAsBinaryString(f);\r\n            }\r\n            catch (ex) {\r\n            }\r\n        },\r\n        onSubmit(formfields, val) {\r\n            debugger\r\n            var vm = this;\r\n            var jsonobj = {\r\n                WorkTypeID: vm.WorkTypeId == null ? 0 : vm.WorkTypeId,\r\n                WorktypeName: formfields.WorkTypeName,\r\n                Desc: formfields.DESCRIPTION,\r\n                Auto: formfields.AutoCreateService,\r\n                MinimumCrew: formfields.MinimumCrewSize,\r\n                Crew: formfields.RecommendedCrewSize,\r\n                DurationType: formfields.DurationType,\r\n                Duration: formfields.EstimateDuration,\r\n                MaxDuration: formfields.MaxDuration,\r\n                color: formfields.ColorField,\r\n                due_date_offset: '',\r\n                Exect: '',\r\n                CommissionType: vm.CommissionType,\r\n                CommissionValue: vm.CommissionValue,\r\n                FileData: vm.fileData,             \r\n                status_id: 1001                \r\n            };\r\n            var params = JSON.stringify(jsonobj);\r\n            DataServices.SaveWorkType(params).then((response) => {\r\n                if (response.data.status == 'Success') {\r\n                    var rslt = JSON.parse(response.data.result);\r\n                    if (rslt.MSG == 'ALREADY EXISTS') {\r\n                        vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"WorkType\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                        // vm.Close();\r\n                    }\r\n                    else {\r\n                        if (vm.WorkTypeId > 0) {\r\n                            vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"WorkType\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                            vm.Close();\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"WorkType\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                            vm.Close();\r\n                        }\r\n                        vm.$parent.FetchRecords();\r\n                    }\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t(\"AddedError\", [vm.$t(\"Resource\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                    vm.Close();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddWorkTypePopup.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddWorkTypePopup.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddWorkTypePopup.vue?vue&type=template&id=5ac5ba48&\"\nimport script from \"./AddWorkTypePopup.vue?vue&type=script&lang=js&\"\nexport * from \"./AddWorkTypePopup.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}