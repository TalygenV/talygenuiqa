{"version":3,"sources":["webpack:///./src/components/Common/MapComponent.vue?5a60","webpack:///./src/components/Common/MapComponent.vue","webpack:///src/components/Common/MapComponent.vue","webpack:///./src/components/Common/MapComponent.vue?c16a","webpack:///./src/components/Common/MapComponent.vue?aaa3","webpack:///./src/components/Common/MapComponent.vue?41a6","webpack:///./src/components/Common/MapComponent.vue?3bb4","webpack:///./src/components/Modal/modalSaveZone.vue","webpack:///src/components/Modal/modalSaveZone.vue","webpack:///./src/components/Modal/modalSaveZone.vue?c763","webpack:///./src/components/Modal/modalSaveZone.vue?8301"],"names":["content","__esModule","default","module","i","locals","exports","add","render","_vm","this","_c","_self","attrs","isLoading","staticClass","mapType","config","isShowSearchBox","_e","undefined","isShowCurrentLocation","on","CurrentLocation","_v","isShowGetDirection","class","showSetting","GetDirection","isShowLocator","ViewLocatorOnMap","isShowEtaMap","$event","LoadLocatorDataonMap","isShowEtaPipeLines","_m","staticStyle","_l","UtilityMapData","item","index","key","_s","LAYER_NAME","ShowUtilityMap","showSaveZone","OpenSaveZone","showDeleteFeature","DeleteFeature","style","mapHeight","mapWidth","mapContainer","ShowTravelMode","domProps","time","TravelMode","isShowSaveExtentButton","SaveMapExtent","showSaveZonePopUp","SaveZoneData","Close","staticRenderFns","components","SaveZone","props","required","Data","isShowDrawButton","type","String","latLng","selectedUser","editZone","zoneId","data","showAddZone","colors","address","UserName","UserEmailId","imageMarker","mapLayer","map","locations","locationPriority","locationname","ticketNumberList","LocationwithPriority","markers","mapZoom","mapMarker","markerCluster","startingPoint","showSettingPopup","lngLatData","fullAddress","leafLetReferenceNumber","polygonData","polygonNewShapeId","zoneData","drawingManager","currentSelectedShape","myPolygon","editableLayers","showHideEtaMap","watch","handler","setTimeout","ShowLocationOnGoogleMap","deep","ShowDrawingManager","ViewOnMap","mounted","initMapBox","initLeafletMap","created","GetUserInfo","Name","Email","setMap","GoogleMapScript","document","createElement","setAttribute","head","appendChild","cluserJsUrl","FontAwesomeMarker","initAutocompletes","methods","vm","input","getElementById","searchBox","google","maps","places","SearchBox","addListener","setBounds","getBounds","place","getPlaces","bounds","LatLngBounds","extend","geometry","location","fitBounds","setZoom","navigator","geolocation","getCurrentPosition","GetCurrentLocation","geoError","alert","position","latitude","coords","longitude","LatLng","setCenter","$emit","coordinates","JSON","parse","localStorage","getItem","loadModules","then","Map","MapView","FeatureLayer","Graphic","GraphicsLayer","basemap","container","extent","xmin","ymin","xmax","ymax","spatialReference","layerUrl","Colors","names","aqua","azure","beige","black","blue","brown","cyan","darkblue","darkcyan","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkviolet","fuchsia","gold","green","indigo","khaki","lightblue","lightcyan","lightgreen","lightgrey","lightpink","lightyellow","lime","magenta","maroon","navy","olive","orange","pink","purple","violet","red","silver","white","yellow","random","result","count","prop","Math","name","rgb","split","forEach","layerColor","toUpperCase","trailsRenderer","symbol","color","visualVariables","field","minDataValue","maxDataValue","minSize","maxSize","url","renderer","center","y","x","zoom","graphicsLayer","polygon","y1","x1","rings","simpleFillSymbol","outline","width","polygonGraphic","catch","err","console","error","showRoutePosition","StartPoint","EndPoint","pinLatLong","mapicon","indexOf","myLatLng","lat","lng","icon","scaledSize","Size","origin","Point","anchor","marker","Marker","infowindow","InfoWindow","open","push","lineSymbol","path","SymbolPath","CIRCLE","fillOpacity","scale","polylineDotted","strokeColor","strokeOpacity","icons","offset","repeat","rendererOptions","suppressMarkers","polylineOptions","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","start","calculateAndDisplayRoute","selectedMode","route","destination","travelMode","response","status","setDirections","iwContent","legs","distance","text","duration","infoWindows","event","setPosition","close","window","lngLat","lon","parseFloat","html","popup","mapboxgl","Popup","setHTML","el","className","backgroundImage","backgroundSize","height","setPopup","setLngLat","addTo","accessToken","getLayer","addLayer","id","source","features","properties","paint","req","XMLHttpRequest","onload","json","code","routes","geojson","getSource","setData","layout","e","queryRenderedFeatures","point","layers","description","toFixed","timeConvert","ShowMsgWithMsg","ex","send","markerIcon","L","iconUrl","iconSize","setContent","bindPopup","openPopup","control","Routing","waypoints","routeWhileDragging","createMarker","summary","drawing","DrawingManager","drawingControl","markerOptions","draggable","drawingControlOptions","ControlPosition","RIGHT_CENTER","drawingModes","setEditable","editable","GetGoogleAddressToDraw","appendingUrl","DataServices","TrackByUserId","length","userTrackData","ShowUserOnMap","ShowAlert","$t","userLngLatArr","$","each","IMAGE_PATH","LATITUDE","LONGITUDE","NAME","DEPARTMENT_NAME","TRACK_ID","TICKET_NUMBER","log","flyTo","essential","myCenter","location_nw","title","TicketNumber","ticket_number","panTo","ticketNumber","closeOnClick","setLatLng","Address","openOn","animate","mark","showLoader","zoomControl","mapTypeControlOptions","MapTypeControlStyle","HORIZONTAL_BAR","BOTTOM_RIGHT","zoomControlOptions","mapTypeId","MapTypeId","ROADMAP","newShape","overlay","value","priority","color_code","popupHeaderHtml","popupBodyHtml","popupFooterHtml","refValue","Coords","polygons","latLong","Polygon","paths","isEditable","strokeWeight","fillColor","opacity","Id","e1","setOptions","ShapeId","ar","l","getPath","FullAddress","Date","getTime","floor","curLatLng","getArray","Lat","Lng","geocoder","Geocoder","geocode","results","formatted_address","CompleteAddress","locatorids","latlong","markerClusterOptions","gridSize","maxZoom","styles","textColor","textSize","MarkerClusterer","LoadGoogleHeatMap","LoadMapboxHeatMap","ShowEtaMap","obj","apikey","vueObj","indexMap","grep","element","scrollZoom","boxZoom","MapboxGeocoder","placeholder","addControl","draw","MapboxDraw","displayControlsDefault","controls","line_string","trash","GetMapBoxAddressToDraw","nav","NavigationControl","attachmentCountWithExt","countArray","AttItem","TYPE","COUNT","parseInt","addSource","geoJSON","GetClusterData","is_high_profile","mapdetail","MAP_TYPE","LAT_LNG","bound","reduce","coord","LngLatBounds","googleJson","dummy","objData","isHighProfile","loadImage","image","addImage","sdf","cluster","clusterMaxZoom","clusterRadius","filter","clusterId","cluster_id","getClusterExpansionZoom","easeTo","slice","getCanvas","cursor","originalEvent","ctrlKey","preventDefault","_enabled","enable","disable","hide","off","remove","mapY","mapX","tiles","tileLayer","attribution","getFullYear","latlng","GetLeafLetAddressToDraw","provider","OpenStreetMapProvider","searchControl","GeoSearchControl","markerClusterGroup","iconCreateFunction","divIcon","getChildCount","LeafIcon","Icon","options","shadowSize","iconAnchor","shadowAnchor","popupAnchor","iconUrls","SetCluster","fill","innerHTML","myIcon","ancCtrl","ctrl","closest","addClass","removeClass","arr","lats","lngitude","profile","minutes","layer","removeLayer","getLocation","savePosition","positionError","timeout","message","post","initMap","GetIsoData","isLoad","rangeArray","val","ajax","dataType","headers","stringify","location_type","range_type","range","interval","intersections","async","contentType","success","geoJson","onEachFeature","feature","ratio","SetColor","weight","addEventListener","target","totalMinutes","params","find","splitMin","addGeoJson","setStyle","getProperty","GetZoneManagementData","objs","ZoneId","ResolverUserId","JsonData","ZoneName","Description","ZoneType","YardEmails","row","is","UploadGeoJSON","City","LongName","Country","AdministrativeAreaLevel1","AdministrativeAreaLevel2","AdministrativeAreaLevel3","State","PinCode","featureGroup","FeatureGroup","Control","Draw","edit","poly","allowIntersection","drawError","shapeOptions","polyline","circle","circlemarker","getLatLngs","layerType","address_components","types","short_name","long_name","AdministrativeArea3","_latlng","newShapes","latLngs","g","GeocoderStatus","OK","getPosition","removeSource","urlBase","lati","lngi","getIso","query","method","done","LoadMapboxLayer","backgroundPosition","colorName","tm","component","___CSS_LOADER_API_IMPORT___","buttons","FormSchema","onSubmit","zoneEditData","layoutType","astype","label","validationRules","max","showAddIcon","onChange","onChangeRadio","onClick","Save","ListData","ZONE_NAME","ZONE_TYPE","ZONE_DESCRIPTION","ZONE_ID"],"mappings":"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","file":"js/chunk-7a97b6f6.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapComponent.vue?vue&type=style&index=0&id=9ad80734&prod&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"61cd841b\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"container-fluid mt-2\"},[_c('div',[_c('div',{staticClass:\"row mt-0.5\",attrs:{\"id\":\"checkForZone\"}},[(_vm.mapType=='Google' && _vm.config.isShowSearchBox==true)?_c('div',{staticClass:\"col-lg-5 col-sm-12\"},[_c('div',{staticClass:\"form-group d-flex\"},[_c('div',{staticClass:\"input-group customsearchbox divcityshown\"},[(_vm.config.isShowSearchBox==true)?_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"pac-input\",\"maxlength\":\"50\",\"placeholder\":\"Enter Your Location or Zip Code\"}}):_vm._e()])])]):_vm._e(),_c('div',{staticClass:\"col-lg-3 col-sm-12\"},[(_vm.config!=undefined && _vm.config.isShowCurrentLocation==true)?_c('div',{staticClass:\"form-group\"},[_c('a',{staticClass:\"btn btn-secondary\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.CurrentLocation}},[_vm._v(\"Use my location\")])]):_vm._e()])]),_c('div',{staticClass:\"search\"},[_c('div',{staticClass:\"map-result\"},[_c('div',{staticClass:\"map-actions\"},[(_vm.config!=undefined && _vm.config.isShowGetDirection==true)?_c('span',{staticClass:\"save legends_low\"},[(_vm.config.isShowGetDirection==true)?_c('a',{class:{'mp-active':_vm.showSetting==false,'mg-success':_vm.showSetting==true},attrs:{\"href\":\"javascript:;\",\"title\":\"GetDirection\"},on:{\"click\":_vm.GetDirection}},[_c('em',{staticClass:\"fa fa-map-marker\"})]):_vm._e()]):_vm._e(),_vm._v(\"  \"),(_vm.config!=undefined && _vm.config.isShowLocator==true)?_c('span',{staticClass:\"save legends_low\"},[(_vm.config.isShowLocator==true)?_c('a',{class:{'mp-active':_vm.showSetting==false,'mg-success':_vm.showSetting==true},attrs:{\"href\":\"javascript:;\",\"title\":\"View Locator on map\"},on:{\"click\":_vm.ViewLocatorOnMap}},[_c('em',{staticClass:\"fa fa-map-marker\"})]):_vm._e()]):_vm._e(),_vm._v(\"  \"),(_vm.config!=undefined && _vm.config.isShowEtaMap==true)?_c('span',{staticClass:\"edit legends_profile\"},[(_vm.config.isShowEtaMap==true)?_c('a',{attrs:{\"href\":\"javascript:;\",\"title\":\"ETA Map\"},on:{\"click\":function($event){return _vm.LoadLocatorDataonMap('locator')}}},[_c('em',{staticClass:\"fa fa-map\"})]):_vm._e()]):_vm._e(),(_vm.config!=undefined && _vm.config.isShowEtaPipeLines==true)?_c('span',{staticClass:\"edit legends_high esri_prof\"},[_vm._m(0),_c('div',{staticClass:\"dropdown\"},[_vm._m(1),_c('div',{staticClass:\"dropdown-menu esri_prof_data\",staticStyle:{\"display\":\"block\"}},[_vm._m(2),_c('div',{staticClass:\"w-100 mb-2\"},_vm._l((_vm.UtilityMapData),function(item,index){return _c('a',{key:index,staticClass:\"dropdown-item p-0\",attrs:{\"href\":\"javascript:;\"}},[_c('div',{staticClass:\"custom-control custom-checkbox custom-control-inline w-100\"},[_c('input',{staticClass:\"custom-control-input dynamic customcheckboxUtilityMap\",attrs:{\"type\":\"checkbox\"}}),_c('label',{staticClass:\"custom-control-label pt-1\",attrs:{\"type\":\"checkbox\"}},[_c('label',{staticClass:\"font-weight-bold\"},[_vm._v(_vm._s(item.LAYER_NAME))])])])])}),0),_c('div',[_c('a',{staticClass:\"btn btn-primary d-block text-white py-2\",attrs:{\"href\":\"javascript:;\",\"title\":\"Go\"},on:{\"click\":_vm.ShowUtilityMap}},[_vm._v(\"Go\"),_c('i',{staticClass:\"fa fa-angle-double-right pl-2\"})])])])])]):_vm._e()]),(_vm.showSaveZone)?_c('div',{staticClass:\"gmnoprint\",staticStyle:{\"position\":\"absolute\",\"right\":\"0px\",\"z-index\":\"999999\",\"top\":\"0px\"},attrs:{\"id\":\"customSaveButton\"},on:{\"click\":_vm.OpenSaveZone}},[_vm._m(3)]):_vm._e(),(_vm.showDeleteFeature)?_c('div',{staticStyle:{\"position\":\"absolute\",\"right\":\"1670px\",\"z-index\":\"999999\",\"top\":\"0px\"},attrs:{\"id\":\"customSaveButton\"},on:{\"click\":_vm.DeleteFeature}},[_vm._m(4)]):_vm._e(),_c('div',{staticClass:\"map\"},[_c('div',{staticClass:\"map_canvas map_ipadcontrol\",style:({'min-height': _vm.mapHeight==undefined?'500px':_vm.mapHeight,'min-width':_vm.mapWidth==undefined?'100%':_vm.mapWidth}),attrs:{\"id\":_vm.mapContainer}}),_c('div',{staticClass:\"w-100 float-left\",staticStyle:{\"position\":\"absolute\",\"top\":\"0px\"}},[(_vm.showSetting==false)?_c('a',{staticClass:\"showduration anchideduration\",attrs:{\"title\":\"Hide\"},on:{\"click\":_vm.ShowTravelMode}},[_vm._v(\"Hide\")]):_vm._e(),(_vm.showSetting==true)?_c('a',{staticClass:\"showduration ancshowduration\",attrs:{\"title\":\"Show Setting\"},on:{\"click\":_vm.ShowTravelMode}},[_vm._v(\"Show Setting\")]):_vm._e(),_c('div',{staticClass:\"position-absolute float-left my24 mx24 bg-gray-faint round settingPopup d-none\",staticStyle:{\"z-index\":\"999999\"}},[_c('div',{attrs:{\"id\":\"params\"}},[_vm._m(5),_vm._v(\" \"),_c('h4',{staticClass:\"txt-m font-weight-bold\"},[_vm._v(\"Choose Travel Mode:\")]),_vm._m(6),_c('h4',{staticClass:\"txt-m font-weight-bold\"},[_vm._v(\"Choose Maximum Duration:\")]),_c('div',{staticClass:\"w-100 float-left\",staticStyle:{\"margin-bottom\":\"15px\"}},[_c('div',{staticClass:\"w-30 float-left\"},[_c('label',{staticClass:\"switch\"},[_c('input',{staticClass:\"dynamic\",attrs:{\"type\":\"checkbox\",\"name\":\"duration\",\"checked\":\"checked\"},domProps:{\"value\":_vm.time},on:{\"onChange\":function($event){return _vm.TravelMode(_vm.time)}}}),_c('span',{staticClass:\"sliderchk round\"})]),_c('div',{staticClass:\"fs_textname\"},[_vm._v(\"Minutes10\")])]),_c('div',{staticClass:\"w-30 float-left\"},[_c('label',{staticClass:\"switch\"},[_c('input',{staticClass:\"dynamic\",attrs:{\"type\":\"checkbox\",\"name\":\"duration\",\"checked\":\"checked\"},domProps:{\"value\":_vm.time*2},on:{\"onChange\":function($event){return _vm.TravelMode(_vm.time*2)}}}),_c('span',{staticClass:\"sliderchk round\"})]),_c('div',{staticClass:\"fs_textname\"},[_vm._v(\"Minutes20\")])]),_c('div',{staticClass:\"w-30 float-left\"},[_c('label',{staticClass:\"switch\"},[_c('input',{staticClass:\"dynamic\",attrs:{\"type\":\"checkbox\",\"name\":\"duration\",\"checked\":\"checked\"},domProps:{\"value\":_vm.time*3},on:{\"onChange\":function($event){return _vm.TravelMode(_vm.time*3)}}}),_c('span',{staticClass:\"sliderchk round\"})]),_c('div',{staticClass:\"fs_textname\"},[_vm._v(\"Minutes30\")])])])])])])])])])])]),_c('div',{staticClass:\"float-right mt-2\"},[(_vm.config!=undefined && _vm.config.isShowSaveExtentButton==true)?_c('a',{staticClass:\"btn btn-primary save-btn mr-2\",attrs:{\"title\":\"\",\"name\":\"btnSaveCity\",\"tabindex\":\"6\",\"data-toggle-tooltip\":\"tooltip\",\"data-original-title\":\"Save\"},on:{\"click\":_vm.SaveMapExtent}},[_c('i',{staticClass:\"fa fa-floppy-o pr-1\"}),_vm._v(\"Save\")]):_vm._e()]),(_vm.showSaveZonePopUp)?_c('SaveZone',{on:{\"SaveZoneData\":_vm.SaveZoneData,\"OpenSaveZone\":_vm.OpenSaveZone,\"Close\":_vm.Close}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('a',{attrs:{\"href\":\"javascript:;\",\"title\":\"UtilityMap\"}},[_c('i',{staticClass:\"fa fa-map-pin\",attrs:{\"aria-hidden\":\"true\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('a',{attrs:{\"href\":\"javascript:;\",\"title\":\"UtilityMap\"}},[_c('i',{staticClass:\"fa fa-map-pin\",attrs:{\"aria-hidden\":\"true\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w-100 bg-grey\"},[_c('div',{staticClass:\"custom-control custom-checkbox custom-control-inline w-100\"},[_c('input',{staticClass:\"custom-control-input dynamic customcheckboxselectall\",attrs:{\"id\":\"customcheckboxselectallUtilityMap\",\"type\":\"checkbox\",\"value\":\"\"}}),_c('label',{staticClass:\"custom-control-label pt-1\",attrs:{\"for\":\"customcheckboxselectallUtilityMap\",\"type\":\"checkbox\",\"value\":\"\"}},[_vm._v(\"SelectAll\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"background-color\":\"rgb(40, 167, 69)\",\"color\":\"rgb(255, 255, 255)\",\"border-style\":\"solid\",\"border-width\":\"1px\",\"border-color\":\"rgb(204, 204, 204)\",\"margin-top\":\"4px\",\"margin-left\":\"-6px\",\"cursor\":\"pointer\",\"text-align\":\"center\"},attrs:{\"title\":\"Save Zone\"}},[_c('div',{staticStyle:{\"font-family\":\"Arial, sans-serif\",\"font-size\":\"14px\",\"padding\":\"0.6rem 0.8rem\"}},[_c('i',{staticClass:\"fa fa-save pr-2\"}),_vm._v(\"Save Zone\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"background-color\":\"rgb(240, 4, 4)\",\"color\":\"rgb(255, 255, 255)\",\"border-style\":\"solid\",\"border-width\":\"1px\",\"border-color\":\"rgb(204, 204, 204)\",\"margin-top\":\"4px\",\"margin-left\":\"-6px\",\"cursor\":\"pointer\",\"text-align\":\"center\"},attrs:{\"title\":\"Delete Save Zone\"}},[_c('div',{staticStyle:{\"font-family\":\"Arial, sans-serif\",\"font-size\":\"14px\",\"padding\":\"0.6rem 0.8rem\"}},[_c('i',{staticClass:\"fa fa-trash pr-2\"}),_vm._v(\"Delete Selected Shape\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row float-left\"},[_c('div',{staticClass:\"col float-left text-dark px-2\"},[_c('span',{staticClass:\"timelegend min10\"}),_vm._v(\" Minutes10 \")]),_c('div',{staticClass:\"col float-left text-dark px-2\"},[_c('span',{staticClass:\"timelegend min20\"}),_vm._v(\" Minutes20 \")]),_c('div',{staticClass:\"col float-left text-dark px-2\"},[_c('span',{staticClass:\"timelegend min30\"}),_vm._v(\" Minutes30 \")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"mr12 toggle-group text-center\"},[_c('label',{staticClass:\"toggle-container\"},[_c('input',{staticClass:\"dynamic\",attrs:{\"name\":\"profile\",\"type\":\"radio\",\"value\":\"foot-walking\"}}),_c('div',{staticClass:\"toggle toggle--active-null toggle--null\"},[_vm._v(\"Walking\")])]),_c('label',{staticClass:\"toggle-container\"},[_c('input',{staticClass:\"dynamic\",attrs:{\"name\":\"profile\",\"type\":\"radio\",\"value\":\"cycling-regular\"}}),_c('div',{staticClass:\"toggle toggle--active-null toggle--null\"},[_vm._v(\"Cycling\")])]),_c('label',{staticClass:\"toggle-container\"},[_c('input',{staticClass:\"dynamic\",attrs:{\"name\":\"profile\",\"type\":\"radio\",\"value\":\"driving-car\",\"checked\":\"checked\"}}),_c('div',{staticClass:\"toggle toggle--active-null toggle--null\"},[_vm._v(\"Driving\")])])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <section>\r\n    <loader :is-visible=\"isLoading\"></loader>\r\n   <div class=\"container-fluid mt-2\">\r\n      <div>\r\n        <div  id=\"checkForZone\" class=\"row mt-0.5\">\r\n          <div v-if=\"mapType=='Google' && config.isShowSearchBox==true\" class=\"col-lg-5 col-sm-12\">\r\n            <div class=\"form-group d-flex\">\r\n              <div class=\"input-group customsearchbox divcityshown\">\r\n                  <input type=\"text\" id=\"pac-input\" v-if=\"config.isShowSearchBox==true\" maxlength=\"50\" placeholder=\"Enter Your Location or Zip Code\" class=\"form-control\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        <div class=\"col-lg-3 col-sm-12\">\r\n          <div class=\"form-group\" v-if=\"config!=undefined && config.isShowCurrentLocation==true\">\r\n            <a href=\"javascript:;\" class=\"btn btn-secondary\" @click=\"CurrentLocation\">Use my location</a>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n       \r\n        <div class=\"search\">\r\n          <div class=\"map-result\">\r\n            <div class=\"map-actions\">\r\n              <span  v-if=\"config!=undefined && config.isShowGetDirection==true\" class=\"save legends_low\"><a href=\"javascript:;\" v-if=\"config.isShowGetDirection==true\" :class=\"{'mp-active':showSetting==false,'mg-success':showSetting==true}\" title=\"GetDirection\" @click=\"GetDirection\"><em class=\"fa fa-map-marker\"></em></a></span>&nbsp;\r\n              <span  v-if=\"config!=undefined && config.isShowLocator==true\" class=\"save legends_low\"><a href=\"javascript:;\" v-if=\"config.isShowLocator==true\" :class=\"{'mp-active':showSetting==false,'mg-success':showSetting==true}\" title=\"View Locator on map\" @click=\"ViewLocatorOnMap\"><em class=\"fa fa-map-marker\"></em></a></span>&nbsp;\r\n              <span  v-if=\"config!=undefined && config.isShowEtaMap==true\" class=\"edit legends_profile\"><a href=\"javascript:;\" v-if=\"config.isShowEtaMap==true\"  v-on:click=\"LoadLocatorDataonMap('locator')\" title=\"ETA Map\"><em class=\"fa fa-map\"></em></a></span> \r\n                <span  v-if=\"config!=undefined && config.isShowEtaPipeLines==true\" class=\"edit legends_high esri_prof\">\r\n                  <a href=\"javascript:;\" title=\"UtilityMap\"><i class=\"fa fa-map-pin\" aria-hidden=\"true\"></i></a>\r\n                  <div class=\"dropdown\">\r\n                      <a href=\"javascript:;\" title=\"UtilityMap\"><i class=\"fa fa-map-pin\" aria-hidden=\"true\"></i></a>\r\n                      <div class=\"dropdown-menu esri_prof_data\" style=\"display: block;\">\r\n                          <div class=\"w-100 bg-grey\">\r\n                              <div class=\"custom-control custom-checkbox custom-control-inline w-100\">\r\n                                  <input id=\"customcheckboxselectallUtilityMap\" type=\"checkbox\" value=\"\" class=\"custom-control-input dynamic customcheckboxselectall\" />\r\n                                  <label for=\"customcheckboxselectallUtilityMap\" type=\"checkbox\" value=\"\" class=\"custom-control-label pt-1\">SelectAll</label>\r\n                              </div>\r\n                          </div>\r\n                          <div class=\"w-100 mb-2\">\r\n                              <a class=\"dropdown-item p-0\" href=\"javascript:;\" v-for=\"(item,index) in UtilityMapData\" :key=\"index\">\r\n                                  <div class=\"custom-control custom-checkbox custom-control-inline w-100\">\r\n                                      <input type=\"checkbox\" class=\"custom-control-input dynamic customcheckboxUtilityMap\" />\r\n                                      <label type=\"checkbox\" class=\"custom-control-label pt-1\"><label class=\"font-weight-bold\" >{{item.LAYER_NAME}}</label></label>\r\n                                  </div>\r\n                              </a>\r\n                          </div>\r\n                          <div><a href=\"javascript:;\" title=\"Go\" @click=\"ShowUtilityMap\" class=\"btn btn-primary d-block text-white py-2\">Go<i class=\"fa fa-angle-double-right pl-2\"></i></a></div>\r\n                      </div>\r\n                  </div>\r\n                </span>\r\n            </div>\r\n            <div class=\"gmnoprint\" @click=\"OpenSaveZone\" v-if=\"showSaveZone\" id=\"customSaveButton\" style=\"position: absolute; right: 0px;z-index:999999; top: 0px;\"><div title=\"Save Zone\" style=\"background-color: rgb(40, 167, 69); color: rgb(255, 255, 255); border-style: solid; border-width: 1px; border-color: rgb(204, 204, 204); margin-top: 4px; margin-left: -6px; cursor: pointer; text-align: center;\"><div style=\"font-family: Arial, sans-serif; font-size: 14px; padding: 0.6rem 0.8rem;\"><i class=\"fa fa-save pr-2\"></i>Save Zone</div></div></div>\r\n            <!-- <div title=\"Delete Selected Shape\" @click=\"DeleteFeature\" v-if=\"showDeleteFeature\" style=\"background-color: rgb(220, 53, 69); color: rgb(255, 255, 255); border-style: solid; border-width: 1px; border-color: rgb(204, 204, 204); margin-top: 4px; margin-left: -6px; cursor: pointer; text-align: center;\"><div style=\"font-family: Arial, sans-serif; font-size: 14px; padding: 0.6rem 0.8rem;\"><i class=\"fa fa-trash pr-2\"></i>Delete Selected Shape</div></div> -->\r\n            <div @click=\"DeleteFeature\" v-if=\"showDeleteFeature\" id=\"customSaveButton\" style=\"position: absolute; right: 1670px;z-index:999999; top: 0px;\"><div title=\"Delete Save Zone\" style=\"background-color: rgb(240, 4, 4); color: rgb(255, 255, 255); border-style: solid; border-width: 1px; border-color: rgb(204, 204, 204); margin-top: 4px; margin-left: -6px; cursor: pointer; text-align: center;\"><div style=\"font-family: Arial, sans-serif; font-size: 14px; padding: 0.6rem 0.8rem;\"><i class=\"fa fa-trash pr-2\"></i>Delete Selected Shape</div></div></div>\r\n            <div class=\"map\">\r\n                \r\n                  <div :id=\"mapContainer\" class=\"map_canvas map_ipadcontrol\" v-bind:style=\"{'min-height': mapHeight==undefined?'500px':mapHeight,'min-width':mapWidth==undefined?'100%':mapWidth}\"></div>\r\n                  <div class=\"w-100 float-left\" style=\"position: absolute; top: 0px;\" v-cloak>\r\n                    <a class=\"showduration anchideduration\" title=\"Hide\" v-if=\"showSetting==false\" @click=\"ShowTravelMode\">Hide</a>\r\n                    <a class=\"showduration ancshowduration\"  title=\"Show Setting\" v-if=\"showSetting==true\" @click=\"ShowTravelMode\">Show Setting</a>\r\n                    <div class=\"position-absolute float-left my24 mx24 bg-gray-faint round settingPopup d-none\" style=\"z-index:999999;\">\r\n                      <div id=\"params\">\r\n                        <div class=\"row float-left\">\r\n                          <div class=\"col float-left text-dark px-2\">\r\n                              <span class=\"timelegend min10\"></span>\r\n                              Minutes10\r\n                          </div>\r\n                           <div class=\"col float-left text-dark px-2\">\r\n                              <span class=\"timelegend min20\"></span>\r\n                              Minutes20\r\n                          </div>\r\n                           <div class=\"col float-left text-dark px-2\">\r\n                              <span class=\"timelegend min30\"></span>\r\n                              Minutes30\r\n                          </div>\r\n                        </div> <h4 class=\"txt-m font-weight-bold\">Choose Travel Mode:</h4>\r\n                        <div class=\"mr12 toggle-group text-center\">\r\n                          <label class=\"toggle-container\">\r\n                              <input name=\"profile\" type=\"radio\" value=\"foot-walking\"  class=\"dynamic\"/>\r\n                              <div class=\"toggle toggle--active-null toggle--null\">Walking</div>\r\n                          </label>\r\n                          <label class=\"toggle-container\">\r\n                              <input name=\"profile\" type=\"radio\" value=\"cycling-regular\"  class=\"dynamic\"/>\r\n                              <div class=\"toggle toggle--active-null toggle--null\">Cycling</div>\r\n                          </label>\r\n                          <label class=\"toggle-container\">\r\n                              <input name=\"profile\" type=\"radio\" value=\"driving-car\" checked=\"checked\" class=\"dynamic\" />\r\n                              <div class=\"toggle toggle--active-null toggle--null\">Driving</div>\r\n                          </label>\r\n                        </div>\r\n                        <h4 class=\"txt-m font-weight-bold\">Choose Maximum Duration:</h4>\r\n                        <div class=\"w-100 float-left\" style=\"margin-bottom:15px;\">\r\n                          <div class=\"w-30 float-left\">\r\n                              <label class=\"switch\">\r\n                                  <input type=\"checkbox\" name=\"duration\" :value=\"time\" @onChange=\"TravelMode(time)\" checked=\"checked\"  class=\"dynamic\"/>\r\n                                  <span class=\"sliderchk round\"></span>\r\n                              </label>\r\n                              <div class=\"fs_textname \">Minutes10</div>\r\n                          </div>\r\n                          <div class=\"w-30 float-left\">\r\n                              <label class=\"switch\">\r\n                                  <input type=\"checkbox\" name=\"duration\" :value=\"time*2\" checked=\"checked\" @onChange=\"TravelMode(time*2)\"  class=\"dynamic\"/>\r\n                                  <span class=\"sliderchk round\"></span>\r\n                              </label>\r\n                              <div class=\"fs_textname\">Minutes20</div>\r\n                          </div>\r\n                          <div class=\"w-30 float-left\">\r\n                              <label class=\"switch\">\r\n                                  <input type=\"checkbox\" name=\"duration\" checked=\"checked\" @onChange=\"TravelMode(time*3)\" :value=\"time*3\"  class=\"dynamic\"/>\r\n                                  <span class=\"sliderchk round\"></span>\r\n                              </label>\r\n                              <div class=\"fs_textname\">Minutes30</div>\r\n                          </div>\r\n                                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"float-right mt-2\">\r\n      <a title=\"\" name=\"btnSaveCity\"  v-if=\"config!=undefined && config.isShowSaveExtentButton==true\" tabindex=\"6\" @click=\"SaveMapExtent\" class=\"btn btn-primary save-btn mr-2\" data-toggle-tooltip=\"tooltip\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o pr-1\"></i>Save</a>\r\n    </div>\r\n    <!-- <AddZone v-if=\"showAddZone\" @DeleteFeature=\"DeleteFeature\" @GetZoneManagementData=\"GetZoneManagementData\" :polygonData=\"polygonData\" :polygonNewShapeId=\"polygonNewShapeId\" @Close=\"Close\"></AddZone> -->\r\n    <SaveZone v-if=\"showSaveZonePopUp\" @SaveZoneData=\"SaveZoneData\"  @OpenSaveZone=\"OpenSaveZone\" @Close=\"Close\"></SaveZone>\r\n    </section>    \r\n  </template>\r\n  \r\n  <script>\r\n  // import mapboxgl from \"mapbox-gl\";\r\n  // import 'mapbox-gl/dist/mapbox-gl.css';\r\n  // import L from \"leaflet\";\r\n  // import 'leaflet/dist/leaflet.css';\r\n  // import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\r\n  // import '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css'\r\n  // import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\n  // import '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\r\n  // import \"leaflet.markercluster\";\r\n  // import \"leaflet-draw\"\r\n  // import \"leaflet-draw/dist/leaflet.draw.css\";\r\n  // import { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\r\n  // import 'leaflet-geosearch/dist/geosearch.css';\r\n  import DataServices from \"@/services/DataService\";\r\n  //import AddZone from \"./../../components/Modal/modalAddZone.vue\";\r\n  import SaveZone from \"./../Modal/modalSaveZone.vue\"\r\n  // import \"leaflet-routing-machine\";\r\n  // import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\r\n  // import { loadModules } from \"esri-loader\"\r\n  export default {\r\n    components:{\r\n      //AddZone,\r\n      SaveZone\r\n    },\r\n    props: {\r\n      mapType: {\r\n        required: true,\r\n      },\r\n      Data: {\r\n        required: true,\r\n      },\r\n      isShowDrawButton:{\r\n         required: true,\r\n         type:String\r\n      },\r\n      config:{\r\n        required:false\r\n      },\r\n      mapWidth:{\r\n        required:false\r\n      },\r\n      mapHeight:{\r\n        required:false\r\n      },\r\n      latLng:{\r\n        required:false\r\n      },\r\n      mapContainer:{\r\n        required:true\r\n      },\r\n      selectedUser:{\r\n        required: true\r\n      },\r\n      UtilityMapData:{\r\n        required: true\r\n      },\r\n      editZone:{\r\n        required: true\r\n      },\r\n      zoneId:{\r\n        required: true\r\n      }\r\n    },\r\n    data: function () {\r\n      return {\r\n        isLoading:false,\r\n        showDeleteFeature:false,\r\n        showSaveZonePopUp:false,\r\n        showSaveZone:false,\r\n        showAddZone:false,\r\n        time:600,\r\n        colors:'',\r\n        showSetting:null,\r\n        address:[],\r\n        UserName:null,\r\n        UserEmailId:null,\r\n        imageMarker:[],\r\n        mapLayer:[],\r\n        map: null,\r\n        locations: [],\r\n        locationPriority: [],\r\n        locationname: [],\r\n        ticketNumberList: [],\r\n        LocationwithPriority: null,\r\n        markers: [],\r\n        mapZoom: false,\r\n        mapMarker: [],\r\n        markerCluster: null,\r\n        startingPoint: null,\r\n        showSettingPopup:false,\r\n        lngLatData:[],\r\n        fullAddress:[],\r\n        leafLetReferenceNumber:[],\r\n        polygonData:[],\r\n        polygonNewShapeId:null,\r\n        zoneData:[],\r\n        drawingManager:null,\r\n        currentSelectedShape: null,\r\n        myPolygon:null,\r\n        editableLayers:null,\r\n        showHideEtaMap:false\r\n      };\r\n    },\r\n    watch: {\r\n      Data: {\r\n        handler: function(){\r\n          setTimeout(() => {\r\n            this.ShowLocationOnGoogleMap()\r\n          }, 500);\r\n        },\r\n        deep:true\r\n      },\r\n      config: {\r\n        handler: function(){\r\n          this.ShowDrawingManager();\r\n        },\r\n        deep:true\r\n      },\r\n      selectedUser: {\r\n        handler: function(){\r\n          this.ViewLocatorOnMap(this.selectedUser);\r\n        },\r\n        deep:true\r\n      },\r\n      latLng: {\r\n        handler: function(){\r\n          this.ViewOnMap();\r\n        }\r\n      }\r\n    },\r\n    mounted: function () {\r\n      if (this.mapType == \"Google\") {\r\n        setTimeout(() => {\r\n         // this.ShowMap1();\r\n        }, 2000);\r\n      } else if (this.mapType == \"MapBox\") {\r\n        setTimeout(() => {\r\n          this.initMapBox(\r\n            this.Data,\r\n            \"pk.eyJ1IjoiaGFycmlzbHVtZW4iLCJhIjoiY2s2dWtrMzJ3MDk2NTNncXMxMjlxa29mcCJ9.riRtpclzr9XfExHhclre8A\"\r\n          );\r\n        }, 2000);\r\n      } else if (this.mapType == \"Esri\") {\r\n        setTimeout(() => {\r\n         this.initLeafletMap(\r\n            this.Data\r\n          );\r\n        }, 2000);\r\n      } else if (this.mapType == \"LeafLet\" || this.mapType == \"Esri\") {\r\n           setTimeout(() => {\r\n         this.initLeafletMap(\r\n            this.Data\r\n          );\r\n        }, 2000);\r\n      }\r\n    },\r\n    created: function () {\r\n     // this.config.IsShowDrawButton=this.isShowDrawButton;\r\n      this.UserName=this.GetUserInfo.Name;\r\n      this.UserEmailId=this.GetUserInfo.Email;\r\n      if(this.myPolygon!=undefined && this.myPolygon!=null){\r\n        this.myPolygon.setMap(null);\r\n      }\r\n      //this.myPolygon.setMap(null);\r\n          let GoogleMapScript = document.createElement(\"script\");\r\n        GoogleMapScript.setAttribute(\r\n          \"src\",\r\n          \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAJdx4gmhGKWjPTBBVk5riFgpbE0lGS-xM&callback=initAutocompletes&libraries=geometry,drawing,places&v=weekly\"\r\n        );\r\n        document.head.appendChild(GoogleMapScript);\r\n  \r\n        let cluserJsUrl = document.createElement(\"script\");\r\n        cluserJsUrl.setAttribute(\r\n          \"src\",\r\n          \"https://unpkg.com/@google/markerclustererplus@4.0.1/dist/markerclustererplus.min.js\"\r\n        );\r\n        document.head.appendChild(cluserJsUrl);\r\n  \r\n        let FontAwesomeMarker = document.createElement(\"script\");\r\n        FontAwesomeMarker.setAttribute(\r\n          \"src\",\r\n          \"~/Scripts/FsmMaps/fontawesome-markers.min.js\"\r\n        );\r\n        document.head.appendChild(FontAwesomeMarker);\r\n      \r\n        // let DrawingManger= document.createElement(\"script\");\r\n        // DrawingManger.setAttribute(\r\n        //   \"src\",\r\n        //   \"https://maps.googleapis.com/maps/api/js?libraries=geometry,drawing&callback=initAutocompletes&key=AIzaSyAJdx4gmhGKWjPTBBVk5riFgpbE0lGS-xM\"\r\n        // );\r\n        // document.head.appendChild(DrawingManger);\r\n      \r\n      setTimeout(() => {\r\n        this.ShowLocationOnGoogleMap();\r\n      }, 2000);\r\n      if(this.mapType==\"Google\"){\r\n        setTimeout(() => {\r\n          this.initAutocompletes();\r\n        }, 2000);\r\n      }\r\n      \r\n    },\r\n    methods: {\r\n      initAutocompletes: function () {\r\n        var vm=this;\r\n        const input = document.getElementById(\"pac-input\");\r\n        const searchBox = new google.maps.places.SearchBox(input);\r\n        vm.map.addListener(\"bounds_changed\", () => {\r\n          searchBox.setBounds(vm.map.getBounds());\r\n        });\r\n        debugger\r\n        searchBox.addListener(\"places_changed\", () => {\r\n          var places = searchBox.getPlaces();\r\n          var bounds = new google.maps.LatLngBounds();\r\n          var i, place;\r\n          for (i = 0; (place = places[i]); i++) {\r\n            bounds.extend(place.geometry.location);\r\n          }\r\n          vm.map.fitBounds(bounds);\r\n          vm.map.setZoom(4);\r\n        });\r\n      },\r\n      CurrentLocation:function(){\r\n        var vm=this;\r\n        if (navigator.geolocation) {\r\n            if (true)\r\n                navigator.geolocation.getCurrentPosition(vm.GetCurrentLocation, vm.geoError);\r\n            else\r\n                navigator.geolocation.getCurrentPosition(showPosition, geoError);\r\n        } else {\r\n            alert(\"Geolocation is not supported by this browser.\");\r\n        }\r\n      },\r\n      GetCurrentLocation:function(position){\r\n        var vm=this;\r\n        if (position) {\r\n            var latitude = position.coords.latitude;\r\n            var longitude = position.coords.longitude;\r\n            var LatLng = new google.maps.LatLng(latitude, longitude);\r\n            vm.map.setCenter(LatLng);\r\n            vm.map.setZoom(18);\r\n        }\r\n      },\r\n      SaveMapExtent:function(){\r\n        var vm=this;\r\n        vm.$emit(\"SaveMapExtent\",vm.fullAddress,vm.mapType);\r\n      },\r\n      ShowUtilityMap:function(){\r\n        var vm=this;\r\n        var coordinates = JSON.parse(localStorage.getItem(\"coordinates\"));\r\n        if (coordinates == null) {\r\n            coordinates = {\r\n                \"x\": \"43.133971\",\r\n                \"x1\": \"43.132812\",\r\n                \"y\": \"-76.088009\",\r\n                \"y1\": \"-76.087183\"\r\n            };\r\n        }\r\n        loadModules(['esri/Map','esri/views/MapView','esri/layers/FeatureLayer','esri/Graphic','esri/layers/GraphicsLayer'])\r\n          .then(([Map, MapView, FeatureLayer, Graphic, GraphicsLayer]) => {\r\n            var map = new Map({\r\n                basemap: \"hybrid\"\r\n            });\r\n            var view = new MapView({\r\n                container: \"utilitymap\",\r\n                map: vm.map,\r\n                extent: {\r\n                    // autocasts as new Extent()\r\n                    xmin: -13856051.7748509,\r\n                    ymin: 2821931.08215458,\r\n                    xmax: -7488766.97004404,\r\n                    ymax: 6364777.09974285,\r\n                    spatialReference: 102100\r\n                }\r\n            });\r\n            if (layerUrl != '' && layerUrl != null) {\r\n                Colors = {};\r\n                Colors.names = {\r\n                    aqua: \"#00ffff\",\r\n                    azure: \"#f0ffff\",\r\n                    beige: \"#f5f5dc\",\r\n                    black: \"#000000\",\r\n                    blue: \"#0000ff\",\r\n                    brown: \"#a52a2a\",\r\n                    cyan: \"#00ffff\",\r\n                    darkblue: \"#00008b\",\r\n                    darkcyan: \"#008b8b\",\r\n                    darkgrey: \"#a9a9a9\",\r\n                    darkgreen: \"#006400\",\r\n                    darkkhaki: \"#bdb76b\",\r\n                    darkmagenta: \"#8b008b\",\r\n                    darkolivegreen: \"#556b2f\",\r\n                    darkorange: \"#ff8c00\",\r\n                    darkorchid: \"#9932cc\",\r\n                    darkred: \"#8b0000\",\r\n                    darksalmon: \"#e9967a\",\r\n                    darkviolet: \"#9400d3\",\r\n                    fuchsia: \"#ff00ff\",\r\n                    gold: \"#ffd700\",\r\n                    green: \"#008000\",\r\n                    indigo: \"#4b0082\",\r\n                    khaki: \"#f0e68c\",\r\n                    lightblue: \"#add8e6\",\r\n                    lightcyan: \"#e0ffff\",\r\n                    lightgreen: \"#90ee90\",\r\n                    lightgrey: \"#d3d3d3\",\r\n                    lightpink: \"#ffb6c1\",\r\n                    lightyellow: \"#ffffe0\",\r\n                    lime: \"#00ff00\",\r\n                    magenta: \"#ff00ff\",\r\n                    maroon: \"#800000\",\r\n                    navy: \"#000080\",\r\n                    olive: \"#808000\",\r\n                    orange: \"#ffa500\",\r\n                    pink: \"#ffc0cb\",\r\n                    purple: \"#800080\",\r\n                    violet: \"#800080\",\r\n                    red: \"#ff0000\",\r\n                    silver: \"#c0c0c0\",\r\n                    white: \"#ffffff\",\r\n                    yellow: \"#ffff00\"\r\n                };\r\n                Colors.random = function () {\r\n                    var result;\r\n                    var count = 0;\r\n                    for (var prop in this.names)\r\n                        if (Math.random() < 1 / ++count)\r\n                            result = prop;\r\n                    return { name: result, rgb: this.names[result] };\r\n                };\r\n                // Define a unique value renderer and symbols\r\n                \r\n                String(layerUrl).split(',').forEach(function (item) {\r\n                    /********************\r\n                 * Add feature layer\r\n                 ********************/\r\n                    var layerColor = String(item).split('^')[1];\r\n                    if (layerColor == '' || layerColor == null || layerColor == 'null' || typeof (layerColor) == 'undefined') {\r\n                        layerColor = String(Colors.random().rgb).toUpperCase();\r\n                    }\r\n                    const trailsRenderer = {\r\n                        type: \"simple\",\r\n                        symbol: {\r\n                            color: layerColor,\r\n                            type: \"simple-line\",\r\n                            style: \"solid\"\r\n                        },\r\n\r\n                        visualVariables: [\r\n                            {\r\n                                type: \"size\",\r\n                                field: \"ELEV_GAIN\",\r\n                                minDataValue: 0,\r\n                                maxDataValue: 2300,\r\n                                minSize: \"3px\",\r\n                                maxSize: \"7px\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    var url = String(item).split('^')[0];\r\n                    //trailsRenderer.symbol.color = String(Colors.random()).toUpperCase();\r\n                    map.add(new FeatureLayer({\r\n                        url: url,\r\n                        renderer: trailsRenderer,\r\n                    }));\r\n                });\r\n\r\n            }\r\n            var view = new MapView({\r\n                container: \"utilitymap\",\r\n                map: map,\r\n                basemap: \"hybrid\",\r\n                center: [coordinates.y, coordinates.x],\r\n                zoom: 17\r\n            });\r\n            var graphicsLayer = new GraphicsLayer();\r\n            map.add(graphicsLayer);\r\n            var polygon = null;\r\n            if (coordinates != undefined && coordinates != null) {\r\n                polygon = [[coordinates.y1, coordinates.x1],\r\n                            [coordinates.y1, coordinates.x],\r\n                            [coordinates.y, coordinates.x],\r\n                            [coordinates.y, coordinates.x1]];\r\n            }\r\n            // Create a polygon geometry\r\n            var polygon = {\r\n                type: \"polygon\",\r\n                rings: polygon\r\n            };\r\n            var simpleFillSymbol = {\r\n                type: \"simple-fill\",\r\n                color: [255, 0, 0, 0.35],  // orange, opacity 80%\r\n                outline: {\r\n                    color: [255, 0, 0],\r\n                    width: 1\r\n                }\r\n            };\r\n            var polygonGraphic = new Graphic({\r\n                geometry: polygon,\r\n                symbol: simpleFillSymbol\r\n            });\r\n            graphicsLayer.add(polygonGraphic);\r\n          })\r\n          .catch(err => {\r\n            // handle any errors\r\n            console.error(err);\r\n        });\r\n      },\r\n      GetDirection:function(){\r\n        var vm=this;\r\n        if (navigator.geolocation) {\r\n            if (true)\r\n                navigator.geolocation.getCurrentPosition(vm.showRoutePosition, vm.geoError);\r\n            else\r\n                navigator.geolocation.getCurrentPosition(showPosition, geoError);\r\n        } else {\r\n            alert(\"Geolocation is not supported by this browser.\");\r\n        }\r\n      },\r\n      geoError:function() {\r\n        //showPosition();\r\n      },\r\n      showRoutePosition:function(position) {\r\n        var vm=this;\r\n        if (position) {\r\n            //RemoveAllMapImageMarker();\r\n            var latitude = position.coords.latitude;\r\n            var longitude = position.coords.longitude;\r\n            var StartPoint = new google.maps.LatLng(latitude, longitude),\r\n            EndPoint = new google.maps.LatLng(vm.Data[0].pinLatLong.latitude.split(',')[0], vm.Data[0].pinLatLong.latitude.split(',')[1])\r\n            var mapicon = localStorage.getItem(\"UserImage\");\r\n            if (String(mapicon).indexOf('blob') <= 0) {\r\n                mapicon = 'https://app.talygen.com/Content/images/Black/user.png'\r\n            }\r\n            var myLatLng = { lat: latitude, lng: longitude };\r\n            if (vm.mapType == \"Google\") {\r\n                var icon = {\r\n                    url: mapicon, // url\r\n                    scaledSize: new google.maps.Size(40, 40), // scaled size\r\n                    origin: new google.maps.Point(0, 0), // origin\r\n                    anchor: new google.maps.Point(0, 0) // anchor\r\n                };\r\n                var marker = new google.maps.Marker({\r\n                    position: myLatLng,\r\n                    icon: icon,\r\n                    map: vm.map,\r\n                });\r\n                var infowindow = new google.maps.InfoWindow({\r\n                    content: \"<div style='padding:8px;'><img style='float:left;' src='\" + mapicon + \"' class='marker' /> <div style='display:block;width: 270px;'>@loggedUserInfo.Name </br>@loggedUserInfo.Email</div></div>\"\r\n                });\r\n                marker.addListener('click', function () {\r\n                    infowindow.open(vm.map, this);\r\n                });\r\n                vm.imageMarker.push(marker);\r\n                var lineSymbol = {\r\n                    path: google.maps.SymbolPath.CIRCLE,\r\n                    fillOpacity: 1,\r\n                    scale: 3\r\n                };\r\n                var polylineDotted = {\r\n                    strokeColor: '#ff0000',\r\n                    strokeOpacity: 0,\r\n                    fillOpacity: 0,\r\n                    icons: [{\r\n                        icon: lineSymbol,\r\n                        offset: '0',\r\n                        repeat: '4px'\r\n                    }],\r\n                };\r\n                var rendererOptions = {\r\n                    map: vm.map,\r\n                    suppressMarkers: false,\r\n                    polylineOptions: polylineDotted\r\n                };\r\n                var directionsService = new google.maps.DirectionsService();\r\n                var directionsRenderer = new google.maps.DirectionsRenderer(rendererOptions);\r\n                var start = new google.maps.LatLng(latitude, longitude);\r\n                //var end = new google.maps.LatLng(lat, lng);\r\n                directionsRenderer.setMap(vm.map);\r\n                calculateAndDisplayRoute(directionsService, directionsRenderer);\r\n                function calculateAndDisplayRoute(directionsService, directionsRenderer) {\r\n                    var selectedMode = 'DRIVING';\r\n                    directionsService.route({\r\n                        origin: StartPoint,\r\n                        destination: EndPoint,\r\n                        travelMode: google.maps.TravelMode[selectedMode]\r\n                    }, function (response, status) {\r\n                        if (status == 'OK') {\r\n                            directionsRenderer.setDirections(response);\r\n                            var iwContent = '<span style=\"font-weight:bold;\">Distance: </span>' + response['routes'][0].legs[0].distance.text + '<br /><span style=\"font-weight:bold;\">Time: </span>' + response['routes'][0].legs[0].duration.text;\r\n                            var infoWindows = new google.maps.InfoWindow({\r\n                                content: iwContent\r\n                            });\r\n                            google.maps.event.addListener(polylineDotted, 'click', function (event) {\r\n                                //debugger;\r\n                                infoWindows.setPosition(event.latLng);\r\n                                infoWindows.open(map);\r\n                            });\r\n                            google.maps.event.addListener(map, 'click', function () {\r\n                                infoWindows.close();\r\n                            });\r\n                        } else {\r\n                            window.alert('Directions request failed due to ' + status + \". Route exceeds maximum distance limitation.\");\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else if (vm.mapType == \"MapBox\") {\r\n                var lngLat = {\r\n                    lon: parseFloat(myLatLng.lng, 10),\r\n                    lat: parseFloat(myLatLng.lat, 10)\r\n                };\r\n                var html = '<img src=\"' + mapicon + '\" style=\"width:100px;height:100px;\" />';\r\n                var popup = new mapboxgl.Popup({ offset: 25 }).setHTML(html);\r\n                var el = document.createElement('div');\r\n                el.className = 'marker';\r\n                el.style.backgroundImage = 'url(' + mapicon + ')';\r\n                el.style.backgroundSize = 'cover';\r\n                el.style.width = '40px';\r\n                el.style.height = '40px';\r\n                var marker = new mapboxgl.Marker(el)\r\n                 .setPopup(popup)\r\n                .setLngLat(lngLat)\r\n                .addTo(vm.map);\r\n                vm.imageMarker.push(marker);\r\n                var url = \"https://api.mapbox.com/directions/v5/mapbox/driving/\" + longitude + \",\" + latitude + \";\" + vm.Data[0].pinLatLong.latitude.split(',')[1] + \",\" + vm.Data[0].pinLatLong.latitude.split(',')[0] + \"?steps=true&geometries=geojson&access_token=\" + mapboxgl.accessToken;\r\n                // Add starting point to the map\r\n                if (!vm.map.getLayer('point')) {\r\n                    vm.map.addLayer({\r\n                        id: 'point',\r\n                        type: 'circle',\r\n                        source: {\r\n                            type: 'geojson',\r\n                            data: {\r\n                                type: 'FeatureCollection',\r\n                                features: [{\r\n                                    type: 'Feature',\r\n                                    properties: {},\r\n                                    geometry: {\r\n                                        type: 'Point',\r\n                                        coordinates: start\r\n                                    }\r\n                                }\r\n                                ]\r\n                            }\r\n                        },\r\n                        paint: {\r\n                            'circle-radius': 10,\r\n                            'circle-color': '#3887be'\r\n                        }\r\n                    });\r\n                }\r\n                var req = new XMLHttpRequest();\r\n                req.open('GET', url, true);\r\n                req.onload = function () {\r\n                    var json = JSON.parse(req.response);\r\n                    if (typeof (json.code) != \"\" && json.code != \"InvalidInput\") {\r\n                        var data = json.routes[0];\r\n                        var route = data.geometry.coordinates;\r\n                        var geojson = {\r\n                            type: 'Feature',\r\n                            properties: {\r\n                                distance: data.distance,\r\n                                duration: data.duration,\r\n                            },\r\n                            geometry: {\r\n                                type: 'LineString',\r\n                                coordinates: route\r\n                            }\r\n                        };\r\n                        // if the route already exists on the map, reset it using setData\r\n                        if (vm.map.getSource('route')) {\r\n                            vm.map.getSource('route').setData(geojson);\r\n                        } else { // otherwise, make a new request\r\n                            vm.map.addLayer({\r\n                                id: 'route',\r\n                                type: 'line',\r\n                                source: {\r\n                                    type: 'geojson',\r\n                                    data: {\r\n                                        type: 'Feature',\r\n                                        properties: {},\r\n                                        geometry: {\r\n                                            type: 'LineString',\r\n                                            coordinates: geojson\r\n                                        }\r\n                                    }\r\n                                },\r\n                                layout: {\r\n                                    'line-join': 'round',\r\n                                    'line-cap': 'round'\r\n                                },\r\n                                paint: {\r\n                                    'line-color': '#3887be',\r\n                                    'line-width': 5,\r\n                                    'line-opacity': 0.75\r\n                                }\r\n                            });\r\n                            vm.map.on('click', 'route', function (e) {\r\n                                var features = vm.map.queryRenderedFeatures(e.point, {\r\n                                    layers: ['route']\r\n                                });\r\n                                //debugger;\r\n                                var description = e.features[0].properties;\r\n                                var distance = description.distance;\r\n                                distance = parseFloat(distance * 0.000621371192, 10).toFixed(2);\r\n                                var iwContent = '<span style=\"font-weight:bold;\">Distance: </span>' + distance + ' mi<br /><span style=\"font-weight:bold;\">Time: </span>' + timeConvert(description.duration);\r\n                                new mapboxgl.Popup()\r\n                                    .setLngLat(e.lngLat)\r\n                                    .setHTML(iwContent)\r\n                                    .addTo(vm.map);\r\n                            });\r\n                        }\r\n                    } else {\r\n                        try {\r\n                            ShowMsgWithMsg(\"Route exceeds maximum distance limitation.\", \"failure\");\r\n                        } catch (ex) {\r\n                            alert(\"Route exceeds maximum distance limitation.\");\r\n                        }\r\n                    }\r\n                    // add turn instructions here at the end\r\n                };\r\n                req.send();\r\n            }\r\n            else {\r\n                var markerIcon = L.icon({\r\n                    iconUrl: mapicon,\r\n                    iconSize: [40, 40], // size of the icon\r\n                });\r\n                var popup = L.popup().setContent(\"<img src=\" + mapicon + \" />\");\r\n                L.marker([latitude, longitude], { icon: markerIcon }).bindPopup(popup).openPopup().addTo(vm.map);\r\n                var control = L.Routing.control({\r\n                    waypoints: [\r\n                        L.latLng(latitude, longitude),\r\n                        L.latLng(vm.Data[0].pinLatLong.latitude.split(',')[0], vm.Data[0].pinLatLong.latitude.split(',')[1])\r\n                    ],\r\n                    routeWhileDragging: false,\r\n                    createMarker: function () { return null; }\r\n                }).addTo(vm.map);\r\n                control.on('routesfound', function (e) {\r\n                    var routes = e.routes;\r\n                    var summary = routes[0].summary;\r\n                    // alert time and distance in km and minutes\r\n                    //alert('Total distance is ' + summary.totalDistance / 1000 + ' km and total time is ' + Math.round(summary.totalTime % 3600 / 60) + ' minutes');\r\n                    //setTimeout($(\".leaflet-routing-container\").hide(), 1000);\r\n                });\r\n            }\r\n        }\r\n      },\r\n      DeleteFeature:function(){\r\n        var vm=this;\r\n        if(vm.currentSelectedShape != null && typeof(vm.currentSelectedShape) != 'undefined' ){\r\n          \r\n          vm.currentSelectedShape.setMap(null);\r\n          vm.currentSelectedShape = null;\r\n          vm.showAddZone=false;\r\n          vm.showDeleteFeature=false;\r\n        }\r\n      },\r\n      ShowDrawingManager:function(){\r\n        var vm=this;\r\n        if(vm.drawingManager==null && vm.config!=undefined && vm.config.isShowDrawButton==true){\r\n              vm.drawingManager = new google.maps.drawing.DrawingManager({\r\n              drawingControl: true,\r\n                markerOptions: {\r\n                    draggable: true\r\n                },\r\n                drawingControlOptions: {\r\n                    position: google.maps.ControlPosition.RIGHT_CENTER,\r\n                    drawingModes: ['marker','polygon'],\r\n                    setEditable:true\r\n                },\r\n                polylineOptions: {\r\n                    editable: true\r\n                },\r\n            })\r\n            vm.drawingManager.setMap(vm.map);\r\n            google.maps.event.addListener(vm.drawingManager, 'overlaycomplete',vm.GetGoogleAddressToDraw);\r\n          }  \r\n      },\r\n      ViewLocatorOnMap:function(id){\r\n        debugger\r\n        var vm=this;\r\n        var appendingUrl\r\n        vm.isLoading=true;\r\n        if(vm.selectedUser!=undefined){\r\n          appendingUrl=`selectedUser=${id}&reqFrom=`\r\n        }\r\n        else{\r\n           appendingUrl=`reqFrom=ETAMAP`\r\n        }\r\n        \r\n        DataServices.TrackByUserId(appendingUrl).then(function (response) {\r\n          if (response.data.data != null && response.data.data.length > 0) {\r\n           var userTrackData = response.data.data;\r\n           vm.ShowUserOnMap(userTrackData, vm.map);\r\n           vm.isLoading=false;\r\n          }\r\n          else{\r\n            vm.ShowAlert(vm.$t('CurrentLocationNotFound'),'warning', true, vm.$t(\"Alert\"));\r\n            vm.isLoading=false;\r\n          }\r\n        })\r\n      },\r\n      ShowUserOnMap:function(userTrackData, map) {\r\n          var vm=this;\r\n          var userLngLatArr = [];\r\n          $.each(userTrackData, function (index, item) {\r\n              var mapicon = item.IMAGE_PATH;\r\n              var myLatLng = {\r\n                  lat: parseFloat(item.LATITUDE, 10),\r\n                  lng: parseFloat(item.LONGITUDE, 10)\r\n              };\r\n              userLngLatArr.push([myLatLng.lat, myLatLng.lng]);\r\n              var myCenter=new google.maps.LatLng(myLatLng.lat, myLatLng.lng);\r\n              if (String(mapicon).indexOf('blob') <= 0) {\r\n                  mapicon = '/Content/images/user_avtar.png'\r\n              }\r\n              var html = '<div class=\"w-100 float-left popupcontent\" style=\"padding:0px 6px 0px 0px;\">';\r\n              html += '<img src=\"' + mapicon + '\" class=\"float-left\" style=\"width:50px;height:50px; border-radius: 100%;border: 3px solid #f2f2f2;\" />';\r\n              html += '<div style=\"padding-left:8px; padding-top:5px;width:80%;\" class=\"float-left\">';\r\n              html += \"<p style='margin-bottom: 2;'><b style='font-weight:bold;'>Name: </b>\" + item.NAME + \" </p>\";\r\n              html += \"<p style='margin-bottom: 2;'><b style='font-weight:bold;'>Department: </b>\" + item.DEPARTMENT_NAME + \" </p></div>\";\r\n              if (item.TRACK_ID > 0) {\r\n                  html += \"<p style='margin-bottom:2px;' class='px-2 float-left'><b style='font-weight:bold;'>\" + item.NAME + \" </b> is going to ticket number: \" + item.TICKET_NUMBER + \" </p>\";\r\n              }\r\n              html += \"</div>\";\r\n              if (vm.mapType == \"Google\") {\r\n                  var icon = {\r\n                      url: mapicon, // url\r\n                      scaledSize: new google.maps.Size(40, 40), // scaled size\r\n                      origin: new google.maps.Point(0, 0), // origin\r\n                      anchor: new google.maps.Point(0, 0) // anchor\r\n                  };\r\n                  var marker = new google.maps.Marker({\r\n                      position: myLatLng,\r\n                      icon: icon,\r\n                      map: vm.map,\r\n                  });\r\n                  vm.imageMarker.push(marker);\r\n                  //vm.map.panTo(myCenter);\r\n                  var infowindow = new google.maps.InfoWindow({\r\n                      content: html\r\n                  });\r\n                  try {\r\n                      marker.addListener('click', function () {\r\n                          infowindow.open(vm.map, this);\r\n                      });\r\n                  } catch (e) { console.log(e) }\r\n              }\r\n              else if (vm.mapType == \"MapBox\") {\r\n                  var lngLat = {\r\n                      lon: parseFloat(myLatLng.lng, 10),\r\n                      lat: parseFloat(myLatLng.lat, 10)\r\n                  };\r\n                  var popup = new mapboxgl.Popup({ offset: 25 }).setHTML(html);\r\n                  var el = document.createElement('div');\r\n                  el.className = 'marker';\r\n                  el.style.backgroundImage = 'url(' + mapicon + ')';\r\n                  el.style.backgroundSize = 'cover';\r\n                  el.style.width = '50px';\r\n                  el.style.height = '50px';\r\n                  var marker = new mapboxgl.Marker(el)\r\n                   .setPopup(popup)\r\n                      .setLngLat(lngLat)\r\n                      .addTo(vm.map);\r\n                  vm.map.flyTo({\r\n                    center: [lngLat.lon,lngLat.lat],\r\n                    essential: true // this animation is considered essential with respect to prefers-reduced-motion\r\n                  });\r\n                  vm.imageMarker.push(marker);\r\n              }\r\n              else {\r\n                  var markerIcon = L.icon({\r\n                      iconUrl: mapicon,\r\n                      iconSize: [40, 40], // size of the icon\r\n                  });\r\n                  var popup = L.popup().setContent(html);\r\n                  var marker = L.marker([myLatLng.lat, myLatLng.lng], { icon: markerIcon }).bindPopup(popup).openPopup().addTo(vm.map);\r\n                  vm.imageMarker.push(marker);\r\n                  vm.map.fitBounds(userLngLatArr)\r\n              }\r\n          });\r\n      },\r\n      ViewOnMap:function(){\r\n        var vm=this;\r\n        var myCenter=new google.maps.LatLng(vm.latLng.location_nw.split(',')[0], vm.latLng.location_nw.split(',')[1]);\r\n        if(vm.mapType==\"Google\"){\r\n          vm.markers.forEach(function (item,i) {\r\n              if(item.title==(vm.latLng.TicketNumber || vm.latLng.ticket_number))\r\n              {\r\n                let infowindow = new google.maps.InfoWindow();\r\n                infowindow.setContent(item.address)\r\n                infowindow.open(vm.map,vm.markers[i]);\r\n              }\r\n          })\r\n          vm.map.panTo(myCenter);\r\n          vm.map.setZoom(18);\r\n        }\r\n        else if(vm.mapType=='MapBox'){\r\n          vm.markers[0].features.forEach(function (item,i) {\r\n            vm.map.flyTo({\r\n              center: [vm.latLng.location_nw.split(',')[1],vm.latLng.location_nw.split(',')[0]],\r\n              zoom:16,\r\n              essential: true // this animation is considered essential with respect to prefers-reduced-motion\r\n            });\r\n            if(item.properties.ticketNumber==(vm.latLng.TicketNumber || vm.latLng.ticket_number))\r\n            {\r\n                  new mapboxgl.Popup({closeOnClick: true})\r\n                    .setLngLat([vm.latLng.location_nw.split(',')[1],vm.latLng.location_nw.split(',')[0]])\r\n                    .setHTML(item.properties.address)\r\n                    .addTo(vm.map);\r\n            }\r\n          })\r\n          \r\n        }\r\n        else{\r\n          vm.leafLetReferenceNumber.forEach(function (item,i) {\r\n            if(item.TicketNumber==(vm.latLng.TicketNumber || vm.latLng.ticket_number)){\r\n              L.popup()\r\n                .setLatLng([vm.latLng.location_nw.split(',')[0], vm.latLng.location_nw.split(',')[1]])\r\n                .setContent(item.Address)\r\n                .openOn(vm.map);\r\n            }\r\n          })\r\n          vm.map.flyTo([vm.latLng.location_nw.split(',')[0], vm.latLng.location_nw.split(',')[1]], 16, {\r\n              animate: true,\r\n              duration: 2 // in seconds\r\n            });\r\n        }\r\n          \r\n    \r\n  \r\n      },\r\n      ShowLocationOnGoogleMap: function () {\r\n      if(this.mapType==\"Google\"){\r\n        var vm = this;\r\n        var marker;\r\n        var lat=null;\r\n        const mark=[];\r\n        var lng=null;\r\n        var mapicon;\r\n        var infowindow = new google.maps.InfoWindow();\r\n        vm.map=null;\r\n        vm.showLoader=true;\r\n        vm.map = new google.maps.Map(document.getElementById(vm.mapContainer), {\r\n              zoom: 7,\r\n              zoomControl: true,\r\n              mapTypeControlOptions: {\r\n                style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\r\n                position: google.maps.ControlPosition.BOTTOM_RIGHT\r\n              },\r\n              zoomControlOptions: {\r\n                position: google.maps.ControlPosition.RIGHT_CENTER,\r\n              },\r\n              center: new google.maps.LatLng(30.7333,76.7794),\r\n              mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n            });\r\n        if(vm.config!=undefined && vm.config.isShowDrawButton==true){\r\n              vm.drawingManager = new google.maps.drawing.DrawingManager({\r\n              drawingControl: true,\r\n                markerOptions: {\r\n                    draggable: true\r\n                },\r\n                drawingControlOptions: {\r\n                  position: google.maps.ControlPosition.RIGHT_CENTER,\r\n                  drawingModes: ['marker','polygon']\r\n                },\r\n                polylineOptions: {\r\n                    editable: true\r\n                },\r\n            })\r\n            vm.drawingManager.setMap(vm.map);\r\n            google.maps.event.addListener(vm.drawingManager, 'overlaycomplete', function (e, x, y) {\r\n              debugger\r\n              var newShape = e.overlay;\r\n              vm.currentSelectedShape=newShape;              \r\n              vm.GetGoogleAddressToDraw(e);\r\n            })\r\n          }  \r\n        if ((this.mapType = \"Google\")) {\r\n          $.each(vm.Data, function (key, value) {\r\n            if(value.pinLatLong.latitude!=null){\r\n               lat=value.pinLatLong.latitude.split(',')[0]\r\n               lng=value.pinLatLong.latitude.split(',')[1]\r\n            }\r\n            if (value.priority == 'Critical')\r\n              {\r\n                mapicon = 'https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_critical.png'\r\n              }\r\n              else if (value.priority == 'High')\r\n              {\r\n                mapicon = 'https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_high.png'\r\n              }\r\n              else if (value.priority == 'Medium')\r\n              {\r\n                mapicon = 'https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_medium.png'\r\n              }\r\n              else{\r\n                mapicon = 'https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_low.png'\r\n              }\r\n            let popup = '<div id=\"content\">'+\r\n                    '<div class=\"map-pop-header ' + value.priority + '\" style=\"background-color:' + value.color_code + '\">'+\r\n                      '<div id=\"siteNotice\"></div>'+ value.popupHeaderHtml+ '</div>' +\r\n                    '<div id=\"bodyContent\">'+value.popupBodyHtml+\r\n                    '<p class=\"view-details\">'+value.popupFooterHtml + '</p></div></div>';\r\n            marker = new google.maps.Marker({\r\n              position: new google.maps.LatLng(\r\n               lat,\r\n               lng\r\n              ),\r\n              icon:mapicon,\r\n              title:value.refValue,\r\n              map: vm.map,\r\n              address:popup\r\n            });\r\n                   \r\n            mark.push(marker);\r\n            vm.markers.push(marker) ;\r\n            let Coords=[];\r\n            //Get Multiple Polygon\r\n            if(vm.Data[key]!=undefined){\r\n              vm.Data[key].polygons.forEach(function(polygon){\r\n               \r\n                polygon.latLong.forEach(function(item){\r\n                  Coords.push(new google.maps.LatLng(item.longitude,item.latitude));\r\n                });\r\n                vm.myPolygon = new google.maps.Polygon({\r\n                  paths: Coords,\r\n                  draggable: false, // turn off if it gets annoying\r\n                  editable: vm.config.isEditable==true?true:false,\r\n                  strokeColor: (typeof(polygon.strokeColor) != 'undefined')? polygon.strokeColor :'#FF0000',\r\n                  strokeOpacity: (typeof(polygon.strokeOpacity) != 'undefined')? polygon.strokeOpacity :'#FF0000',\r\n                  strokeWeight: (typeof(polygon.strokeWeight) != 'undefined')? polygon.strokeWeight :'#FF0000',\r\n                  fillColor: (typeof(polygon.fillColor) != 'undefined')? polygon.fillColor :'#FF0000',\r\n                  fillOpacity: ((typeof(polygon.opacity) != 'undefined')? polygon.opacity : 0.35),\r\n                  Id:vm.Data[key].refValue\r\n                });\r\n                //vm.map.setCenter(Coords[1]);\r\n                vm.myPolygon.setMap(vm.map);\r\n                google.maps.event.addListener(vm.myPolygon, 'click', function(e,e1) {\r\n                  debugger\r\n                  vm.currentSelectedShape=this;\r\n                  vm.currentSelectedShape.setOptions({editable:true,ShapeId:vm.polygonNewShapeId})\r\n                  vm.showDeleteFeature=true;\r\n                });\r\n              });\r\n            }\r\n            if(vm.mapContainer=='zoneMapDiv' || vm.mapContainer=='mapExtend'){\r\n                  var bounds= new google.maps.LatLngBounds();\r\n                    var ar = Coords;\r\n                    for(var i=0, l = ar.length; i <l; i++){\r\n                        bounds.extend(ar[i]);\r\n                    }\r\n                    vm.map.fitBounds(bounds)\r\n            }\r\n          \r\n            google.maps.event.addListener(vm.myPolygon.getPath(), 'set_at', function(e,e1) {\r\n                debugger\r\n                var curLatLng;\r\n                let address={FullAddress:''};\r\n                vm.lngLatData=[];\r\n                if(vm.mapContainer=='zoneMapDiv')\r\n                {\r\n                  vm.polygonNewShapeId=new Date().getTime() + '_' + Math.floor(Math.random() * 1000);\r\n                  vm.myPolygon.setOptions({ShapeId:vm.polygonNewShapeId})\r\n                  vm.showAddZone=true;\r\n                  curLatLng = vm.myPolygon.getPath().getArray();\r\n                  curLatLng.forEach(function (item,i) {\r\n                      vm.lngLatData.push({\r\n                              latitude: item.lat(),\r\n                              longitude: item.lng(),\r\n                      })\r\n                  })\r\n                  address={FullAddress:''};\r\n                  var point = new google.maps.LatLng(vm.lngLatData[0].Lat, vm.lngLatData[0].Lng);\r\n                  var geocoder = new google.maps.Geocoder();\r\n                      geocoder.geocode({ 'latLng': point },\r\n                          function (results, status) {\r\n                            address.FullAddress=results[0].formatted_address;\r\n                          })\r\n                          vm.polygonData.push({\r\n                          Id:vm.polygonNewShapeId,\r\n                          latLong:vm.lngLatData,\r\n                          CompleteAddress:address,\r\n                          strokeOpacity:'',\r\n                          strokeWeight:'',\r\n                          strokeColor:'',\r\n                          fillColor:'',\r\n                          locatorids:''\r\n                        })\r\n                  vm.fullAddress.push({'LatLng':vm.lngLatData,'CompleteAddress':address})\r\n                }\r\n                else{\r\n                    vm.lngLatData=[];\r\n                  var curLatLng;\r\n                  curLatLng = vm.myPolygon.getPath().getArray();\r\n                  curLatLng.forEach(function (item,i) {\r\n                        vm.lngLatData.push({\r\n                                Lat: item.lat(),\r\n                                Lng: item.lng(),\r\n                        })\r\n                })\r\n                 address={FullAddress:''};\r\n                var point = new google.maps.LatLng(vm.lngLatData[0].Lat, vm.lngLatData[0].Lng);\r\n                      var geocoder = new google.maps.Geocoder();\r\n                          geocoder.geocode({ 'latLng': point },\r\n                              function (results, status) {\r\n                                address.FullAddress=results[0].formatted_address;\r\n                              })\r\n                  vm.fullAddress.push({'LatLng':vm.lngLatData,'CompleteAddress':address})\r\n                  }\r\n                  \r\n              });\r\n            google.maps.event.addListener(marker,\"click\",(function (marker, i) {\r\n              return function () {\r\n                infowindow.setContent(popup);\r\n                infowindow.open(vm.map, marker);\r\n              };\r\n            })(marker, key)\r\n           \r\n          );\r\n            //if(vm.Data.length==1){\r\n              var myCenter=new google.maps.LatLng(vm.Data[0].latlong.split(',')[0], vm.Data[0].latlong.split(',')[1]);\r\n              vm.map.panTo(myCenter);\r\n              vm.map.setZoom(4);\r\n            //}\r\n          });\r\n        } \r\n        var markerClusterOptions = {\r\n          gridSize: 40,\r\n          maxZoom: 15,\r\n          styles: [{\r\n          width: 30,\r\n          height: 30,\r\n          url: 'https://talygenv.github.io/Vue-UI-Content/images/Ticketing/m1.png',\r\n          textColor: 'white',\r\n          textSize: 12\r\n        }]\r\n      };\r\n        vm.markerCluster = new MarkerClusterer(vm.map, mark, markerClusterOptions);\r\n      }\r\n      },\r\n      LoadLocatorDataonMap:function () {\r\n        var vm=this;\r\n        var lat=null;\r\n        var lng=null;\r\n        if (navigator.geolocation) {\r\n              navigator.geolocation.getCurrentPosition(function(position) {\r\n                 lat = position.coords.latitude;\r\n                 lng = position.coords.longitude;\r\n              });\r\n            } else {\r\n              console.log(\"Geolocation is not supported by this browser.\");\r\n        }\r\n        vm.showSetting=true;\r\n          if (vm.mapType == \"Google\") {\r\n            setTimeout(() => {\r\n              vm.LoadGoogleHeatMap(lat,lng);\r\n            }, 2000);\r\n          }\r\n          else if (vm.mapType == \"MapBox\") {\r\n            setTimeout(() => {\r\n               vm.LoadMapboxHeatMap(lat,lng);\r\n            }, 4000);\r\n          }\r\n          else {\r\n            setTimeout(() => {\r\n              vm.ShowEtaMap(lat,lng);\r\n            }, 4000);\r\n          }\r\n      },\r\n      initMapBox: function (obj, apikey, vueObj, indexMap) {\r\n        var vm = this;\r\n        var center = \"\";\r\n        let zoom = 3;\r\n        if (obj) {\r\n          var item = $.grep(obj, function (element, index) {\r\n            return (\r\n              element.location_nw != \"\" &&\r\n              element.location_nw != null &&\r\n              typeof element.location_nw != undefined &&\r\n              element.location_nw != \",\"\r\n            );\r\n          });\r\n          item = item[0];\r\n          if (item) {\r\n            center = [\r\n              parseFloat(String(item.location_nw).split(\",\")[1], 10),\r\n              parseFloat(String(item.location_nw).split(\",\")[0], 10),\r\n            ];\r\n          }\r\n        }\r\n        vm.startingPoint = center;\r\n        mapboxgl.accessToken = apikey;\r\n        vm.map = new mapboxgl.Map({\r\n          container: vm.mapContainer,\r\n          style: \"mapbox://styles/mapbox/streets-v11\",\r\n          zoom: zoom,\r\n          zoomControl: true,\r\n          scrollZoom: true,\r\n          boxZoom: true\r\n        });\r\n        if(vm.config!=undefined && vm.config.isShowSearchBox==true)\r\n        {\r\n          var geocoder = new MapboxGeocoder({\r\n          // Initialize the geocoder\r\n            accessToken: apikey, // Set the access token\r\n            mapboxgl: mapboxgl, // Set the mapbox-gl instance\r\n            marker: false, // Do not use the default marker style\r\n            placeholder: 'Search for places in Barbados', // Placeholder text for the search bar\r\n          });\r\n          vm.map.addControl(geocoder);\r\n        }\r\n        \r\n        // vm.map.scrollZoom.disable();\r\n        if(vm.config!=undefined && vm.config.isShowDrawButton==true){\r\n          var draw = new MapboxDraw({\r\n          // Instead of showing all the draw tools, show only the line string and delete tools\r\n                displayControlsDefault: false,\r\n                  controls: {\r\n                      line_string: false,\r\n                      polygon: true,\r\n                      point: true,\r\n                      trash: true\r\n                  }\r\n                });\r\n                // Add the draw tool to the map\r\n                vm.map.addControl(draw);\r\n                vm.map.on('draw.create', vm.GetMapBoxAddressToDraw);\r\n                var nav = new mapboxgl.NavigationControl();\r\n                vm.map.addControl(nav, 'top-left');\r\n        }\r\n        // Add zoom and rotation controls to the map.\r\n        //map.addControl(new mapboxgl.NavigationControl());\r\n        var nav = new mapboxgl.NavigationControl();\r\n        vm.map.addControl(nav, \"bottom-right\");\r\n        if (obj != null && obj.length > 0) {\r\n          $.each(obj, function (key, value) {\r\n              key++;\r\n              //if(vm.Data.length==1){\r\n                vm.map.flyTo({\r\n                  center: [vm.Data[0].latlong.split(',')[1],vm.Data[0].latlong.split(',')[0]],\r\n                  zoom:4,\r\n                  essential: true // this animation is considered essential with respect to prefers-reduced-motion\r\n                });\r\n              //}\r\n              //let loc = '<span style=\"font-weight:bold;color:#303030;font-size:1pt;\">' + value.Formated_address + ' ' + value.State + '</span><br/><span style=\"color:#555;font-size:10pt;line-height:22px;\">' + value.TypeofWork + '</span><span style=\"color:#007bff;font-size:10pt;line-height:22px;\"><br/>' + value.TicketNumber + '</span>';\r\n              var fileCount = 0;\r\n              var videoCount = 0;\r\n              var imageCount = 0;\r\n              if (value.attachmentCountWithExt != \"[]\" && value.attachmentCountWithExt != \"\" && value.attachmentCountWithExt != null\r\n              ) {\r\n                var countArray = JSON.parse(value.attachmentCountWithExt);\r\n                $.each(countArray, function (index, AttItem) {\r\n                  if (AttItem.TYPE == \"Video\") {\r\n                    videoCount = AttItem.COUNT;\r\n                  } else if (AttItem.TYPE == \"Image\") {\r\n                    imageCount = AttItem.COUNT;\r\n                  } else {\r\n                    fileCount += parseInt(AttItem.COUNT);\r\n                  }\r\n                });\r\n              }\r\n              if(value.polygons[key]!=undefined){\r\n                    var campus = {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        \"popupContent\": 'dfsf',\r\n                        \"style\": {\r\n                            weight: 2,\r\n                            color: \"#FF0000\",\r\n                            opacity: 0.5,\r\n                            fillColor: \"#FF0000\",\r\n                            fillOpacity: 0.2\r\n                        }\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"MultiPolygon\",\r\n                        \"coordinates\": [\r\n                            [\r\n                                [\r\n                                  [value.polygons[key].latLong[key].latitude.split(',')[1],value.polygons[key].latLong[key].latitude.split(',')[0]]\r\n                                ]\r\n                            ]\r\n                        ]\r\n                      }\r\n                };\r\n              vm.map.addSource('maine', {\r\n                  type: 'geojson',\r\n                  data: geoJSON\r\n              });\r\n              vm.map.addLayer({\r\n                  'id': 'maine',\r\n                  'type': 'fill',\r\n                  'source': 'maine',\r\n                  'layout': {},\r\n                  'paint': {\r\n                      'fill-color': '#FF0000',\r\n                      'fill-opacity': 0.35\r\n                  }\r\n              });\r\n              }\r\n              let popup = '<div class=\"gm-style-iw gm-style-iw-c\">' +\r\n                          '<div class=\"gm-style-iw-d\"><div><div id=\"content\">'+\r\n                          '<div class=\"map-pop-header ' + value.priority + '\" style=\"background-color:' + value.color_code + '\">'+\r\n                          '<div id=\"siteNotice\"></div>'+ value.popupHeaderHtml+ '</div>' +\r\n                          '<div id=\"bodyContent\">'+value.popupBodyHtml+\r\n                          '<p class=\"view-details\">'+value.popupFooterHtml + '</p></div></div></div></div></div>';\r\n              \r\n              //getCoordinates(loc, value.priority, key, value.location_nw, value.TicketNumber);\r\n              GetClusterData(key,value.pinLatLong.latitude,obj,value.priority,popup,value.is_high_profile,value);\r\n            });\r\n          if (obj.mapdetail != null && obj.mapdetail.length > 0) {\r\n            if (obj.mapdetail[0].MAP_TYPE == \"MapBox\") {\r\n              if (obj.mapdetail[0].LONGITUDE != \"\" && obj.mapdetail[0].LATITUDE != \"\" && obj.mapdetail[0].LAT_LNG != \"\") {\r\n                var bound = JSON.parse(obj.mapdetail[0].LAT_LNG);\r\n                var bounds = bound.reduce(function (bounds, coord) {\r\n                  return bounds.extend(coord);\r\n                }, new mapboxgl.LngLatBounds(bound[0], bound[0]));\r\n                map.fitBounds(bounds);\r\n              }\r\n            } else {\r\n              if (\r\n                obj.mapdetail[0].LONGITUDE != \"\" &&\r\n                obj.mapdetail[0].LATITUDE != \"\" &&\r\n                obj.mapdetail[0].LAT_LNG != \"\"\r\n              ) {\r\n                var googleJson = [];\r\n                $.each(\r\n                  JSON.parse(obj.mapdetail[0].LAT_LNG),\r\n                  function (key, item) {\r\n                    var dummy = [];\r\n                    if (\r\n                      obj.mapdetail[0].MAP_TYPE == \"LeafLet\" ||\r\n                      obj.mapdetail[0].MAP_TYPE == \"Esri\"\r\n                    )\r\n                      dummy.push(item[1], item[0]);\r\n                    else {\r\n                      dummy.push(item.lng, item.lat);\r\n                    }\r\n                    googleJson.push(dummy);\r\n                  }\r\n                );\r\n                var bound = googleJson;\r\n                var bounds = bound.reduce(function (bounds, coord) {\r\n                  return bounds.extend(coord);\r\n                }, new mapboxgl.LngLatBounds(bound[0], bound[0]));\r\n                map.fitBounds(bounds);\r\n              }\r\n            }\r\n          }\r\n          $(\".mapboxgl-ctrl-compass\").hide();\r\n          var geoJSON;\r\n  \r\n          function GetClusterData(key,location,objData,priority,address,isHighProfile,item) {\r\n            if (location != \"\" && location != null && typeof location != \"undefined\" && typeof location != \",\") {\r\n              var lat = parseFloat(String(location.split(\",\")[0]), 10);\r\n              var lng = parseFloat(String(location.split(\",\")[1]), 10);\r\n              var mapicon = \"https://app.talygen.com\";\r\n              var color = item.color_code;\r\n              if (\r\n                color == \"\" ||\r\n                color == null ||\r\n                typeof color == \"undefined\" ||\r\n                typeof color == \" \"\r\n              ) {\r\n                color = \"#4db567\";\r\n              }\r\n              if (isHighProfile == \"yes\") {\r\n                mapicon +=\r\n                  \"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_critical.png\";\r\n              } else if (priority == \"Critical\") {\r\n                mapicon +=\r\n                  \"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_critical.png\";\r\n              } else if (priority == \"High\") {\r\n                mapicon +=\r\n                  \"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_critical.png\";\r\n              } else if (priority == \"Medium\") {\r\n                mapicon +=\r\n                  \"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_critical.png\";\r\n              } else {\r\n                mapicon +=\r\n                  \"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_critical.png\";\r\n              }\r\n              if (key == 1 || typeof geoJSON == \"undefined\") {\r\n                geoJSON = {\r\n                  type: \"FeatureCollection\",\r\n                  features: [\r\n                    {\r\n                      type: \"Feature\",\r\n                      properties: {\r\n                        title: \"Ticket Priority: \" + priority,\r\n                        icon: \"\" + mapicon,\r\n                        color: color,\r\n                        address: address,\r\n                        ticketNumber:item.refValue\r\n                      },\r\n                      geometry: {\r\n                        type: \"Point\",\r\n                        coordinates: [],\r\n                      },\r\n                    },\r\n                  ],\r\n                };\r\n                geoJSON.features[0].geometry.coordinates.push(lng);\r\n                geoJSON.features[0].geometry.coordinates.push(lat);\r\n                vm.markers.push(geoJSON);\r\n              } else {\r\n                var obj = {\r\n                  type: \"Feature\",\r\n                  properties: {\r\n                    title: \"Ticket Priority: \" + priority,\r\n                    icon: \"\" + mapicon,\r\n                    color: color,\r\n                    address: address,\r\n                    ticketNumber:item.refValue\r\n                  },\r\n                  geometry: {\r\n                    type: \"Point\",\r\n                    coordinates: [],\r\n                  },\r\n                };\r\n                obj.geometry.coordinates.push(lng);\r\n                obj.geometry.coordinates.push(lat);\r\n                geoJSON.features.push(obj);\r\n                vm.markers.push(obj);\r\n              }\r\n            }\r\n            if (key == objData.length) {\r\n              vm.map.loadImage(\"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_critical.png\",(error, image) => {\r\n                  if (error) {\r\n                    throw error;\r\n                  }\r\n                  vm.map.addImage(\"ticket-icon\", image, { sdf: true });\r\n                }\r\n              );\r\n              vm.map.on(\"load\", function () {\r\n                vm.map.addSource(\"ticketsourcedata\", {\r\n                  type: \"geojson\",\r\n                  data: geoJSON,\r\n                  cluster: true,\r\n                  clusterMaxZoom: 14, // Max zoom to cluster points on\r\n                  clusterRadius: 50, // Radius of each cluster when clustering points (defaults to 50)\r\n                });\r\n                vm.map.addLayer({\r\n                  id: \"clusters\",\r\n                  type: \"circle\",\r\n                  source: \"ticketsourcedata\",\r\n                  filter: [\"has\", \"point_count\"],\r\n                  paint: {\r\n                    \"circle-color\": [\r\n                      \"step\",\r\n                      [\"get\", \"point_count\"],\r\n                      \"#51bbd6\",\r\n                      100,\r\n                      \"#f1f075\",\r\n                      750,\r\n                      \"#f28cb1\",\r\n                    ],\r\n                    \"circle-radius\": [\r\n                      \"step\",\r\n                      [\"get\", \"point_count\"],\r\n                      20,\r\n                      100,\r\n                      30,\r\n                      750,\r\n                      40,\r\n                    ],\r\n                  },\r\n                });\r\n                vm.map.addLayer({\r\n                  id: \"cluster-count\",\r\n                  type: \"symbol\",\r\n                  source: \"ticketsourcedata\",\r\n                  filter: [\"has\", \"point_count\"],\r\n                  layout: {\r\n                    \"text-field\": \"{point_count_abbreviated}\",\r\n                    \"text-font\": [\"DIN Offc Pro Medium\", \"Arial Unicode MS Bold\"],\r\n                    \"text-size\": 12,\r\n                  },\r\n                });\r\n                vm.map.addLayer({\r\n                  id: \"unclustered_point\",\r\n                  type: \"circle\",\r\n                  source: \"ticketsourcedata\",\r\n                  filter: [\"!\", [\"has\", \"point_count\"]],\r\n                  paint: {\r\n                    \"circle-color\": [\"get\", \"color\"],\r\n                    \"circle-radius\": 20,\r\n                    \"circle-stroke-width\": 1,\r\n                    \"circle-stroke-color\": \"#fff\",\r\n                  },\r\n                });\r\n                // inspect a cluster on click\r\n                vm.map.on(\"click\", \"clusters\", function (e) {\r\n                  var features = vm.map.queryRenderedFeatures(e.point, {\r\n                    layers: [\"clusters\"],\r\n                  });\r\n                  var clusterId = features[0].properties.cluster_id;\r\n                  vm.map\r\n                    .getSource(\"ticketsourcedata\")\r\n                    .getClusterExpansionZoom(clusterId, function (err, zoom) {\r\n                      if (err) return;\r\n                      vm.map.easeTo({\r\n                        center: features[0].geometry.coordinates,\r\n                        zoom: zoom,\r\n                      });\r\n                    });\r\n                });\r\n                // inspect a cluster on click              \r\n                vm.map.on(\"click\", \"unclustered_point\", function (e) {\r\n                  if(objData[0].popupBodyHtml!=\"\"){\r\n                    if (e.features[0].properties.cluster != true) {\r\n                      var coordinates = e.features[0].geometry.coordinates.slice();\r\n                      var description = e.features[0].properties.address;\r\n                      new mapboxgl.Popup({closeOnClick: true})\r\n                        .setLngLat(coordinates)\r\n                        .setHTML(description)\r\n                        .addTo(vm.map);\r\n                    }\r\n                  }\r\n                 \r\n                });\r\n                vm.map.on(\"mouseenter\", \"clusters\", function () {\r\n                  vm.map.getCanvas().style.cursor = \"pointer\";\r\n                });\r\n                vm.map.on(\"mouseleave\", \"clusters\", function () {\r\n                  vm.map.getCanvas().style.cursor = \"\";\r\n                });\r\n                vm.map.on(\"mouseenter\", \"unclustered_point\", function () {\r\n                  vm.map.getCanvas().style.cursor = \"pointer\";\r\n                });\r\n                vm.map.on(\"mouseleave\", \"unclustered_point\", function () {\r\n                  vm.map.getCanvas().style.cursor = \"\";\r\n                });\r\n                if (vm.map) {\r\n                  vm.map.on(\"wheel\", (event) => {\r\n                    if (event.originalEvent.ctrlKey) {\r\n                      // Check if CTRL key is pressed\r\n                      event.originalEvent.preventDefault(); // Prevent chrome/firefox default behavior\r\n                      if (!vm.map.scrollZoom._enabled) vm.map.scrollZoom.enable(); // Enable zoom only if it's disabled\r\n                    } else {\r\n                      if (vm.map.scrollZoom._enabled) vm.map.scrollZoom.disable(); // Disable zoom only if it's enabled\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n      },\r\n      initLeafletMap: function (obj, vueObj, indexMap) {\r\n        var vm=this;\r\n        var marker;\r\n        if(obj!=undefined){\r\n        if (vm.map) {\r\n          vm.map.off();\r\n          try {\r\n            vm.map.remove();\r\n          } catch {}\r\n        }\r\n        let mapY = \"\";\r\n        let mapX = \"\";\r\n        if (obj != null && obj.length > 0) {\r\n          var item = $.grep(obj, function (element, index) {\r\n            return (\r\n              element.location_nw != \"\" &&\r\n              element.location_nw != null &&\r\n              typeof element.location_nw != \"undefined\" &&\r\n              element.location_nw != \",\"\r\n            );\r\n          });\r\n          if (item != null && item.length > 0) {\r\n            var coordinates = item[0].location_nw;\r\n            mapX = coordinates.split(\",\")[1];\r\n            mapY = coordinates.split(\",\")[0];\r\n          }\r\n        }\r\n        var tiles = L.tileLayer(\r\n          \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n          {\r\n            maxZoom: 22,\r\n            attribution:\r\n              '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Points &copy ' +\r\n              new Date().getFullYear() +\r\n              \" LINZ\",\r\n          }\r\n        );\r\n        var mapboxTiles = L.tileLayer(\r\n            \"https://{s}.tiles.mapbox.com/v3/spatial.b625e395/{z}/{x}/{y}.png\",\r\n            {\r\n              attribution:\r\n                '<a href=\"http://www.mapbox.com/about/maps/\" target=\"_blank\">Terms &amp; Feedback</a>',\r\n            }\r\n          ),\r\n          latlng = L.latLng(mapY, mapX);\r\n        vm.startingPoint = [mapY, mapX];\r\n        var zoom = 10;\r\n        if (mapY == \"\" && mapX == \"\") {\r\n          zoom = 2;\r\n        }\r\n        vm.map = L.map(vm.mapContainer, { zoom: zoom,center: latlng,layers: [tiles],zoomControl: false});\r\n        L.control.zoom({position: \"topright\",}).addTo(vm.map);\r\n          if(vm.config!=undefined && vm.config.isShowDrawButton==true)\r\n          {\r\n            vm.GetLeafLetAddressToDraw();\r\n          }\r\n        if(vm.config!=undefined && vm.config.isShowSearchBox==true)\r\n        {\r\n          const provider = new OpenStreetMapProvider();\r\n          const searchControl = new GeoSearchControl({\r\n            provider: provider,\r\n          });\r\n          vm.map.addControl(searchControl);\r\n        }        \r\n        vm.markers = L.markerClusterGroup({\r\n          iconCreateFunction: function (cluster) {\r\n            return L.divIcon({\r\n              html:\r\n                '<div class=\"circle-leaflet\">' +\r\n                cluster.getChildCount() +\r\n                \"</div>\",\r\n            });\r\n          },\r\n        });\r\n        var LeafIcon = L.Icon.extend({\r\n          options: {\r\n            shadowSize: [50, 64],\r\n            iconAnchor: [22, 94],\r\n            shadowAnchor: [4, 62],\r\n            popupAnchor: [-3, -76],\r\n          },\r\n        });\r\n        if(vm.Data.length==1){\r\n          vm.map.flyTo([vm.Data[0].latlong.split(',')[0],vm.Data[0].latlong.split(',')[1]], 16, {\r\n              animate: true,\r\n              duration: 2 // in seconds\r\n            });\r\n        }\r\n        var CriticalIcon = new LeafIcon({\r\n          iconUrls: \"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_critical.png\",\r\n        });\r\n        var HighIcon = new LeafIcon({\r\n          iconUrl: \"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_high.png\",\r\n        });\r\n        var LowIcon = new LeafIcon({\r\n          iconUrls: \"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_low.png\",\r\n        });\r\n        var MediumIcon = new LeafIcon({\r\n          iconUrls: \"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_medium.png\",\r\n        });\r\n        var fillIcon = new LeafIcon({\r\n          iconUrls: \"https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_fill.png\",\r\n        });\r\n        if (obj != null && obj.length > 0) {\r\n          SetCluster(obj);\r\n        }\r\n        function SetCluster(obj) {\r\n          var coordinates = \"\";\r\n          var priority = \"\";\r\n          var address = \"\";\r\n          $.each(obj, function (key, value) {\r\n              if ((value.pinLatLong.latitude != \"\" && value.pinLatLong.latitude != null && typeof value.pinLatLong.latitude != undefined) || value.polygons.length>0) {\r\n                coordinates = value.pinLatLong.latitude;\r\n                let Coords=[];\r\n                priority = value.priority;\r\n                //address = '<span style=\"font-weight:bold;color:#303030;font-size:12pt;\">' + value.Formated_address + ' ' + value.State + '</span><br/><span style=\"color:#555;font-size:10pt;line-height:22px;\">' + value.TypeofWork + '</span><span style=\"color:#007bff;font-size:10pt;line-height:22px;\"><br/>' + value.TicketNumber + '</span>';\r\n                var fileCount = 0;\r\n                var videoCount = 0;\r\n                var imageCount = 0;\r\n                if (value.attachmentCountWithExt != \"[]\" && value.attachmentCountWithExt != \"\" && value.attachmentCountWithExt != null) {\r\n                  var countArray = JSON.parse(value.attachmentCountWithExt);\r\n                  $.each(countArray, function (index, AttItem) {\r\n                    if (AttItem.TYPE == \"Video\") {\r\n                      videoCount = AttItem.COUNT;\r\n                    } else if (AttItem.TYPE == \"Image\") {\r\n                      imageCount = AttItem.COUNT;\r\n                    } else {\r\n                      fileCount += parseInt(AttItem.COUNT);\r\n                    }\r\n                  });\r\n                }\r\n                vm.Data[key].polygons.forEach(function(polygon){\r\n                polygon.latLong.forEach(function(item){\r\n                  Coords.push([item.latitude,item.longitude]);\r\n                });\r\n              });\r\n              if(value.polygons[key]!=undefined){\r\n                    var campus = {\r\n              \"type\": \"Feature\",\r\n              \"properties\": {\r\n                  \"popupContent\": 'dfsf',\r\n                  \"style\": {\r\n                      weight: 2,\r\n                      color: \"#FF0000\",\r\n                      opacity: 0.5,\r\n                      fillColor: \"#FF0000\",\r\n                      fillOpacity: 0.2\r\n                  }\r\n              },\r\n              \"geometry\": {\r\n                  \"type\": \"MultiPolygon\",\r\n                  \"coordinates\": [\r\n                      [Coords]\r\n                  ]\r\n              }\r\n          };\r\n          if(vm.Data[0].polygons[0].latLong.length>1){\r\n            var polygon = L.polygon(Coords, {\r\n              fill: true\r\n            }).addTo(vm.editableLayers);   \r\n            vm.map.fitBounds(polygon.getBounds()); \r\n          }\r\n          //vm.editableLayers.addLayer(polygonBorder);\r\n          }\r\n                let popup = '<div class=\"gm-style-iw gm-style-iw-c\">' +\r\n                          '<div class=\"gm-style-iw-d\"><div><div id=\"content\">'+\r\n                    '<div class=\"map-pop-header ' + value.priority + '\" style=\"background-color:' + value.color_code + '\">'+\r\n                      '<div id=\"siteNotice\"></div>'+ value.popupHeaderHtml+ '</div>' +\r\n                    '<div id=\"bodyContent\">'+value.popupBodyHtml+\r\n                    '<p class=\"view-details\">'+value.popupFooterHtml + '</p></div></div></div></div></div>';\r\n                //var date = ((value.resolve_time == null || value.resolve_time == 'NULL') ? \"--\" : vueObj.$options.filters.formatDateTime(value.resolve_time));\r\n                if(mapX!=\"\" || mapY!=\"\"){\r\n                  mapX = coordinates.split(\",\")[1];\r\n                  mapY = coordinates.split(\",\")[0];\r\n                  mapX = parseFloat(mapX, 10);\r\n                  mapY = parseFloat(mapY, 10);\r\n                }\r\n                var ticketNumber = value.ticket_number;\r\n  \r\n                var styles =\".leafleticoncustom_\" +priority +\"{background-color:\" +value.color_code +\" }\";\r\n                var style = document.createElement(\"style\"); //setAttribute(\"id\", \"leafleticoncustom_\" + priority);\r\n                style.innerHTML = styles;\r\n                document.head.appendChild(style);\r\n                var myIcon = L.icon({\r\n                  iconUrl:'https://talygenv.github.io/Vue-UI-Content/images/Ticketing/mapicon_leaffill.png',\r\n                  iconSize: [30, 30],\r\n                  color: value.color_code,\r\n                  \"icon-color\": value.color_code,\r\n                  \"background-color\": value.color_code,\r\n                  className: \"leafleticoncustom_\" + priority,\r\n                });\r\n                marker = L.marker(L.latLng(mapY, mapX), { icon: myIcon });             \r\n                marker.bindPopup(popup);\r\n                vm.markers.addLayer(marker);\r\n                vm.leafLetReferenceNumber.push({TicketNumber:value.refValue,Address:popup});\r\n                vm.mapMarker.push(vm.markers);\r\n                marker.on(\"click\", function (e) {\r\n                  var ancCtrl = $(\"a.ticketnumber[data-ticketnumber='\" + ticketNumber + \"']\");\r\n                  if (ancCtrl.length > 0 && localStorage.getItem(\"isMapView\") == \"true\") {\r\n                    var ctrl = ancCtrl.closest(\".lists\");\r\n                    ctrl.addClass(\"alert-info\");\r\n                    setTimeout(function () {\r\n                      ctrl.removeClass(\"alert-info\");\r\n                    }, 5000);\r\n                  }\r\n                  ancCtrl = $(\"a.ticketnumberlist[data-ticketnumber='\" + ticketNumber + \"']\");\r\n                  if (ancCtrl.length > 0 && localStorage.getItem(\"isMapView\") == \"false\") {\r\n                    ancCtrl = ancCtrl.closest(\"tr\");\r\n                    ancCtrl.addClass(\"alert-info\");\r\n                    setTimeout(function () {\r\n                      ancCtrl.removeClass(\"alert-info\");\r\n                    }, 5000);\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          \r\n          if (obj.mapdetail != null && obj.mapdetail.length > 0) {\r\n            if (obj.mapdetail[0].MAP_TYPE == \"MapBox\") {\r\n              if ( obj.mapdetail[0].LONGITUDE != \"\" && obj.mapdetail[0].LATITUDE != \"\" && obj.mapdetail[0].LAT_LNG != \"\") {\r\n                var bound = JSON.parse(obj.mapdetail[0].LAT_LNG);\r\n                var bounds = [];\r\n                $.each(JSON.parse(obj.mapdetail[0].LAT_LNG),\r\n                  function (key, item) {\r\n                    var dummy = [];\r\n                    dummy.push(item[1], item[0]);\r\n                    bounds.push(dummy);\r\n                  }\r\n                );\r\n                map.fitBounds(bounds);\r\n                //map.setZoom(5);\r\n              }\r\n            } else if (obj.mapdetail[0].MAP_TYPE == \"Google\") {\r\n              if (obj.mapdetail[0].LONGITUDE != \"\" && obj.mapdetail[0].LATITUDE != \"\" && obj.mapdetail[0].LAT_LNG != \"\") {\r\n                var googleJson = [];\r\n                $.each(JSON.parse(obj.mapdetail[0].LAT_LNG),\r\n                  function (key, item) {\r\n                    var dummy = [];\r\n                    dummy.push(item.lat, item.lng);\r\n                    googleJson.push(dummy);\r\n                  }\r\n                );\r\n                var bound = googleJson;\r\n                var arr = [];\r\n                arr.push(bound);\r\n                map.fitBounds(bound);\r\n              }\r\n            }\r\n          }\r\n          vm.map.addLayer(vm.markers);\r\n        }\r\n        }\r\n        else{\r\n          vm.map = L.map(vm.mapContainer, {\r\n            layers: [\r\n                L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                    'attribution': 'Map data © <a href=\"https://openstreetmap.org\">OpenStreetMap</a> contributors'\r\n                })\r\n            ],\r\n            center: [0, 0],\r\n            zoom: 5\r\n        });\r\n        }\r\n      },\r\n      ShowEtaMap:function(lats,lngitude){\r\n          var vm=this;\r\n          var lng = null;\r\n          var lat = null;\r\n          var profile = 'driving-car';\r\n          var minutes = 10 * 60;//in seconds\r\n          var range = 30 * 60;\r\n          if(vm.showHideEtaMap){\r\n            $.each(vm.mapLayer, function (index,layer) {\r\n              vm.map.removeLayer(layer);\r\n            });\r\n            vm.showHideEtaMap=false;\r\n            return false;\r\n          }\r\n          getLocation();\r\n          function getLocation() {\r\n              if (navigator.geolocation) {\r\n                  navigator.geolocation.getCurrentPosition(savePosition, positionError, {timeout:10000});\r\n              } else {\r\n                  alert('Geolocation is not supported by this browser');\r\n              }\r\n          }\r\n          function positionError(error) {\r\n              var errorCode = error.code;\r\n              var message = error.message;\r\n  \r\n              alert(message);\r\n          }\r\n          var position='';\r\n          function savePosition(position) {\r\n               position=$.post(\"geocoordinates.php\", {lat: position.coords.latitude, lng: position.coords.longitude});\r\n          }\r\n          lng = parseFloat(lngitude, 10) + 0.02;\r\n          lat = parseFloat(lats, 10) + 0.004;\r\n          initMap(lat, lng);\r\n          function initMap(lat, lng) {\r\n              if (vm.map) {\r\n                $.each(vm.mapLayer, function (index,layer) {\r\n                  vm.map.removeLayer(layer);\r\n                });\r\n                vm.showHideEtaMap=true;\r\n                  var latLng = new L.latLng(lat, lng);\r\n                  vm.map.panTo(latLng);\r\n                  vm.map.setZoom(11);\r\n              }\r\n              var mapicon = localStorage.getItem(\"UserImage\");\r\n              if (String(mapicon).indexOf('blob') <= 0) {\r\n                  mapicon = 'https://app.talygen.com/Content/images/Black/user.png'\r\n              }\r\n              var markerIcon = L.icon({\r\n                  iconUrl: mapicon,\r\n                  iconSize: [40, 40], // size of the icon\r\n              });\r\n            \r\n              var popup = L.popup().setContent(\"<div style='padding:8px;'><img style='float:left;' src='\" + mapicon + \"' class='marker' /> <div style='display:block;'>\"+vm.UserName+\"</br>\"+vm.UserEmailId+\"</div></div>\");\r\n              var marker = L.marker([lat, lng], { icon: markerIcon },{layers:''}).bindPopup(popup).openPopup().addTo(vm.map);\r\n              vm.imageMarker.push(marker);\r\n              GetIsoData(true);\r\n            }\r\n          function GetIsoData(isLoad) {\r\n              var rangeArray = [];\r\n              $(\"input[name=duration]:checked\").each(function () {\r\n                  rangeArray.push($(this).val());\r\n              });\r\n              $.ajax({\r\n                  type: \"POST\", //rest Type\r\n                  dataType: 'json',\r\n                  headers: { 'Authorization': '5b3ce3597851110001cf62485ecdd7b54dd545c4901722c53ac3d1d3' },\r\n                  url: \"https://api.openrouteservice.org/v2/isochrones/\" + profile,\r\n                  data: JSON.stringify({ location_type: \"start\", range_type: 'time', range: rangeArray, interval: minutes, locations: [[lng, lat], [lng, lat]], intersections:false}),\r\n                  \r\n                  async: false,\r\n                  contentType: \"application/json; charset=utf-8\",\r\n                  success: function (data) {\r\n                      L.geoJson(data, {\r\n                          onEachFeature: function (feature, layer) {\r\n                              \r\n                              layer.bindPopup(\"Isochrone: \" + feature.properties.value);\r\n                              vm.mapLayer.push(layer);\r\n                          },\r\n                          style: function (feature) {\r\n                              var ratio = feature.properties.value;\r\n                              vm.SetColor(ratio);\r\n                              return {\r\n                                  fillColor: vm.colors,\r\n                                  color: vm.colors,\r\n                                  weight: 1,\r\n                                  fillOpacity: 0.35\r\n                              };\r\n                          }\r\n                      }).addTo(vm.map);\r\n                     \r\n                  }\r\n              });\r\n          }\r\n          document.getElementById(\"params\").addEventListener('change', function (e) {\r\n              if (e.target.name === 'profile') {\r\n                  profile = e.target.value;\r\n                  initMap(lat, lng);\r\n              } else if (e.target.name === 'duration') {\r\n                  var totalMinutes = \"\";\r\n                  if ($(params).find(\"input:checkbox:checked\").length > 0) {\r\n                      $(params).find(\"input:checkbox:checked\").each(function () {\r\n                          if (totalMinutes.length > 0) {\r\n                              totalMinutes += \",\"\r\n                          }\r\n                          var val = $(this).val();\r\n                          totalMinutes += val;\r\n                      });\r\n                      var splitMin = String(totalMinutes).split(',');\r\n                      minutes = splitMin[0];\r\n                      range = splitMin[splitMin.length - 1];\r\n                  }\r\n                  else {\r\n                      minutes = \"600\";\r\n                      range = \"1800\";\r\n                  }\r\n                  initMap(lat, lng);\r\n              }\r\n          });\r\n          // GetIsoData(true);\r\n      },\r\n      SetColor:function (duration) {\r\n        var vm=this;\r\n          duration = parseInt(duration, 10);\r\n          if (vm.mapType != \"MapBox\") {\r\n              duration = duration / 60;\r\n          }\r\n          else{\r\n                vm.time=10;\r\n          }\r\n          if (vm.mapType == \"MapBox\") {\r\n              switch (duration) {\r\n                  case 10:\r\n                      vm.colors = '3CEA19';\r\n                      break;\r\n                  case 20:\r\n                      vm.colors = 'EFF60B';\r\n                      break;\r\n                  case 30:\r\n                      vm.colors = 'F6320B';\r\n                      break;\r\n                  default:\r\n                      vm.colors = 'F6320B';\r\n              }\r\n          }\r\n          else {\r\n              switch (duration) {\r\n                  case 10:\r\n                      vm.colors = 'green';\r\n                      break;\r\n                  case 20:\r\n                      vm.colors = 'yellow';\r\n                      break;\r\n                  case 30:\r\n                      vm.colors = 'red';\r\n                      break;\r\n                  default:\r\n                      vm.colors = 'red';\r\n              }\r\n          }\r\n      },\r\n      LoadGoogleHeatMap:function(latitude,longitude) {\r\n          var vm=this;\r\n          var profile = 'driving-car';\r\n          var minutes = 10 * 60;//in seconds\r\n          var range = 30 * 60;\r\n          if(vm.showHideEtaMap){\r\n            vm.map.data.forEach(function (feature) {\r\n                  vm.map.data.remove(feature);\r\n            });\r\n            vm.showHideEtaMap=false;\r\n            return false;\r\n          }\r\n          initMap(latitude, longitude);\r\n          function initMap(lat, lng) {\r\n              if (vm.map) {\r\n                 $.each(vm.map, function (index,layer) {\r\n                      try {\r\n                        vm.map.removeLayer(layer);\r\n                      }\r\n                      catch (ex)\r\n                      { }\r\n                  });\r\n                  vm.showHideEtaMap=true;\r\n                  var latLng = new L.latLng(lat, lng);\r\n                  vm.map.panTo(latLng);\r\n                  vm.map.setZoom(11);\r\n              }\r\n              var myLatLng = { lat: latitude, lng: longitude };\r\n              var latLng = new google.maps.LatLng(latitude, longitude); //Makes a latlng  for google\r\n              var mapicon = localStorage.getItem(\"UserImage\");\r\n              if (String(mapicon).indexOf('blob') <= 0) {\r\n                  mapicon = 'https://app.talygen.com/Content/images/Black/user.png'\r\n              }\r\n              var icon = {\r\n                  url: mapicon, // url\r\n                  scaledSize: new google.maps.Size(40, 40), // scaled size\r\n                  origin: new google.maps.Point(0, 0), // origin\r\n                  anchor: new google.maps.Point(0, 0) // anchor\r\n              };\r\n              var marker = new google.maps.Marker({\r\n                  position: myLatLng,\r\n                  icon: icon,\r\n                  map: vm.map,\r\n              });\r\n              var infowindow = new google.maps.InfoWindow({\r\n                  content: \"<div style='padding:8px;'><img style='float:left;' src='\" + mapicon + \"' class='marker' /> <div style='display:block;'>\"+vm.UserName+\"</br>\"+vm.UserEmailId+\"</div></div>\"\r\n              });\r\n              marker.addListener('click', function () {\r\n                  infowindow.open(vm.map, this);\r\n              });\r\n              vm.imageMarker.push(marker);\r\n              // NOTE: This uses cross-domain XHR, and may not work on older browsers.\r\n              var url = 'https://api.openrouteservice.org/isochrones?locations=' + lng + ',' + lat + '&profile=' + profile + '&range_type=time&interval=' + minutes + '&range=' + range + '&units=&location_type=start&intersections=false&api_key=58d904a497c67e00015b45fc90fa91f0d345426145bb09e67e859771';\r\n              var geoJsonForGoogle;\r\n              var rangeArray = [];\r\n              $(\"input[name=duration]:checked\").each(function () {\r\n                  rangeArray.push($(this).val());\r\n              });\r\n              $.ajax({\r\n                  type: \"POST\", //rest Type\r\n                  dataType: 'json',\r\n                  headers: { 'Authorization': '5b3ce3597851110001cf62485ecdd7b54dd545c4901722c53ac3d1d3' },\r\n                  url: \"https://api.openrouteservice.org/v2/isochrones/\" + profile,\r\n                  data: JSON.stringify({ location_type: \"start\", range_type: 'time', range: rangeArray, interval: minutes, locations: [[lng, lat], [lng, lat]], intersections: false }),\r\n                  //url: \"https://api.openrouteservice.org/isochrones?locations=\" + lng + \",\" + lat + \"&profile=\" + profile + \"&range_type=time&interval=\" + minutes + \"&range=\" + range + \"&units=&location_type=start&intersections=false&api_key=58d904a497c67e00015b45fc90fa91f0d345426145bb09e67e859771\",\r\n                  async: false,\r\n                  contentType: \"application/json; charset=utf-8\",\r\n                  success: function (data) {\r\n                      vm.map.data.addGeoJson(data);\r\n                  }\r\n              });\r\n              vm.map.data.setStyle(function (feature) {\r\n                  var ratio = feature.getProperty('value');\r\n                  vm.SetColor(ratio);\r\n                  return {\r\n                      fillColor: vm.colors,\r\n                      opacity: 0.35,\r\n                      strokeWeight: 1\r\n                  }\r\n              });\r\n          }\r\n          document.getElementById(\"params\").addEventListener('change', function (e) {\r\n              if (e.target.name === 'profile') {\r\n                  profile = e.target.value;\r\n                  initMap(latitude, longitude);\r\n              } else if (e.target.name === 'duration') {\r\n                  var totalMinutes = \"\";\r\n                  if ($(params).find(\"input:checkbox:checked\").length > 0) {\r\n                      $(params).find(\"input:checkbox:checked\").each(function () {\r\n                          if (totalMinutes.length > 0) {\r\n                              totalMinutes += \",\"\r\n                          }\r\n                          var val = $(this).val();\r\n                          totalMinutes += val;\r\n                      });\r\n                      var splitMin = String(totalMinutes).split(',');\r\n                      minutes = splitMin[0];\r\n                      range = splitMin[splitMin.length - 1];\r\n                  }\r\n                  else {\r\n                      minutes = \"600\";\r\n                      range = \"1800\";\r\n                  }\r\n                  initMap(latitude, longitude);\r\n              }\r\n          });\r\n      },\r\n      Close:function(){\r\n        var vm=this;\r\n        vm.showAddZone=false;\r\n        vm.showSaveZonePopUp=false;\r\n      },\r\n      GetZoneManagementData:function(obj){\r\n          var vm=this;\r\n          vm.currentSelectedShape.setOptions({strokeOpacity:obj.strokeOpacity,strokeColor:obj.strokeColor,fillOpacity:0.35,  strokeWeight: obj.strokeWeight, fillColor: obj.fillColor})\r\n          vm.polygonData.forEach(function (item,i) {\r\n              if(item.Id==obj.Id)\r\n              {\r\n                vm.polygonData[i].strokeOpacity=obj.strokeOpacity;\r\n                vm.polygonData[i].strokeWeight=obj.strokeWeight;\r\n                vm.polygonData[i].fillColor=obj.fillColor;\r\n                vm.polygonData[i].locatorids=obj.locatorids;\r\n                vm.polygonData[i].strokeColor=obj.strokeColor;\r\n                vm.showAddZone=false;\r\n                vm.showSaveZone=true;\r\n              }\r\n          })\r\n      },\r\n      OpenSaveZone:function(){\r\n        var vm=this;\r\n        vm.showSaveZonePopUp=true;\r\n      },\r\n      SaveZoneData:function(objs){\r\n        var vm=this;\r\n        let obj={\r\n          ZoneId:vm.zoneId==0?objs.ZoneId:vm.zoneId,\r\n          ResolverUserId:null,\r\n          JsonData:{\r\n            type:\"FeatureCollection\",\r\n            features:[]\r\n          },\r\n          ZoneName:objs.Name,\r\n          description:objs.Description,\r\n          ZoneType:objs.ZoneType,\r\n          YardEmails:null\r\n        }\r\n        vm.polygonData.forEach(function (item,i) {\r\n          obj.JsonData.features.push({\r\n              \"type\":\"Feature\",\r\n              \"geometry\":{\r\n                \"type\":\"Polygon\",\r\n                \"coordinates\":[[]],                \r\n              },\r\n              \"properties\":{\r\n                  \"stroke\":item.strokeWeight,\r\n                  \"stroke-opacity\":item.strokeOpacity,\r\n                  \"stroke-width\":item.strokeWeight,\r\n                  \"fillColor\":item.fillColor,\r\n                  \"fill-opacity\":item.fillOpacity,\r\n                  \"locatorname\":null,\r\n                  \"locatorids\":item.locatorids,\r\n                  \"userids\":null\r\n                }\r\n            })\r\n            item.latLong.forEach(function (row,is) {\r\n              if( obj.JsonData.features[i]!=undefined){\r\n                obj.JsonData.features[i].geometry.coordinates[0].push([row.longitude,row.latitude]);\r\n              }              \r\n            })\r\n            if( obj.JsonData.features[i]!=undefined){\r\n               obj.JsonData.features[i].geometry.coordinates[0].push([obj.JsonData.features[i].geometry.coordinates[0][0][0],obj.JsonData.features[i].geometry.coordinates[0][0][1]]);\r\n            }\r\n          })\r\n          vm.zoneData.push(obj);\r\n          var params=JSON.stringify(vm.zoneData);\r\n          DataServices.UploadGeoJSON(params).then(function (response) {\r\n            if(vm.zoneId==0){\r\n              vm.ShowAlert(\"Zone Succesfully Added.\", \"success\")\r\n            }\r\n            else{\r\n              vm.ShowAlert(\"Zone Succesfully Updated.\", \"success\")\r\n            }\r\n            vm.showSaveZonePopUp=false;\r\n            vm.currentSelectedShape=null;\r\n            vm.$emit(\"FetchData\");\r\n          })\r\n      },\r\n      GetLeafLetAddressToDraw: function(){\r\n          var vm=this;\r\n          let address={City:{Name:'',LongName:''},Country:{Name:'',LongName:''},AdministrativeAreaLevel1:{Name:'',LongName:''},AdministrativeAreaLevel2:{Name:'',LongName:''},\r\n          AdministrativeAreaLevel3:{Name:'',LongName:''},State:{Name:'',LongName:''},PinCode:'',FullAddress:''};\r\n          var featureGroup = L.featureGroup().addTo(vm.map);\r\n          vm.editableLayers = new L.FeatureGroup().addTo(vm.map);\r\n          var drawControl = new L.Control.Draw({\r\n          edit: {\r\n              featureGroup: vm.editableLayers,\r\n              poly: {\r\n            allowIntersection: true\r\n        }\r\n          },\r\n          draw: {\r\n              polygon: {\r\n                allowIntersection: false, // Restricts shapes to simple polygons\r\n                drawError: {\r\n                    color: '#e1e100', // Color the shape will turn when intersects\r\n                    message: '<strong>Oh snap!<strong> you can\\'t draw that!' // Message that will show when intersect\r\n                },\r\n                shapeOptions: {\r\n                    color: '#bada55'\r\n                }\r\n              },\r\n              polyline: false,\r\n              circle: false,\r\n              marker: false,\r\n              circlemarker: false,\r\n              }\r\n            }).addTo(vm.map);\r\n          \r\n            vm.map.addLayer(vm.editableLayers);\r\n            vm.map.on('draw:editvertex', function (event) {\r\n              debugger\r\n              var poly = event.poly;\r\n              poly.getLatLngs();\r\n              poly.getLatLngs()[0].forEach(function (item,i) {\r\n                  vm.lngLatData.push(\r\n                    {\r\n                      Lat:item.lat,\r\n                      Lng:item.lng\r\n                    }\r\n                  );\r\n                  var point = new google.maps.LatLng(vm.lngLatData[0].Lat, vm.lngLatData[0].Lng);\r\n                  var geocoder = new google.maps.Geocoder();\r\n                  geocoder.geocode({ 'latLng': point },\r\n                    function (results, status) {\r\n                      address.FullAddress=results[0].formatted_address;\r\n                    }\r\n                  )\r\n                  vm.fullAddress.push({'LatLng':vm.lngLatData,'CompleteAddress':address})\r\n              })\r\n            });\r\n            vm.map.on('draw:created', function (e) {\r\n              debugger\r\n              var type = e.layerType,\r\n                  layer = e.layer;\r\n    \r\n              if (type === 'polygon') {\r\n                  layer.on('mouseover', function () {\r\n                      console.log(layer.getLatLngs());\r\n                  });\r\n              \r\n              vm.editableLayers.addLayer(layer);\r\n              \r\n              layer.getLatLngs()[0].forEach(function (item,i) {\r\n                  vm.lngLatData.push(\r\n                    {\r\n                      Lat:item.lat,\r\n                      Lng:item.lng\r\n                    }\r\n                  );\r\n              })\r\n               \r\n               \r\n               var point = new google.maps.LatLng(layer.getLatLngs()[0][0].lat, layer.getLatLngs()[0][0].lng);\r\n                var geocoder = new google.maps.Geocoder();\r\n                geocoder.geocode({ 'latLng': point },\r\n                 function (results, status) {\r\n                  address.FullAddress=results[0].formatted_address\r\n                  results[0].address_components.forEach(function (item,i) {\r\n                    //vm.address=[];\r\n                    if(item.types[0]=='country'){\r\n                     address.Country.Name=item.short_name;\r\n                     address.Country.LongName=item.long_name;\r\n                    }\r\n                    else if(item.types[0]=='postal_code')\r\n                    {\r\n                      address.PinCode=item.long_name;\r\n                    }\r\n                    else if(item.types[0]=='administrative_area_level_1')\r\n                    {\r\n                        address.AdministrativeAreaLevel1.LongName=item.long_name;\r\n                        address.AdministrativeAreaLevel1.Name=item.short_name;\r\n  \r\n                        address.State.LongName=item.long_name;\r\n                        address.State.Name=item.short_name;\r\n                    }\r\n                    else if(item.types[0]=='administrative_area_level_2')\r\n                    {\r\n                        address.AdministrativeAreaLevel2.LongName=item.long_name;\r\n                        address.AdministrativeAreaLevel2.Name=item.short_name;\r\n                    }\r\n                    else if(item.types[0]=='administrative_area_level_3')\r\n                    {\r\n                        vm.address.push({\r\n                          AdministrativeArea3:item.long_name\r\n                        })\r\n                        address.AdministrativeAreaLevel3.LongName=item.long_name;\r\n                        address.AdministrativeAreaLevel3.Name=item.short_name;\r\n                    }\r\n                    else if(item.types[0]=='locality'){\r\n                        vm.address.push({\r\n                          City:item.long_name\r\n                        })\r\n                        address.City.LongName=item.long_name;\r\n                        address.City.Name=item.short_name;\r\n  \r\n                    }\r\n                  })\r\n                  vm.fullAddress.push({'LatLng':vm.lngLatData,'CompleteAddress':address})\r\n                  vm.$emit('GetAddress',vm.fullAddress);\r\n                });\r\n              }\r\n              else{\r\n                      vm.lngLatData.push(\r\n                        {\r\n                          Lat:e.layer._latlng.lat,\r\n                          Lng:e.layer._latlng.lng\r\n  \r\n                        }\r\n                      ); \r\n                      var point = new google.maps.LatLng(e.layer._latlng.lat, e.layer._latlng.lng);\r\n                var geocoder = new google.maps.Geocoder();\r\n                geocoder.geocode({ 'latLng': point },\r\n                 function (results, status) {\r\n                  address.FullAddress=results[0].formatted_address\r\n                  results[0].address_components.forEach(function (item,i) {\r\n                    //vm.address=[];\r\n                    if(item.types[0]=='country'){\r\n                     address.Country.Name=item.short_name;\r\n                     address.Country.LongName=item.long_name;\r\n                    }\r\n                    else if(item.types[0]=='postal_code')\r\n                    {\r\n                      address.PinCode=item.long_name;\r\n                    }\r\n                    else if(item.types[0]=='administrative_area_level_1')\r\n                    {\r\n                        address.AdministrativeAreaLevel1.LongName=item.long_name;\r\n                        address.AdministrativeAreaLevel1.Name=item.short_name;\r\n  \r\n                        address.State.LongName=item.long_name;\r\n                        address.State.Name=item.short_name;\r\n                    }\r\n                    else if(item.types[0]=='administrative_area_level_2')\r\n                    {\r\n                        address.AdministrativeAreaLevel2.LongName=item.long_name;\r\n                        address.AdministrativeAreaLevel2.Name=item.short_name;\r\n                    }\r\n                    else if(item.types[0]=='administrative_area_level_3')\r\n                    {\r\n                        vm.address.push({\r\n                          AdministrativeArea3:item.long_name\r\n                        })\r\n                        address.AdministrativeAreaLevel3.LongName=item.long_name;\r\n                        address.AdministrativeAreaLevel3.Name=item.short_name;\r\n                    }\r\n                    else if(item.types[0]=='locality'){\r\n                        vm.address.push({\r\n                          City:item.long_name\r\n                        })\r\n                        address.City.LongName=item.long_name;\r\n                        address.City.Name=item.short_name;\r\n  \r\n                    }\r\n                  })\r\n                  vm.fullAddress.push({'LatLng':vm.lngLatData,'CompleteAddress':address})\r\n                  vm.$emit('GetAddress',vm.fullAddress);\r\n                });\r\n              }\r\n        });\r\n      },\r\n      GetGoogleAddressToDraw: function(e){\r\n        var vm=this;\r\n        var newShapes = e.overlay;\r\n        vm.currentSelectedShape=newShapes;       \r\n        let address={City:{Name:'',LongName:''},Country:{ Name:'',LongName:''},AdministrativeAreaLevel1:{Name:'',LongName:''},AdministrativeAreaLevel2:{Name:'',LongName:''},\r\n                     AdministrativeAreaLevel3:{Name:'',LongName:''},State:{Name:'',LongName:''},PinCode:'',FullAddress:''};\r\n        //google.maps.event.addListener(drawingManager, 'overlaycomplete', function (e) {\r\n              if (e.type == 'polygon') {\r\n                  var newShape = e.overlay;\r\n                  newShape.type = e.type;\r\n                  vm.lngLatData=[]\r\n                  if(vm.mapContainer==\"zoneMapDiv\"){\r\n                    vm.polygonNewShapeId=new Date().getTime() + '_' + Math.floor(Math.random() * 1000);\r\n                    vm.showAddZone=true;\r\n                  }\r\n                  var paths = e.overlay.bounds;\r\n                  e.overlay.latLngs.g[0].g.forEach(function (item,i) {\r\n                    vm.lngLatData.push({\r\n                            latitude: item.lat(),\r\n                            longitude: item.lng(),\r\n                          })\r\n                  })\r\n                  newShape[\"ShapeId\"] = vm.polygonNewShapeId;\r\n                  google.maps.event.addListener(newShape, 'click', function (e, x, y) {\r\n                      if(vm.mapContainer==\"zoneMapDiv\"){\r\n                        vm.polygonNewShapeId=this.ShapeId;\r\n                        vm.showAddZone=true;\r\n                        vm.currentSelectedShape = this;\r\n                      }\r\n                    });\r\n                  var point = new google.maps.LatLng(vm.lngLatData[0].latitude, vm.lngLatData[0].longitude);\r\n                  var geocoder = new google.maps.Geocoder();\r\n                      geocoder.geocode({ 'latLng': point },\r\n                          function (results, status) {\r\n                            address.FullAddress=results[0].formatted_address;\r\n                              if (status == google.maps.GeocoderStatus.OK) {\r\n                                  results[0].address_components.forEach(function (item,i) {\r\n                            //vm.address=[];\r\n                            if(item.types[0]=='country'){\r\n                             address.Country.Name=item.short_name;\r\n                             address.Country.LongName=item.long_name;\r\n                            }\r\n                            else if(item.types[0]=='postal_code')\r\n                            {\r\n                              address.PinCode=item.long_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_1')\r\n                            {\r\n                                address.AdministrativeAreaLevel1.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel1.Name=item.short_name;\r\n  \r\n                                address.State.LongName=item.long_name;\r\n                                address.State.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_2')\r\n                            {\r\n                                address.AdministrativeAreaLevel2.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel2.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_3')\r\n                            {\r\n                                vm.address.push({\r\n                                  AdministrativeArea3:item.long_name\r\n                                })\r\n                                address.AdministrativeAreaLevel3.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel3.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='locality'){\r\n                                vm.address.push({\r\n                                  City:item.long_name\r\n                                })\r\n                                address.City.LongName=item.long_name;\r\n                                address.City.Name=item.short_name;\r\n                            }\r\n                          }) \r\n                          vm.fullAddress.push({'LatLng':vm.lngLatData,'CompleteAddress':address})\r\n                          vm.$emit('GetAddress',vm.fullAddress);   \r\n                          vm.polygonData.push({\r\n                            Id:vm.polygonNewShapeId,\r\n                            latLong:vm.lngLatData,\r\n                            CompleteAddress:address,\r\n                            strokeOpacity:'',\r\n                            strokeWeight:'',\r\n                            strokeColor:'',\r\n                            fillColor:'',\r\n                            locatorids:''\r\n                          })\r\n                          }\r\n                      });\r\n              }\r\n              else if(e.type == 'marker'){\r\n                  vm.lngLatData.push({\r\n                    \r\n                    name: \"\",\r\n                    latLong: [{\r\n                            latitude: e.overlay.getPosition().lat(),\r\n                            longitude: e.overlay.getPosition().lng(),\r\n                        }\r\n                    ]\r\n                  })\r\n                  var point = new google.maps.LatLng(e.overlay.getPosition().lat(), e.overlay.getPosition().lng());\r\n                  var geocoder = new google.maps.Geocoder();\r\n                      geocoder.geocode({ 'latLng': point },\r\n                          function (results, status) {\r\n                              if (status == google.maps.GeocoderStatus.OK) {\r\n                                  results[0].address_components.forEach(function (item,i) {\r\n                            //vm.address=[];\r\n                            if(item.types[0]=='country'){\r\n                             address.Country.Name=item.short_name;\r\n                             address.Country.LongName=item.long_name;\r\n                            }\r\n                            else if(item.types[0]=='postal_code')\r\n                            {\r\n                              address.PinCode=item.long_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_1')\r\n                            {\r\n                                address.AdministrativeAreaLevel1.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel1.Name=item.short_name;\r\n  \r\n                                address.State.LongName=item.long_name;\r\n                                address.State.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_2')\r\n                            {\r\n                                address.AdministrativeAreaLevel2.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel2.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_3')\r\n                            {\r\n                                vm.address.push({\r\n                                  AdministrativeArea3:item.long_name\r\n                                })\r\n                                address.AdministrativeAreaLevel3.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel3.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='locality'){\r\n                                vm.address.push({\r\n                                  City:item.long_name\r\n                                })\r\n                                address.City.LongName=item.long_name;\r\n                                address.City.Name=item.short_name;\r\n                            }\r\n                          }) \r\n                          vm.fullAddress.push({'LatLng':vm.lngLatData,'CompleteAddress':address})\r\n                          vm.$emit('GetAddress',vm.fullAddress);   \r\n                          }\r\n                      });\r\n              }\r\n          //});\r\n      },\r\n      LoadMapboxHeatMap:function (lats,lngitude) {\r\n        var vm=this;\r\n        var latLng = null;\r\n        if (typeof (vm.map.getLayer('isoLayer')) != 'undefined') {\r\n                vm.map.removeLayer('isoLayer');\r\n        }\r\n        if (typeof (vm.map.getSource('iso')) != 'undefined') {\r\n            vm.map.removeSource('iso');\r\n            return false;\r\n        }\r\n          var params = document.getElementById('params');\r\n          // Create variables to use in getIso()\r\n          var urlBase = 'https://api.mapbox.com/isochrone/v1/mapbox/';\r\n          var lati = null;\r\n          var lngi = null;\r\n          // Create variables to use in getIso()\r\n          var urlBase = 'https://api.mapbox.com/isochrone/v1/mapbox/';\r\n          var lon = parseFloat(lngi, 10);// + 0.02;\r\n          var lat = parseFloat(lati, 10);// + 0.004;\r\n          //lat = 43.133971;\r\n          //lon = -76.088009;\r\n          var profile = 'driving';\r\n          var minutes = '10,20,30';\r\n          vm.colors = '3CEA19,EFF60B,F6320B';\r\n          LoadMapboxLayer();\r\n          // Create a function that sets up the Isochrone API query then makes an Ajax call\r\n          function getIso() {\r\n              var query =\r\n                urlBase +\r\n                profile +\r\n                '/' +\r\n                lngitude +\r\n                ',' +\r\n                lats +\r\n                '?contours_minutes=' +\r\n                minutes + '&contours_colors=' + vm.colors +\r\n                '&polygons=true&access_token=' +\r\n                mapboxgl.accessToken;\r\n              $.ajax({\r\n                  method: 'GET',\r\n                  url: query\r\n              }).done(function (data) {\r\n                  // Set the 'iso' source's data to what's returned by the API query\r\n                  vm.map.getSource('iso').setData(data);\r\n              });\r\n          }\r\n          vm.map.flyTo({\r\n            center: [lngitude,lats],\r\n            zoom:10,\r\n            essential: true // this animation is considered essential with respect to prefers-reduced-motion\r\n          });\r\n            var Draw = new MapboxDraw();\r\n            vm.map.addControl(Draw, 'bottom-left');\r\n          // When a user changes the value of profile or duration by clicking a button, change the parameter's value and make the API query again\r\n          params.addEventListener('change', function (e) {\r\n              if (e.target.name === 'profile') {\r\n                  profile = e.target.value;\r\n                  if(profile=='foot-walking')\r\n                  {\r\n                    profile='walking'\r\n                  }\r\n                  else if(profile=='cycling-regular')\r\n                  {\r\n                    profile='cycling'\r\n                  }\r\n                  else if(profile=='driving-car')\r\n                  {\r\n                    profile='driving'\r\n                  }\r\n                  getIso();\r\n              } else if (e.target.name === 'duration') {\r\n                  var totalMinutes = \"\";\r\n                  var colorName = \"\";\r\n                  if ($(params).find(\"input:checkbox:checked\").length > 0) {\r\n                      $(params).find(\"input:checkbox:checked\").each(function () {\r\n                          if (totalMinutes.length > 0) {\r\n                              totalMinutes += \",\"\r\n                          }\r\n                          if (colorName.length > 0) {\r\n                              colorName += \",\"\r\n                          }\r\n                          var val = $(this).val();\r\n                          totalMinutes += val;\r\n                          vm.SetColor(val);\r\n                          colorName += vm.colors;\r\n                      });\r\n                      minutes = totalMinutes;\r\n                      vm.colors = colorName;\r\n                      getIso();\r\n                  }\r\n                  else {\r\n                      minutes = \"10,20,30\";\r\n                      vm.colors = '3CEA19,EFF60B,F6320B';\r\n                      getIso();\r\n                  }\r\n              }\r\n          });\r\n          vm.map.on('load', function () {LoadMapboxLayer();});\r\n          function LoadMapboxLayer() {\r\n              // When the map loads, add the source and layer\r\n              vm.map.addSource('iso', {\r\n                  type: 'geojson',\r\n                  data: {\r\n                      'type': 'FeatureCollection',\r\n                      'features': []\r\n                  }\r\n              });\r\n              vm.map.addLayer(\r\n                {\r\n                    'id': 'isoLayer',\r\n                    'type': 'fill',\r\n                    'source': 'iso',\r\n                    'layout': {},\r\n                    'paint': {\r\n                        'fill-color': ['get', 'fillColor'],\r\n                        'fill-opacity': 0.5\r\n                    }\r\n                },\r\n                'poi-label'\r\n              );\r\n              var lngLat = {\r\n                  lon: lngitude,\r\n                  lat: lats\r\n              };\r\n              var mapicon = localStorage.getItem(\"UserImage\");\r\n              if (String(mapicon).indexOf('blob') <= 0) {\r\n                  mapicon = 'https://app.talygen.com/Content/images/Black/user.png'\r\n              }\r\n              var popup = new mapboxgl.Popup({ offset: 25 }).setHTML(\"<div style='padding:8px;'><img style='float:left;' src='\" + mapicon + \"' class='marker' /> <div style='display:block;'>@loggedUserInfo.Name </br>@loggedUserInfo.Email</div></div>\");\r\n              var el = document.createElement('div');\r\n              el.className = 'marker';\r\n              el.style.backgroundImage = 'url(' + mapicon + ')';\r\n              el.style.backgroundPosition = \"top center\";\r\n              el.style.backgroundSize = \"cover\";\r\n              el.style.width = '40px';\r\n              el.style.height = '40px';\r\n              // add marker to map\r\n              var marker = new mapboxgl.Marker(el).setLngLat(lngLat).setPopup(popup).addTo(vm.map);\r\n              vm.imageMarker.push(marker);\r\n              // Make the API call\r\n              getIso();\r\n          }\r\n      },\r\n      TravelMode: function(tm){\r\n        var vm=this;\r\n        vm.time=vm.time-tm;\r\n        if(vm.mapType=='LeafLet')\r\n        {\r\n          vm.ShowEtaMap();\r\n        }\r\n        else if(vm.mapType=='Google'){\r\n          vm.LoadGoogleHeatMap();\r\n        }\r\n        else if(vm.mapType=='MapBox'){\r\n          vm.LoadMapboxHeatMap();\r\n        }\r\n        \r\n      },\r\n      ShowTravelMode:function(){\r\n        var vm=this;\r\n        if(vm.showSettingPopup==false){\r\n         $(\".settingPopup\").removeClass(\"d-none\")\r\n         vm.showSetting=false;\r\n         vm.showSettingPopup=true;\r\n        }\r\n        else{\r\n          $(\".settingPopup\").addClass(\"d-none\")\r\n          vm.showSetting=true;\r\n          vm.showSettingPopup=false;\r\n        }\r\n      },\r\n      GetMapBoxAddressToDraw:function(e) {\r\n          var vm=this;\r\n          let address={City:{Name:'',LongName:''},Country:{ Name:'',LongName:''},AdministrativeAreaLevel1:{Name:'',LongName:''},AdministrativeAreaLevel2:{Name:'',LongName:''},\r\n                     AdministrativeAreaLevel3:{Name:'',LongName:''},PinCode:'',State:{Name:'',LongName:''},FullAddress:''};\r\n          // const data = draw.getAll();\r\n          if(e.features[0].geometry.type=='Polygon'){\r\n              e.features[0].geometry.coordinates[0].forEach(function (item,i) {\r\n                vm.lngLatData.push({\r\n                  Lat:item[1],\r\n                  Lng:item[0]\r\n                })\r\n              })\r\n              var point = new google.maps.LatLng(e.features[0].geometry.coordinates[0][0][1], e.features[0].geometry.coordinates[0][0][0]);\r\n              var geocoder = new google.maps.Geocoder();\r\n                      geocoder.geocode({ 'latLng': point },\r\n                          function (results, status) {\r\n                            address.FullAddress=results[0].formatted_address;\r\n                              if (status == google.maps.GeocoderStatus.OK) {\r\n                                  results[0].address_components.forEach(function (item,i) {\r\n                            //vm.address=[];\r\n                            if(item.types[0]=='country'){\r\n                             address.Country.Name=item.short_name;\r\n                             address.Country.LongName=item.long_name;\r\n                            }\r\n                            else if(item.types[0]=='postal_code')\r\n                            {\r\n                              address.PinCode=item.long_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_1')\r\n                            {\r\n                                address.AdministrativeAreaLevel1.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel1.Name=item.short_name;\r\n  \r\n                                address.State.LongName=item.long_name;\r\n                                address.State.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_2')\r\n                            {\r\n                                address.AdministrativeAreaLevel2.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel2.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_3')\r\n                            {\r\n                                vm.address.push({\r\n                                  AdministrativeArea3:item.long_name\r\n                                })\r\n                                address.AdministrativeAreaLevel3.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel3.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='locality'){\r\n                                vm.address.push({\r\n                                  City:item.long_name\r\n                                })\r\n                                address.City.LongName=item.long_name;\r\n                                address.City.Name=item.short_name;\r\n                            }\r\n                          })\r\n                          vm.fullAddress.push({'LatLng':vm.lngLatData,'CompleteAddress':address})\r\n                          vm.$emit('GetAddress',vm.fullAddress);   \r\n                          }\r\n                      });\r\n         \r\n          }\r\n          else{\r\n                   vm.lngLatData.push({\r\n                    Lat:e.features[0].geometry.coordinates[1],\r\n                    Lng:e.features[0].geometry.coordinates[0]\r\n                  })\r\n                  var point = new google.maps.LatLng(e.features[0].geometry.coordinates[1], e.features[0].geometry.coordinates[0]);\r\n              var geocoder = new google.maps.Geocoder();\r\n                      geocoder.geocode({ 'latLng': point },\r\n                          function (results, status) {\r\n                            address.FullAddress=results[0].formatted_address;\r\n                              if (status == google.maps.GeocoderStatus.OK) {\r\n                                results[0].address_components.forEach(function (item,i) {\r\n                            if(item.types[0]=='country'){\r\n                             address.Country.Name=item.short_name;\r\n                             address.Country.LongName=item.long_name;\r\n                            }\r\n                            else if(item.types[0]=='postal_code')\r\n                            {\r\n                              address.PinCode=item.long_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_1')\r\n                            {\r\n                                address.AdministrativeAreaLevel1.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel1.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_2')\r\n                            {\r\n                                address.AdministrativeAreaLevel2.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel2.Name=item.short_name;\r\n  \r\n                                address.State.LongName=item.long_name;\r\n                                address.State.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='administrative_area_level_3')\r\n                            {\r\n                                vm.address.push({\r\n                                  AdministrativeArea3:item.long_name\r\n                                })\r\n                                address.AdministrativeAreaLevel3.LongName=item.long_name;\r\n                                address.AdministrativeAreaLevel3.Name=item.short_name;\r\n                            }\r\n                            else if(item.types[0]=='locality'){\r\n                                vm.address.push({\r\n                                  City:item.long_name\r\n                                })\r\n                                address.City.LongName=item.long_name;\r\n                                address.City.Name=item.short_name;\r\n                            }\r\n                          }) \r\n                          vm.fullAddress.push({'LatLng':vm.lngLatData,'CompleteAddress':address})\r\n                          vm.$emit('GetAddress',vm.fullAddress);   \r\n                          }\r\n                      });\r\n          }\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  <style>\r\n   .mapboxgl-popup-content button.mapboxgl-popup-close-button {\r\n          font-size: 23px;\r\n          top: 3px\r\n      }\r\n      .mapboxgl-popup {\r\n          width: 340px;\r\n          max-width: 340px !important\r\n      }\r\n  \r\n      .leaflet-popup-content .popupcontent {\r\n          background: #fff\r\n      }\r\n  \r\n      .leaflet-left .leaflet-control-zoom {\r\n          display: none\r\n      }\r\n  \r\n      .leaflet-marker-icon {\r\n          border-radius: 100% !important\r\n      }\r\n  \r\n      .leaflet-popup-content p {\r\n          margin: auto !important\r\n      }\r\n  \r\n      .leaflet-popup-content-wrapper {\r\n          padding: 0 !important\r\n      }\r\n  \r\n      .leaflet-popup-content {\r\n          margin: auto !important;\r\n          line-height: 1.4 !important;\r\n          width: 340px !important\r\n      }\r\n  \r\n      .leaflet-container a.leaflet-popup-close-button {\r\n          color: #5c5c5c !important;\r\n          padding: 6px 5px 0 0 !important\r\n      }\r\n  \r\n      .gm-style-iw.gm-style-iw-c {\r\n          background-color: #fff !important;\r\n          padding-right: 0 !important;\r\n          padding-bottom: 0 !important;\r\n          max-width: 648px !important;\r\n          min-height: 150px !important;\r\n          padding: 0 !important;\r\n          width: 340px !important;\r\n          border-radius: 0\r\n      }\r\n  \r\n          .gm-style-iw.gm-style-iw-c button.gm-ui-hover-effect {\r\n              background: 0 0 !important;\r\n              display: block !important;\r\n              font-size: 18px !important;\r\n              border: 0 !important;\r\n              margin: 0 !important;\r\n              padding: 0 !important;\r\n              position: absolute !important;\r\n              cursor: pointer !important;\r\n              user-select: none !important;\r\n              top: -6px !important;\r\n              right: -6px !important;\r\n              width: 36px !important;\r\n              height: 40px !important\r\n          }\r\n  \r\n          .gm-style-iw.gm-style-iw-c .gm-style-iw-d {\r\n              overflow: hidden !important;\r\n              width: 100% !important\r\n          }\r\n  \r\n          .gm-style-iw.gm-style-iw-c #content {\r\n              padding: 0 !important;\r\n              transition: all .3s;\r\n              width: 100%\r\n          }\r\n  \r\n          .gm-style-iw.gm-style-iw-c .map-pop-header {\r\n              color: #fff\r\n          }\r\n  \r\n              .gm-style-iw.gm-style-iw-c .map-pop-header.Medium {\r\n                  background: #4cb4fb\r\n              }\r\n  \r\n              .gm-style-iw.gm-style-iw-c .map-pop-header.Low {\r\n                  background: #4db567\r\n              }\r\n  \r\n              .gm-style-iw.gm-style-iw-c .map-pop-header.High {\r\n                  background: #fbc648\r\n              }\r\n  \r\n              .gm-style-iw.gm-style-iw-c .map-pop-header.Critical {\r\n                  background: #ef8934\r\n              }\r\n  \r\n              .gm-style-iw.gm-style-iw-c .map-pop-header.highprofile {\r\n                  background: #de0303\r\n              }\r\n  \r\n          .gm-style-iw.gm-style-iw-c .firstHeading {\r\n              font-size: 16px;\r\n              display: flex;\r\n              align-items: center;\r\n              padding: 5px 10px\r\n          }\r\n  \r\n          .gm-style-iw.gm-style-iw-c .status {\r\n              font-size: 12px;\r\n              background: #5c5c5c;\r\n              font-weight: 400;\r\n              color: #fff;\r\n              padding: 4px 6px;\r\n              margin-left: 5px\r\n          }\r\n  \r\n          .gm-style-iw.gm-style-iw-c p.details {\r\n              display: flex;\r\n              width: 100%;\r\n              font-weight: bolder;\r\n              font-size: 14px;\r\n              padding: 5px 10px;\r\n              margin-bottom: 4px\r\n          }\r\n  \r\n              .gm-style-iw.gm-style-iw-c p.details span {\r\n                  font-size: 12px;\r\n                  font-weight: 400;\r\n                  text-transform: capitalize\r\n              }\r\n  \r\n          .gm-style-iw.gm-style-iw-c .view-details {\r\n              display: flex;\r\n              width: 100%;\r\n              font-weight: bolder;\r\n              font-size: 14px;\r\n              margin-bottom: 0;\r\n              border-top: 2px solid #bfbfbf;\r\n              flex-direction: row\r\n          }\r\n  \r\n              .gm-style-iw.gm-style-iw-c .view-details a {\r\n                  padding: 0 5px;\r\n                  margin-right: 5px;\r\n                  color: #525e65\r\n              }\r\n  \r\n      .mapboxgl-popup-content {\r\n          padding: 0 !important\r\n      }\r\n  \r\n      .mail-box-pop.dialog {\r\n          background: rgba(0, 0, 0, 0.5) !important;\r\n      }\r\n  \r\n      .mail-box-pop .modal-dialog {\r\n          max-width: 570px !important;\r\n          min-height: 500px !important;\r\n      }\r\n  \r\n      .mail-box-pop.eta .modal-dialog {\r\n          max-width: 1200px !important;\r\n          min-height: 500px !important\r\n      }\r\n  \r\n      .mail-box-pop.eta .modal-body {\r\n          max-height: 800px !important;\r\n          height: 800px !important\r\n      }\r\n  \r\n      .motabod {\r\n          border-right: 10px solid #e5e5e5\r\n      }\r\n  \r\n      .movedivider {\r\n          background-repeat: no-repeat;\r\n          background-position: 0 0;\r\n          width: 37px;\r\n          height: 57px;\r\n          position: absolute;\r\n          z-index: 999;\r\n          right: -24px;\r\n          top: 160px\r\n      }\r\n  \r\n      .movedivider {\r\n          display: none\r\n      }\r\n  \r\n      tr.bg-danger {\r\n          background-color: #f7ccd0 !important\r\n      }\r\n  \r\n      .ui-resizable-handle {\r\n          z-index: 9999\r\n      }\r\n  \r\n      .custom-tab-content ul.responsive-tabs.fsmtabcontrol li a {\r\n          padding: 10px\r\n      }\r\n  \r\n      .tags-input-badge {\r\n          font-size: 12px !important;\r\n          padding-top: 5px !important;\r\n          padding-bottom: 5px !important;\r\n          background-color: #3f637e !important;\r\n          color: #fff !important\r\n      }\r\n  \r\n      .tags-input-remove::after, .tags-input-remove::before {\r\n          background: #fff !important\r\n      }\r\n  \r\n      div[aria-describedby=divticketquickview] .modal-dialog {\r\n          max-width: 85% !important\r\n      }\r\n  \r\n      ul.tags_fsm {\r\n          float: left;\r\n          margin: 0;\r\n          padding: 0\r\n      }\r\n  \r\n          ul.tags_fsm li {\r\n              float: left;\r\n              margin: 0 5px 5px 0;\r\n              padding: 0 8px;\r\n              display: inline-block;\r\n              color: #fff;\r\n              border-radius: 5px !important;\r\n              font-size: 12px\r\n          }\r\n  \r\n      .tags-input span {\r\n          margin-bottom: .3em\r\n      }\r\n  \r\n      .circle-leaflet {\r\n          width: 55px !important;\r\n          height: 55px !important;\r\n          line-height: 55px;\r\n          background-image: url(https://talygenv.github.io/Vue-UI-Content/images/Ticketing/m2.png) !important;\r\n          text-align: center !important;\r\n          font-weight: 700 !important;\r\n          position: absolute !important;\r\n          top: -22px !important;\r\n          left: -19px !important\r\n      }\r\n  \r\n      .table-heading-wb .table-head-btn {\r\n          padding: .5rem\r\n      }\r\n  \r\n      .gmnoprint {\r\n          right: 0 !important;\r\n          left: auto !important\r\n      }\r\n  \r\n      .bg-gray-faint {\r\n          position: relative;\r\n          background-color: #fff !important;\r\n          font-family: 'Open Sans',sans-serif;\r\n          padding: 8px 16px !important;\r\n          margin-top: 55px !important;\r\n          border: 1px solid #2196f3;\r\n          margin-left: 12px !important;\r\n      }\r\n  \r\n          .bg-gray-faint:after {\r\n              color: #2196f3;\r\n              content: \"\\f0d8\";\r\n              position: absolute;\r\n              font: normal normal normal 14px/1 FontAwesome;\r\n              top: -19px;\r\n              left: 10%;\r\n              font-size: 27px\r\n          }\r\n  \r\n      .checkbox-container > input, .radio-container > input, .switch-container > input, .toggle-container > input {\r\n          border: 0;\r\n          clip: rect(0 0 0 0);\r\n          height: 1px;\r\n          margin: -1px;\r\n          overflow: hidden;\r\n          padding: 0;\r\n          position: absolute;\r\n          width: 1px;\r\n          white-space: nowrap\r\n      }\r\n  \r\n      .txt-m {\r\n          font-size: 15px;\r\n          line-height: 24px;\r\n          margin-top: 0;\r\n          margin-bottom: 0\r\n      }\r\n  \r\n      .toggle-group {\r\n          display: -webkit-inline-flex;\r\n          display: inline-flex;\r\n          text-align: center;\r\n          border-radius: 18px\r\n      }\r\n  \r\n      .toggle-container {\r\n          display: block;\r\n          max-width: 100%\r\n      }\r\n  \r\n      input:checked + .toggle {\r\n          background: #448ee4;\r\n          color: #fff\r\n      }\r\n  \r\n      .toggle {\r\n          -webkit-flex-shrink: 0;\r\n          flex-shrink: 0;\r\n          cursor: pointer;\r\n          color: #999;\r\n          font-weight: 700;\r\n          font-size: 12px;\r\n          padding: 6px 18px;\r\n          border-radius: 18px !important;\r\n          background-color: transparent;\r\n          transition: color .125s,background-color .125s\r\n      }\r\n  \r\n      .switch {\r\n          position: relative;\r\n          display: inline-block;\r\n          width: 60px;\r\n          height: 31px;\r\n          margin: 0 10px\r\n      }\r\n  \r\n          .switch input {\r\n              opacity: 0;\r\n              width: 0;\r\n              height: 0\r\n          }\r\n  \r\n      .sliderchk {\r\n          position: absolute;\r\n          cursor: pointer;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          background-color: #ccc;\r\n          -webkit-transition: .4s;\r\n          transition: .4s\r\n      }\r\n  \r\n          .sliderchk:before {\r\n              position: absolute;\r\n              content: \"\";\r\n              height: 24px;\r\n              width: 24px;\r\n              left: 6px;\r\n              bottom: 4px;\r\n              background-color: #fff;\r\n              -webkit-transition: .4s;\r\n              transition: .4s\r\n          }\r\n  \r\n      input:checked + .sliderchk {\r\n          background-color: #2196f3\r\n      }\r\n  \r\n      input:focus + .sliderchk {\r\n          box-shadow: 0 0 1px #2196f3\r\n      }\r\n  \r\n      input:checked + .sliderchk:before {\r\n          -webkit-transform: translateX(26px);\r\n          -ms-transform: translateX(26px);\r\n          transform: translateX(26px)\r\n      }\r\n  \r\n      .sliderchk.round {\r\n          border-radius: 34px !important\r\n      }\r\n  \r\n          .sliderchk.round:before {\r\n              border-radius: 50%\r\n          }\r\n  \r\n      .textname {\r\n          top: 29px;\r\n          position: absolute;\r\n          left: 4px;\r\n          font-size: 13px;\r\n          color: #999;\r\n          font-weight: 700\r\n      }\r\n  \r\n      .timelegend {\r\n          height: 10px;\r\n          padding: 0 15px;\r\n          display: inline-block\r\n      }\r\n  \r\n          .timelegend.min10 {\r\n              background-color: #96d52d\r\n          }\r\n  \r\n          .timelegend.min20 {\r\n              background-color: #f0c141\r\n          }\r\n  \r\n          .timelegend.min30 {\r\n              background-color: #f18d76\r\n          }\r\n  \r\n      .showduration {\r\n          float: left;\r\n          color: #565656 !important;\r\n          position: absolute;\r\n          left: 4px;\r\n          top: 0;\r\n          cursor: pointer;\r\n          font-size: 18px;\r\n          background-color: #fff;\r\n          padding: 7px 18px;\r\n          margin: 10px;\r\n          margin-left: 8px;\r\n          font-family: Roboto,Arial,sans-serif;\r\n          z-index: 999\r\n      }\r\n  \r\n          /* .showduration.anchideduration {\r\n              display: none\r\n          } */\r\n  \r\n      #divdataviewdata .card-box .custom-checkbox {\r\n          padding-left: 1rem !important\r\n      }\r\n  \r\n      .tags-input-root .typeahead-badges {\r\n          padding-top: .25rem !important\r\n      }\r\n  \r\n      #divmapdata .map-result img {\r\n          width: auto !important;\r\n      }\r\n  \r\n      .filterscrollForCardView {\r\n          scrollbar-width: thin;\r\n          scrollbar-color: rgb(132 132 132);\r\n      }\r\n  \r\n          .filterscrollForCardView::-webkit-scrollbar {\r\n              width: 8px;\r\n              height: 8px;\r\n          }\r\n  \r\n          .filterscrollForCardView::-webkit-scrollbar-track {\r\n              background-clip: content-box;\r\n              border: 2px solid transparent;\r\n          }\r\n  \r\n          .filterscrollForCardView::-webkit-scrollbar-thumb {\r\n              background-color: rgb(132 132 132);\r\n          }\r\n  \r\n  \r\n          .filterscrollForCardView::-webkit-scrollbar-corner, .scrollbar-1::-webkit-scrollbar-track {\r\n              background-color: rgb(132 132 132);\r\n          }\r\n  \r\n  \r\n  \r\n      .typeahead-badges > span {\r\n          max-width: 195px;\r\n      }\r\n  \r\n      [data-color_code]::after {\r\n          background-color: attr(data-color_code);\r\n      }\r\n  \r\n      .fsm-ticket, .table-bordered tr.fsm-ticket {\r\n          background-color: #f5f1ef !important;\r\n      }\r\n      .pinscreenMap {\r\n          background: #17a2b8;\r\n          border-left: 0px !important;\r\n          padding: 15px 0px !important;\r\n          width: 50px;\r\n          cursor: pointer;\r\n      }\r\n      .unpinscreenMap {\r\n          background: #525f65;\r\n          padding: 15px 0px !important;\r\n          width: 50px;\r\n          cursor: pointer;\r\n      }\r\n      .unpinscreenMap i {\r\n      transform: rotate(-45deg);\r\n  }\r\n  .map-actions span.esri_prof:hover {\r\n        transform: none !important;\r\n    }\r\n\r\n    .map-actions span.esri_prof a {\r\n        color: #212529\r\n    }\r\n\r\n\r\n    .mCustomScrollBox .mCS-light {\r\n        max-height: inherit !important;\r\n    }\r\n\r\n    .mCustomScrollBox {\r\n        max-height: inherit !important;\r\n    }\r\n\r\n    #scrollbarreplyuserguide {\r\n        max-height: 350px;\r\n    }\r\n    /*.font-pic-size-28 {\r\n        font-size: 28px !important;\r\n    }*/\r\n    \r\n        a[href=\"/Ticketing/Index\"] {\r\n         background: none !important;\r\n        }\r\n        .theme-primary.partition {\r\n        overflow: visible\r\n    }\r\n\r\n  </style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapComponent.vue?vue&type=template&id=9ad80734&\"\nimport script from \"./MapComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./MapComponent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MapComponent.vue?vue&type=style&index=0&id=9ad80734&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapComponent.vue?vue&type=style&index=0&id=9ad80734&prod&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".mapboxgl-popup-content button.mapboxgl-popup-close-button{font-size:23px;top:3px}.mapboxgl-popup{width:340px;max-width:340px!important}.leaflet-popup-content .popupcontent{background:#fff}.leaflet-left .leaflet-control-zoom{display:none}.leaflet-marker-icon{border-radius:100%!important}.leaflet-popup-content p{margin:auto!important}.leaflet-popup-content-wrapper{padding:0!important}.leaflet-popup-content{margin:auto!important;line-height:1.4!important;width:340px!important}.leaflet-container a.leaflet-popup-close-button{color:#5c5c5c!important;padding:6px 5px 0 0!important}.gm-style-iw.gm-style-iw-c{background-color:#fff!important;padding-right:0!important;padding-bottom:0!important;max-width:648px!important;min-height:150px!important;padding:0!important;width:340px!important;border-radius:0}.gm-style-iw.gm-style-iw-c button.gm-ui-hover-effect{background:0 0!important;display:block!important;font-size:18px!important;border:0!important;margin:0!important;padding:0!important;position:absolute!important;cursor:pointer!important;-webkit-user-select:none!important;-moz-user-select:none!important;user-select:none!important;top:-6px!important;right:-6px!important;width:36px!important;height:40px!important}.gm-style-iw.gm-style-iw-c .gm-style-iw-d{overflow:hidden!important;width:100%!important}.gm-style-iw.gm-style-iw-c #content{padding:0!important;transition:all .3s;width:100%}.gm-style-iw.gm-style-iw-c .map-pop-header{color:#fff}.gm-style-iw.gm-style-iw-c .map-pop-header.Medium{background:#4cb4fb}.gm-style-iw.gm-style-iw-c .map-pop-header.Low{background:#4db567}.gm-style-iw.gm-style-iw-c .map-pop-header.High{background:#fbc648}.gm-style-iw.gm-style-iw-c .map-pop-header.Critical{background:#ef8934}.gm-style-iw.gm-style-iw-c .map-pop-header.highprofile{background:#de0303}.gm-style-iw.gm-style-iw-c .firstHeading{font-size:16px;display:flex;align-items:center;padding:5px 10px}.gm-style-iw.gm-style-iw-c .status{font-size:12px;background:#5c5c5c;font-weight:400;color:#fff;padding:4px 6px;margin-left:5px}.gm-style-iw.gm-style-iw-c p.details{display:flex;width:100%;font-weight:bolder;font-size:14px;padding:5px 10px;margin-bottom:4px}.gm-style-iw.gm-style-iw-c p.details span{font-size:12px;font-weight:400;text-transform:capitalize}.gm-style-iw.gm-style-iw-c .view-details{display:flex;width:100%;font-weight:bolder;font-size:14px;margin-bottom:0;border-top:2px solid #bfbfbf;flex-direction:row}.gm-style-iw.gm-style-iw-c .view-details a{padding:0 5px;margin-right:5px;color:#525e65}.mapboxgl-popup-content{padding:0!important}.mail-box-pop.dialog{background:rgba(0,0,0,.5)!important}.mail-box-pop .modal-dialog{max-width:570px!important;min-height:500px!important}.mail-box-pop.eta .modal-dialog{max-width:1200px!important;min-height:500px!important}.mail-box-pop.eta .modal-body{max-height:800px!important;height:800px!important}.motabod{border-right:10px solid #e5e5e5}.movedivider{background-repeat:no-repeat;background-position:0 0;width:37px;height:57px;position:absolute;z-index:999;right:-24px;top:160px;display:none}tr.bg-danger{background-color:#f7ccd0!important}.ui-resizable-handle{z-index:9999}.custom-tab-content ul.responsive-tabs.fsmtabcontrol li a{padding:10px}.tags-input-badge{font-size:12px!important;padding-top:5px!important;padding-bottom:5px!important;background-color:#3f637e!important;color:#fff!important}.tags-input-remove:after,.tags-input-remove:before{background:#fff!important}div[aria-describedby=divticketquickview] .modal-dialog{max-width:85%!important}ul.tags_fsm{float:left;margin:0;padding:0}ul.tags_fsm li{float:left;margin:0 5px 5px 0;padding:0 8px;display:inline-block;color:#fff;border-radius:5px!important;font-size:12px}.tags-input span{margin-bottom:.3em}.circle-leaflet{width:55px!important;height:55px!important;line-height:55px;background-image:url(https://talygenv.github.io/Vue-UI-Content/images/Ticketing/m2.png)!important;text-align:center!important;font-weight:700!important;position:absolute!important;top:-22px!important;left:-19px!important}.table-heading-wb .table-head-btn{padding:.5rem}.gmnoprint{right:0!important;left:auto!important}.bg-gray-faint{position:relative;background-color:#fff!important;font-family:Open Sans,sans-serif;padding:8px 16px!important;margin-top:55px!important;border:1px solid #2196f3;margin-left:12px!important}.bg-gray-faint:after{color:#2196f3;content:\\\"\\\\f0d8\\\";position:absolute;font:normal normal normal 14px/1 FontAwesome;top:-19px;left:10%;font-size:27px}.checkbox-container>input,.radio-container>input,.switch-container>input,.toggle-container>input{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.txt-m{font-size:15px;line-height:24px;margin-top:0;margin-bottom:0}.toggle-group{display:inline-flex;text-align:center;border-radius:18px}.toggle-container{display:block;max-width:100%}input:checked+.toggle{background:#448ee4;color:#fff}.toggle{flex-shrink:0;cursor:pointer;color:#999;font-weight:700;font-size:12px;padding:6px 18px;border-radius:18px!important;background-color:transparent;transition:color .125s,background-color .125s}.switch{position:relative;display:inline-block;width:60px;height:31px;margin:0 10px}.switch input{opacity:0;width:0;height:0}.sliderchk{cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc}.sliderchk,.sliderchk:before{position:absolute;transition:.4s}.sliderchk:before{content:\\\"\\\";height:24px;width:24px;left:6px;bottom:4px;background-color:#fff}input:checked+.sliderchk{background-color:#2196f3}input:focus+.sliderchk{box-shadow:0 0 1px #2196f3}input:checked+.sliderchk:before{transform:translateX(26px)}.sliderchk.round{border-radius:34px!important}.sliderchk.round:before{border-radius:50%}.textname{top:29px;position:absolute;left:4px;font-size:13px;color:#999;font-weight:700}.timelegend{height:10px;padding:0 15px;display:inline-block}.timelegend.min10{background-color:#96d52d}.timelegend.min20{background-color:#f0c141}.timelegend.min30{background-color:#f18d76}.showduration{float:left;color:#565656!important;position:absolute;left:4px;top:0;cursor:pointer;font-size:18px;background-color:#fff;padding:7px 18px;margin:10px;margin-left:8px;font-family:Roboto,Arial,sans-serif;z-index:999}#divdataviewdata .card-box .custom-checkbox{padding-left:1rem!important}.tags-input-root .typeahead-badges{padding-top:.25rem!important}#divmapdata .map-result img{width:auto!important}.filterscrollForCardView{scrollbar-width:thin;scrollbar-color:#848484}.filterscrollForCardView::-webkit-scrollbar{width:8px;height:8px}.filterscrollForCardView::-webkit-scrollbar-track{background-clip:content-box;border:2px solid transparent}.filterscrollForCardView::-webkit-scrollbar-thumb{background-color:#848484}.filterscrollForCardView::-webkit-scrollbar-corner,.scrollbar-1::-webkit-scrollbar-track{background-color:#848484}.typeahead-badges>span{max-width:195px}[data-color_code]:after{background-color:attr(data-color_code)}.fsm-ticket,.table-bordered tr.fsm-ticket{background-color:#f5f1ef!important}.pinscreenMap{background:#17a2b8;border-left:0!important}.pinscreenMap,.unpinscreenMap{padding:15px 0!important;width:50px;cursor:pointer}.unpinscreenMap{background:#525f65}.unpinscreenMap i{transform:rotate(-45deg)}.map-actions span.esri_prof:hover{transform:none!important}.map-actions span.esri_prof a{color:#212529}.mCustomScrollBox,.mCustomScrollBox .mCS-light{max-height:inherit!important}#scrollbarreplyuserguide{max-height:350px}a[href=\\\"/Ticketing/Index\\\"]{background:none!important}.theme-primary.partition{overflow:visible}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"my-popups\"},[_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full\"},[_c('h4',{staticClass:\"modal-title\"},[_vm._v(\"Add Zone\")]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$emit('Close')}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]),_c('div',{staticClass:\"modal-body\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}})],1)])])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <div class=\"my-popups\">\r\n            <!-- <loader :is-visible=\"isLoading\"></loader> -->\r\n            <div class=\"modal d-block\">\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header theme-primary partition-full\">\r\n                            <h4 class=\"modal-title\">Add Zone</h4>\r\n                            <button type=\"button\" class=\"close\" v-on:click=\"$emit('Close')\">\r\n                                <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                            </button>\r\n                        </div>\r\n                        \r\n                         <div class=\"modal-body\">\r\n                            <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\"  v-on:OnSubmit=\"onSubmit\"></dynamic-form>\r\n                        </div>\r\n                     </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nexport default {\r\n    props:{\r\n        zoneEditData:{\r\n            required:false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: 'Zone Name',\r\n                            name: \"txtZoneName\",\r\n                            value: \"\",\r\n                            placeholder: \"Enter Name\",\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        }\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: \r\n                    [\r\n                      {\r\n                        astype: \"RadioField\",\r\n                        label: 'ZoneType',\r\n                        name: \"TypeFor\",\r\n                        value: \"Locator\",\r\n                        placeholder: \"\",\r\n                        config: {\r\n                        options: [\r\n                        {\r\n                            name:'Locator Area',value:'Locator'\r\n                        },\r\n                        {\r\n                            name:'High Profile',value:'High_Profile'\r\n                        },\r\n                        {\r\n                            name:'Locator After Hours',value:'LocatorAfterHours'\r\n                        },\r\n                        {\r\n                            name:'Yard',value:'Yard'\r\n                        }\r\n                    ],\r\n                        showAddIcon: false,\r\n                        onChange: this.onChangeRadio\r\n                     },\r\n                    validationRules: { \"required\": true},\r\n                }]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: this.$t('Description'),\r\n                            name: \"Description\",    \r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true, max: 500 },          \r\n                        },\r\n                    ],\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    onClick: this.Save\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close\r\n                }\r\n            ],\r\n            ListData: []\r\n        }\r\n    },\r\n    created:function(){\r\n        debugger\r\n        var vm=this;\r\n       // if(vm.zoneEditData.length>0){\r\n            vm.FormSchema[0].Data[0].value=vm.zoneEditData.ZONE_NAME;\r\n            vm.FormSchema[1].Data[0].value=vm.zoneEditData.ZONE_TYPE;\r\n            vm.FormSchema[2].Data[0].value=vm.zoneEditData.ZONE_DESCRIPTION;\r\n        //}\r\n    },\r\n    methods:{\r\n        Close:function(){\r\n            var vm=this;\r\n            vm.$emit(\"Close\");\r\n        },\r\n        Save:function() {\r\n            debugger\r\n            var vm = this;\r\n            let obj={\r\n                ZoneId:vm.zoneEditData==undefined?0:vm.zoneEditData.ZONE_ID,\r\n                Name:vm.FormSchema[0].Data[0].value,\r\n                ZoneType:vm.FormSchema[1].Data[0].value,\r\n                Description:vm.FormSchema[2].Data[0].value\r\n            }\r\n            vm.$emit('SaveZoneData',obj);\r\n        },\r\n    }\r\n}\r\n</script>\r\n   ","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalSaveZone.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalSaveZone.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modalSaveZone.vue?vue&type=template&id=e76888d2&\"\nimport script from \"./modalSaveZone.vue?vue&type=script&lang=js&\"\nexport * from \"./modalSaveZone.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}