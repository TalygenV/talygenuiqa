{"version":3,"sources":["webpack:///./src/views/Zone/ZoneListing.vue","webpack:///./src/views/Zone/ZoneSchema.js","webpack:///src/views/Zone/ZoneListing.vue","webpack:///./src/views/Zone/ZoneListing.vue?ece0","webpack:///./src/views/Zone/ZoneListing.vue?719f"],"names":["render","_vm","this","_c","_self","staticClass","_v","attrs","on","ShowHideMap","_s","mapHeaderText","isShowCreatePolygon","CreatePolygon","_e","isShowMap","key","componentKey","editZone","latLng","mapObj","config","zoneId","AddZonePopUp","FetchData","GetAddress","directives","name","rawName","value","IsZoneView","expression","renderActions","ZoneList","Headers","listheaderbuttons","TotalRecords","leftSearchFields","SortExp","SortBy","$t","actionButtonClick","leftCommonSearch","pagerMethod","commonHeaderButtonClick","sortdata","scopedSlots","_u","fn","data","column","COLUMN_NAME","row","STATUS_ID","class","getStatusClassList","$options","filters","formatDate","CREATED_AT","zoneEditData","Close","SaveZoneData","staticRenderFns","buttons","id","title","iconClass","callbackfunction","isdisabled","isvisible","additionalClass","checkPrivilege","isEnabledOnSelectedRow","leftsearchSchema","fieldName","fieldType","fieldIcon","fieldSearchConditionName","paramName","isSearch","listOptions","listActions","href","icon","additionalSpan","components","ManageMap","AddZone","modalSaveZoneVue","Schema","UserListLevelOne","UserListLevelTwo","alllevelselectedusers","PageSize","PageNumber","CurrentPage","TotalPages","GroupStart","GroupEnd","NoRecord","SearchCondition","SearchTypeCondition","SearchConditionByName","SearchType","MapCoordArray","txtZoneName","txtZoneDesc","PolygonType","ZoneType","isSending","userid","GeoJsonFile","GeoJsonData","ViewZoneById","ItemSelected","ZoneId","inputs","YardTrueFalse","selectoptions","SelectedItem","IsSearchTrueOrFalse","ShowMapData","ShowCreatePolygonText","ISFSMLOCATING","StrokeWidthValue","StrokeOpacityValue","FillOpacityValue","UserDataListing","searchzonetype","search","showAddZone","isShowSearchBox","isShowCurrentLocation","created","user_id","GetUserInfo","ID","user_type","UserType","companyId","CompanyId","ShowSearchData","methods","$","hasClass","removeClass","addClass","vm","paramsToObject","entries","result","item","index","event","openPopupForSetupZoneList","ZONE_ID","Edits","params","obj","latlong","refValue","popupHeaderHtml","popupHeaderColor","popupBodyHtml","popupFooterHtml","pinLatLong","latitude","longitude","polygons","address","priority","color_code","PolygonArray","DataServices","GetZoneById","then","response","plygonLatLng","JSON","parse","DATA","JSON_DATA","features","forEach","i","latlng","geometry","coordinates","items","it","push","fillColor","properties","strokeColor","strokeWeight","strokeOpacity","opacity","latLong","window","scrollTop","self","rtnActionArray","actionItem","action","isVisible","searchParams","URLSearchParams","searchConditionJson","hasOwnProperty","isPaged","searchCondition","vueObj","url","isBlank","settings","isInSlot","length","Math","ceil","TOTALRECORDS","each","val","Coord","LAT_LONG_MAP","Shape_Color","SHAPE_COLOR","GeoJSONData","ZONE_COORDINATES_DATA","ZONE_NAME","ZONE_DESCRIPTION","noRecord","setTimeout","ResponsiveDataTable","openaddTicketGroup","commonDeleteData","showUpdateStatusModal","openaddZone","sortBy","sortExp","postString","ZoneName","Name","ZoneDesc","Description","objectPostString","stringify","UpdateZone","code","ShowAlert","status","returnClass","not","confirmR","postJSON","ids","moduleName","subModuleCode","deleteActivityData","box","Status","prop","removeAttr","modal","alert","isShowDrawButton","component"],"mappings":"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","file":"js/chunk-2d0cc835.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(\"Zone Management\")]),_c('div',{staticClass:\"clear showclear\"}),_c('div',{staticClass:\"p-actions legends_topbar float-right\"},[_c('div',{staticClass:\"p-action-map collapse_map\"},[_c('a',{staticClass:\"e-c-map p-action-btn text-white align-items-center d-flex\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.ShowHideMap}},[_c('i',{staticClass:\"fa fa-angle-double-up pr-2\",attrs:{\"id\":\"icnToggleMap\"}}),_c('span',{attrs:{\"id\":\"spnToggleMap\"}},[_vm._v(_vm._s(_vm.mapHeaderText))])])]),_c('div',{staticClass:\"p-action-map\"},[(_vm.isShowCreatePolygon)?_c('a',{staticClass:\"p-action-btn text-white align-items-center d-flex\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.CreatePolygon}},[_c('i',{staticClass:\"fa fa-map-marker pr-2\"}),_c('span',[_vm._v(\"Create Polygon\")])]):_vm._e()])])]),(_vm.isShowMap)?_c('ManageMap',{key:_vm.componentKey,staticClass:\"row\",attrs:{\"mapType\":\"Google\",\"editZone\":_vm.editZone,\"mapWidth\":\"100%\",\"mapHeight\":\"780px\",\"mapContainer\":\"zoneMapDiv\",\"latLng\":_vm.latLng,\"Data\":_vm.mapObj,\"config\":_vm.config,\"zoneId\":_vm.zoneId},on:{\"AddZonePopUp\":_vm.AddZonePopUp,\"FetchData\":_vm.FetchData,\"GetAddress\":_vm.GetAddress}}):_vm._e(),_c('tg-list',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.IsZoneView),expression:\"IsZoneView\"}],attrs:{\"IsShowAction\":true,\"ModuleName\":\"Ticketing\",\"SubModuleCode\":\"\",\"IdentityColumn\":\"ZONE_ID\",\"LegendArray\":[],\"RenderRowActionMethod\":_vm.renderActions,\"widgets\":[],\"listType\":['List'],\"ListData\":_vm.ZoneList,\"HeaderData\":_vm.Headers,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"SearchFields\":_vm.leftSearchFields,\"ListDataCallBackFunction\":_vm.FetchData,\"showCheckBox\":true,\"SortExp\":_vm.SortExp,\"SortBy\":_vm.SortBy,\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"ActionButtonClick\":_vm.actionButtonClick,\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"SortdataButtonClick\":_vm.sortdata},scopedSlots:_vm._u([{key:\"slotdata\",fn:function({ data }){return [(data.column.COLUMN_NAME == 'STATUS_ID')?[_c('a',{staticClass:\"inactive-disabled\"},[(data.row.STATUS_ID == 'Active')?_c('span',{class:_vm.getStatusClassList(data.row.STATUS_ID, 'status_id')},[_vm._v(\" \"+_vm._s(data.row[data.column.COLUMN_NAME])+\" \")]):_vm._e()])]:_vm._e(),(data.column.COLUMN_NAME == 'CREATED_AT')?[_c('span',[_vm._v(\" \"+_vm._s(_vm.$options.filters.formatDate(data.row.CREATED_AT))+\" \")])]:_vm._e()]}}])}),(_vm.editZone)?_c('modalSaveZoneVue',{attrs:{\"zoneEditData\":_vm.zoneEditData},on:{\"Close\":_vm.Close,\"SaveZoneData\":_vm.SaveZoneData}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import DataServices from \"@/services/DataService\";\r\nlet buttons =\r\n    [\r\n        \r\n    {\r\n        id: 'Import',\r\n        title: 'Import',\r\n        iconClass: 'fa fa-download',\r\n        callbackfunction: '',\r\n        isdisabled: true,\r\n        isvisible: false,\r\n    },\r\n    {\r\n        title: 'Add Zone',\r\n        iconClass: 'fa fa-plus',        \r\n        callbackfunction: 'openaddZone',\r\n        additionalClass: '',\r\n        isdisabled: false,\r\n        isvisible: true,\r\n        checkPrivilege: true,\r\n        id:'AddZone',\r\n         \r\n    },\r\n   \r\n    {\r\n        id: 'DeleteMultiple',\r\n        title: 'Delete',\r\n        iconClass: 'fa-trash-o',\r\n        isEnabledOnSelectedRow: true,\r\n        callbackfunction: 'commonDeleteData',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        isEnabledOnSelectedRow: true\r\n    }\r\n   \r\n    ];\r\n    let leftsearchSchema = [\r\n        {\r\n            fieldName: 'Zone Name',\r\n            fieldType: \"text\",\r\n            fieldIcon: \"fa fa-map-marker\",\r\n            fieldSearchConditionName: ['search'],\r\n            paramName:\"search\",\r\n            isSearch: false,\r\n            value: \"\",\r\n            listOptions: []\r\n        },\r\n        {\r\n            fieldName: 'Zone Type',\r\n            fieldType: \"dropdown\",\r\n            fieldIcon: \"fa fa-map-marker\",\r\n            fieldSearchConditionName: ['searchzonetype'],\r\n            paramName:\"searchzonetype\",\r\n            isSearch: false,\r\n            value: \"\",\r\n            listOptions: [{\r\n                value:'',name:'Zone Type',\r\n            },\r\n            {\r\n                value:'high_profile',name:'High_Profile'\r\n            },\r\n            {\r\n                value:'Locator',name:'Locator'\r\n            },\r\n            {\r\n                value:'LocatorAfterHours' ,name:'Locator After Hours'\r\n            },\r\n            {\r\n                value:'Yard',name:'Yard'\r\n            }\r\n        ]\r\n        \r\n        },\r\n    ]\r\n\r\n    async function ShowSearchData() {\r\n            var vm = this;\r\n            var url = `&moduleName=${'FSM'}&type=${'TICKET_RESOLVER'}`;\r\n            await DataServices.GetDDLData(url).then(function (response) {\r\n                debugger\r\n                    if (response.data.status == \"Success\") {\r\n                        vm.selectoptions = response.data.result.DATA;\r\n                        response.data.result.DATA.forEach(element => {\r\n                            let obj = {\r\n                                name: element.name,\r\n                                value: element.value\r\n                            }\r\n                            vm.leftsearchSchema[1].listOptions.push(obj);\r\n                        });\r\n                    }\r\n                });\r\n      \r\n    };\r\n    \r\n    let listActions=[  \r\n        {\r\n            title:'View',   \r\n            href: 'javascript:void(0)',         \r\n            icon: 'fa fa-eye action-icon',\r\n            callbackfunction:'View',\r\n            additionalSpan:''\r\n        },\r\n        {\r\n            title:'Edit',   \r\n            href: 'javascript:void(0)',         \r\n            icon: 'fa fa-pencil action-icon',\r\n            callbackfunction:'Edit',\r\n            additionalSpan:''\r\n        }\r\n    ];\r\n    export default { buttons, leftsearchSchema,listActions};","<template>\r\n    <section>\r\n        <div class=\"theme-primary partition-full\">\r\n            <span class=\"p-name text-white\">Zone Management</span>\r\n            <div class=\"clear showclear\"></div>\r\n            <div class=\"p-actions legends_topbar float-right\">\r\n                <div class=\"p-action-map collapse_map\">\r\n                    <a href=\"javascript:;\" class=\"e-c-map p-action-btn text-white align-items-center d-flex \" v-on:click=\"ShowHideMap\"><i id=\"icnToggleMap\" class=\"fa fa-angle-double-up pr-2\"></i><span id=\"spnToggleMap\">{{mapHeaderText}}</span></a>\r\n                </div>\r\n                <div class=\"p-action-map\">\r\n                    <a href=\"javascript:;\" v-if=\"isShowCreatePolygon\" @click=\"CreatePolygon\" class=\"p-action-btn text-white align-items-center d-flex\"><i class=\"fa fa-map-marker pr-2\"></i><span>Create Polygon</span></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ManageMap class=\"row\" mapType=\"Google\" :editZone=\"editZone\" mapWidth=\"100%\" mapHeight=\"780px\" v-if=\"isShowMap\" @AddZonePopUp=\"AddZonePopUp\" mapContainer=\"zoneMapDiv\" @FetchData=\"FetchData\" @GetAddress=\"GetAddress\" :latLng=\"latLng\" :Data=\"mapObj\" :key=\"componentKey\" :config=\"config\" :zoneId=\"zoneId\"></ManageMap>\r\n        <tg-list v-show=\"IsZoneView\" :IsShowAction=\"true\" ModuleName=\"Ticketing\" SubModuleCode=\"\" IdentityColumn=\"ZONE_ID\"\r\n            :LegendArray=\"[]\" v-on:ActionButtonClick=\"actionButtonClick\"\r\n            :RenderRowActionMethod=\"renderActions\" :widgets=\"[]\" :listType=\"['List']\" :ListData=\"ZoneList\" :HeaderData=\"Headers\"\r\n            :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecords\" :SearchFields=\"leftSearchFields\"\r\n            :ListDataCallBackFunction=\"FetchData\" :showCheckBox=\"true\" :SortExp=\"SortExp\" :SortBy=\"SortBy\"\r\n            :NorecordfoundText=\"$t('NoRecordfound')\" v-on:LeftsearchButtonClick=\"leftCommonSearch\"\r\n            v-on:PagerButtonClick=\"pagerMethod\" v-on:HeaderButtonClick=\"commonHeaderButtonClick\"\r\n            v-on:SortdataButtonClick=\"sortdata\">\r\n            <template v-slot:slotdata=\"{ data }\">\r\n                <template v-if=\"data.column.COLUMN_NAME == 'STATUS_ID'\">\r\n                    <a class=\"inactive-disabled\">\r\n                        <span v-bind:class=\"getStatusClassList(data.row.STATUS_ID, 'status_id')\"\r\n                            v-if=\"data.row.STATUS_ID == 'Active'\">\r\n                            {{ data.row[data.column.COLUMN_NAME] }}\r\n                        </span>\r\n                    </a>\r\n                </template>\r\n                <template v-if=\"data.column.COLUMN_NAME == 'CREATED_AT'\">\r\n                        <span>\r\n                            {{ $options.filters.formatDate(data.row.CREATED_AT) }}\r\n                        </span>\r\n                    </template>\r\n            </template>\r\n        </tg-list>\r\n       <modalSaveZoneVue v-if=\"editZone\" :zoneEditData=\"zoneEditData\" @Close=\"Close\" @SaveZoneData=\"SaveZoneData\"></modalSaveZoneVue>\r\n    </section>\r\n</template>\r\n<script>\r\nimport Schema from \"@/views/Zone/ZoneSchema\";\r\nimport ManageMap from './../../components/Common/MapComponent.vue';\r\nimport AddZone from \"../../components/Modal/modalAddZone.vue\"\r\nimport DataServices from \"@/services/DataService\";\r\nimport modalSaveZoneVue from '../../components/Modal/modalSaveZone.vue';\r\nexport default {\r\n    components:{\r\n        ManageMap,\r\n        AddZone,\r\n        modalSaveZoneVue\r\n    },\r\n    data() {\r\n        return {\r\n            Headers: [{\r\n                \"COLUMN_NAME\": \"ZONE_NAME\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Name\",\r\n                \"DISPLAY_ORDER\": 1\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"NUMBER_OF_SHAPE\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Number of Shapes\",\r\n                \"DISPLAY_ORDER\": 2\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"ZONE_TYPE\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Zone Type\",\r\n                \"DISPLAY_ORDER\": 3\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"CREATED_BY\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Created by\",\r\n                \"DISPLAY_ORDER\": 3\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"CREATED_AT\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Created at\",\r\n                \"DISPLAY_ORDER\": 3\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"STATUS_ID\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"status\",\r\n                \"DISPLAY_ORDER\": 4\r\n            }\r\n            ],\r\n            listheaderbuttons: Schema.buttons,\r\n            leftSearchFields: Schema.leftsearchSchema,\r\n            isShowCreatePolygon:false,\r\n            IsZoneView: true,\r\n            listActions: Schema.listActions,\r\n            ZoneList: [],\r\n            UserListLevelOne: [],\r\n            UserListLevelTwo: [],\r\n            alllevelselectedusers: [],\r\n            SortBy: '',\r\n            SortExp: '',\r\n            PageSize: 10,\r\n            PageNumber: 1,\r\n            CurrentPage: 1,\r\n            TotalPages: 0,\r\n            GroupStart: 1,\r\n            GroupEnd: 3,\r\n            NoRecord: true,\r\n            TotalRecords: 0,\r\n            SearchCondition: '',\r\n            SearchTypeCondition: '',\r\n            SearchConditionByName: '',\r\n            SearchType: '',\r\n            MapCoordArray: [],\r\n            txtZoneName: '',\r\n            txtZoneDesc: '',\r\n            PolygonType: \"Polygon\",\r\n            ZoneType: \"Locator\",\r\n            isSending: false,\r\n            userid: [],\r\n            GeoJsonFile: '',\r\n            GeoJsonData: '',\r\n            ViewZoneById: '',\r\n            ItemSelected: null,\r\n            ZoneId: 0,\r\n            inputs: [],\r\n            YardTrueFalse: false,\r\n            selectoptions: '',\r\n            SelectedItem: null,\r\n            IsSearchTrueOrFalse: false,\r\n            ShowMapData: false,\r\n            ShowCreatePolygonText: false,\r\n            ISFSMLOCATING: false,\r\n            StrokeWidthValue: \"2\",\r\n            StrokeOpacityValue: \"0.0\",\r\n            FillOpacityValue: \"0.5\",\r\n            UserDataListing: [],\r\n            searchzonetype: '',\r\n            search: '',\r\n            isShowMap:false,\r\n            componentKey: 0,\r\n            zoneId:0,\r\n            mapHeaderText: 'Expand map',\r\n            mapObj:[],\r\n            showAddZone:false,\r\n            editZone:false,\r\n            zoneEditData:[],\r\n            config:{\r\n                isShowSearchBox:true,\r\n                isShowCurrentLocation:true\r\n            }\r\n\r\n        }\r\n    },\r\n    created: async function () {\r\n        this.user_id = this.GetUserInfo.ID\r\n        this.user_type = this.GetUserInfo.UserType\r\n        this.companyId = this.GetUserInfo.CompanyId;\r\n        await this.FetchData();\r\n        await Schema.ShowSearchData();\r\n        this.ShowHideMap();\r\n    },\r\n\r\n    methods: {\r\n        ShowHideMap: function () {     \r\n            debugger   \r\n            this.mapObj=[];   \r\n            var icon = $('#icnToggleMap');\r\n            if (this.isShowMap == false) {\r\n                this.isShowMap = true;\r\n                this.isShowCreatePolygon=true;\r\n                this.mapHeaderText = 'Collapse map';\r\n                if (icon.hasClass('fa-angle-double-up')) {\r\n                    icon.removeClass('fa-angle-double-up');\r\n                    icon.addClass('fa-angle-double-down');\r\n                }\r\n            }\r\n            else {\r\n                this.isShowMap = false;\r\n                this.mapHeaderText = 'Expand map';\r\n                if (icon.hasClass('fa-angle-double-down')) {\r\n                   \r\n\r\n                    icon.removeClass('fa-angle-double-down');\r\n                    icon.addClass('fa-angle-double-up');\r\n                }\r\n            }\r\n        },\r\n        Close:function(){\r\n            var vm=this;\r\n            vm.showAddZone=false;\r\n            vm.editZone=false;\r\n        },\r\n        AddZonePopUp:function(){\r\n            var vm=this;\r\n            vm.mapObj=[];\r\n            vm.showAddZone=true;\r\n        },\r\n        paramsToObject(entries) {\r\n            const result = {}\r\n            for (const [key, value] of entries) { // each 'entry' is a [key, value] tupple\r\n                result[key] = value;\r\n            }\r\n            return result;\r\n        },\r\n        actionButtonClick(callbackfunction, item, index, event) {\r\n            debugger\r\n            switch (callbackfunction) {\r\n                case 'View':\r\n                    this.openPopupForSetupZoneList(item.ZONE_ID)\r\n                    break;\r\n                case 'Edit':\r\n                    this.Edits(item)\r\n                    break;\r\n            }\r\n        },\r\n        openPopupForSetupZoneList:function(id){\r\n            debugger\r\n            var vm=this;\r\n            //vm.isShowMap=true;\r\n            var params=`id=${id}`;\r\n            vm.zoneId=id;\r\n            vm.mapObj=[];\r\n            var obj = {\r\n                    latlong:\"\",\r\n                    refValue:  id,\r\n                    popupHeaderHtml: '',\r\n                    popupHeaderColor: \"\",\r\n                    popupBodyHtml: '',\r\n                    popupFooterHtml: '',\r\n                    pinLatLong: {\r\n                        latitude: \"\",\r\n                        longitude: \"\"\r\n                    },\r\n                    polygons: [],\r\n                    address: \"\",\r\n                    priority:'',\r\n                    color_code:''\r\n                }  \r\n            let PolygonArray=[];\r\n            DataServices.GetZoneById(params).then(function (response) {\r\n                let plygonLatLng=JSON.parse(response.data.result.DATA[0].JSON_DATA).features;\r\n                plygonLatLng.forEach(function(row,i){\r\n                    let latlng = [];\r\n                    row.geometry.coordinates[0].forEach(function(items,it){\r\n                        latlng.push({\r\n                            latitude:items[0],\r\n                            longitude:items[1]\r\n                        })\r\n                    })  \r\n                    PolygonArray.push({\r\n                        name: \"\",\r\n                        fillColor: row.properties[\"fillColor\"],\r\n                        strokeColor:row.properties[\"stroke\"],\r\n                        strokeWeight: row.properties[\"stroke-width\"],\r\n                        strokeOpacity: row.properties[\"stroke-opacity\"],\r\n                        opacity: row.properties[\"fill-opacity\"],\r\n                        latLong: latlng\r\n                    })\r\n                })         \r\n                obj.polygons = PolygonArray;\r\n                vm.mapObj.push(obj);\r\n                if(vm.isShowMap==false){\r\n                    vm.ShowHideMap();\r\n                    vm.isShowCreatePolygon=false;\r\n                }\r\n                else{\r\n                    vm.isShowCreatePolygon=false;\r\n                }\r\n                $(window).scrollTop(0);\r\n                //vm.componentKey+=1;\r\n            })\r\n        },\r\n        renderActions: function (row) {\r\n            var self = this;\r\n            let rtnActionArray = [];\r\n            self.listActions.forEach(actionItem => {\r\n                let action = { ...actionItem };\r\n                switch (action.title) {\r\n                    case 'Edit':\r\n                        action.isVisible = true;\r\n                        break;\r\n                    default: {\r\n                        action.isVisible = true;\r\n                    }\r\n                }\r\n                rtnActionArray.push(action);\r\n            });\r\n            return rtnActionArray;\r\n        },\r\n        leftCommonSearch: function (value) {\r\n            debugger;\r\n            const searchParams = new URLSearchParams(value.searchConditionJson);\r\n            const entries = searchParams.entries();\r\n            const params = this.paramsToObject(entries);\r\n            if (params.hasOwnProperty('search')) {\r\n                this.search = params['search'];\r\n            }\r\n            else {\r\n                this.search = '';\r\n            }\r\n            if (params.hasOwnProperty('searchzonetype')) {\r\n                this.searchzonetype = params['searchzonetype'];\r\n            }\r\n            else {\r\n                this.searchzonetype = '';\r\n            }\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchCondition;\r\n            }\r\n            else {\r\n                this.searchCondition = \"\";\r\n            }\r\n            this.FetchData();\r\n        },\r\n        FetchData: async function () {\r\n            var vueObj = this;\r\n            var url = `pageSize=${vueObj.PageSize}&pageNumber=${vueObj.PageNumber}&sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}`;\r\n            if (!this.isBlank(this.search)) {\r\n                url += `&search=${this.search}`;\r\n            }\r\n            if (!this.isBlank(this.searchzonetype)) {\r\n                url += `&searchzonetype=${this.searchzonetype}`;\r\n            }\r\n            await DataServices.ZoneList(url).then(function (response) {\r\n                if (response.data != \"\" && response.data != null) {\r\n                    vueObj.Headers.forEach((column) => {\r\n                        column.settings = null;\r\n                        if (column.COLUMN_NAME == \"STATUS_ID\") {\r\n                            column.settings = {\r\n                                isInSlot: true,\r\n                            };\r\n                        }\r\n                        if (column.COLUMN_NAME == 'CREATED_AT') {\r\n                            column.settings = {\r\n                                isInSlot: true\r\n                            }\r\n                        }\r\n                    });\r\n                    if (response.data.result.DATA.length > 0) {\r\n                        vueObj.ZoneList = response.data.result.DATA;\r\n                        vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                        vueObj.listheaderbuttons[2].isdisabled=true;\r\n                        vueObj.CurrentPage = vueObj.PageNumber;\r\n                        if (vueObj.ZoneList.length > 0) {\r\n                            vueObj.TotalRecords = response.data.result.DATA[0].TOTALRECORDS;\r\n                            vueObj.NoRecord = false;\r\n                        } else {\r\n                            vueObj.NoRecord = true;\r\n                        }\r\n                        $.each(vueObj.ZoneList.DATA, function (key, val) {\r\n                            var obj = {\r\n                                Coord: val.LAT_LONG_MAP,\r\n                                Shape_Color: val.SHAPE_COLOR,\r\n                                GeoJSONData: val.ZONE_COORDINATES_DATA == null ? null : JSON.parse(val.ZONE_COORDINATES_DATA)\r\n                            };\r\n                            vueObj.MapCoordArray.push(obj);\r\n                        });\r\n                        var item = vueObj.ZoneList;\r\n                        if (item != null) {\r\n                            vueObj.ZoneId = item.ZONE_ID;\r\n                            vueObj.txtZoneName = item.ZONE_NAME;\r\n                            vueObj.txtZoneDesc = item.ZONE_DESCRIPTION;\r\n                            vueObj.ItemSelected = item;\r\n                        }\r\n                        vueObj.isShowMap=false;\r\n                    }\r\n                else {\r\n                    vueObj.noRecord = true;\r\n                    vueObj.ZoneList = [];\r\n                    vueObj.TotalRecords = 0\r\n                }\r\n                }\r\n                else {\r\n                    vueObj.noRecord = true;\r\n                    vueObj.ZoneList = [];\r\n                    vueObj.Headers = [];\r\n                    vueObj.TotalRecords = 0\r\n                }              \r\n                setTimeout(function () { vueObj.ResponsiveDataTable('tablelistingdata') }, 500);\r\n            })\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            debugger\r\n            switch (event.callbackfunction) {\r\n                case \"openaddTicketGroup\":\r\n                    this.openaddTicketGroup();\r\n                    break;\r\n                case \"commonDeleteData\":\r\n                    this.commonDeleteData();\r\n                    break;\r\n                case \"openupdateStatus\":\r\n                    this.showUpdateStatusModal = true;\r\n                    break;\r\n                case \"openaddZone\":\r\n                    this.openaddZone();\r\n                    break;\r\n            }\r\n        },\r\n        openaddZone:function(){\r\n            var vm=this;\r\n            vm.mapObj=[];\r\n            vm.isShowCreatePolygon=true;\r\n            vm.isShowMap=true;\r\n        },\r\n        Edits:function(data){\r\n          var vm=this;\r\n          vm.zoneEditData=data;\r\n          vm.editZone=true;\r\n        },\r\n        pagerMethod: function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            this.FetchData();\r\n        },\r\n        sortdata: function (sortBy) {\r\n            debugger\r\n            this.SortBy = sortBy;\r\n            var sortExp = 'ASC';\r\n            if (this.SortExp == 'ASC') {\r\n                sortExp = 'DESC';\r\n            }\r\n            this.SortExp = sortExp;\r\n            this.SortBy = sortBy;\r\n            this.SortExp = sortExp;\r\n            this.PageNumber = 1;\r\n            this.GroupStart = this.PageNumber;\r\n            this.GroupEnd = this.PageNumber + 2;\r\n            this.FetchData();\r\n        },\r\n        SaveZoneData:function(obj){\r\n            var vm=this;\r\n            var postString = {\r\n                    ZoneId: obj.ZoneId,\r\n                    ZoneName: obj.Name,\r\n                    ZoneDesc: obj.Description,\r\n                    ZoneType: obj.ZoneType\r\n                };\r\n            var objectPostString = JSON.stringify(postString);\r\n            DataServices.UpdateZone(objectPostString).then(function (response) {\r\n                if (response.data.code == \"1\") {\r\n                    //vm.ShowAlert(vm.$t('Zone')+vm.$t('UpdatedSuccess'), \"success\", true);\r\n                    vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"Zone\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.editZone=false;\r\n                    vm.FetchData();\r\n                }\r\n            })\r\n        },\r\n        getStatusClassList: function (status) {\r\n            var returnClass = '';\r\n            switch (status) {\r\n                case 'Active':\r\n                    returnClass = 'px-2 text-center bg-success text-white d-block';\r\n                    break;\r\n                case 'Inactive':\r\n                    returnClass = 'px-2 text-center bg-danger text-white d-block';\r\n                    break;\r\n                default:\r\n                    returnClass = '';\r\n            }\r\n            return returnClass;\r\n        },\r\n        commonDeleteData: function (event) {\r\n            debugger;\r\n            var vm = this;\r\n            var val = \"\";\r\n            $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                if (val.length > 0)\r\n                    val += ',';\r\n                val += $(this).val();\r\n            });\r\n            if (val.length > 0) {\r\n                vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Ticketing Service Board\")), function () {\r\n                    var postJSON = {\r\n                        ids: val,\r\n                        moduleName: \"FSM\",\r\n                        subModuleCode: \"FSM_DETAIL\"\r\n                    };\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    DataServices.deleteActivityData(objectPostString).then(response => {\r\n                        var box = \"\";\r\n                        if (response.data[0].Status == \"Success\") {\r\n                            $(\"[id^='chkAll']\").prop(\"checked\", false).removeAttr('checked');\r\n                            $(\"[id^='DeleteItem']\").removeClass('enable').addClass('disabled');\r\n                            $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                            vm.FetchData();\r\n                            box = vm.ShowAlert(vm.$t('DeletedSuccess', [vm.$t('Zone')]), \"Success\", true, vm.$t('Alert'));\r\n                        }\r\n                        else {\r\n                            box = vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Zone')]), \"failure\", true, vm.$t('Alert'));\r\n                        }\r\n                        setTimeout(function () {\r\n                            box.modal('hide');\r\n                        }, 2000);\r\n\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                alert(vm.$t(\"Selectanyrecordtodelete\"));\r\n            }\r\n        },\r\n        CreatePolygon:function(){\r\n            var vm=this;\r\n            vm.config={\r\n                isShowDrawButton:true,\r\n                isShowSearchBox:true,\r\n                isShowCurrentLocation:true\r\n            }\r\n            //vm.componentKey+=1;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ZoneListing.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ZoneListing.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ZoneListing.vue?vue&type=template&id=cf8ad124&\"\nimport script from \"./ZoneListing.vue?vue&type=script&lang=js&\"\nexport * from \"./ZoneListing.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}