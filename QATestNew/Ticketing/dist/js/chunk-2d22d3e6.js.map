{"version":3,"sources":["webpack:///./src/views/Ticketing/add.vue","webpack:///./src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue","webpack:///src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue","webpack:///./src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue?86c1","webpack:///./src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue?ccd8","webpack:///src/views/Ticketing/add.vue","webpack:///./src/views/Ticketing/add.vue?6c1d","webpack:///./src/views/Ticketing/add.vue?a0ef"],"names":["render","_vm","this","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","isSuccessMessage","_m","saveTicketStatus","staticStyle","TicketNumber","_e","ref","buttons","FormSchema","scopedSlots","_u","key","fn","data","class","error","editor","on","onReady","model","value","fieldInfo","callback","$$v","$set","expression","StaticObj","isShowMap","config","GetAddress","isManageCategory","GetDropDownData","staticRenderFns","Close","domProps","directives","name","rawName","disabled","Array","isArray","_i","$event","$$a","$$el","target","$$c","checked","$$i","concat","slice","checkForAutoCreateEnable","props","modulename","type","String","required","submodulecode","callbackfunction","Function","CLASSIC_EDITOR","isSaveAndClose","AutoServiceDisabled","layoutType","Data","astype","label","placeholder","validationRules","options","showAddIcon","visibility","settings","isInSlot","max","text","onClick","SaveCategoryForm","methods","isChecked","vm","$parent","ClearFieldValue","_data","btnType","ths","$refs","AddManageCategoryModal","validate","then","result","jsonobj","CategoryName","Status","IsForServiceRequest","Description","CategoryType","params","JSON","stringify","DataServices","SaveCategoryData","response","MSG","ShowAlert","length","forEach","group","gi","field","fi","component","components","ManageMap","ManageCategory","isShowDrawButton","isShowSearchBox","isForServiceRequest","autoCreateService","CountryDDl","StateDDl","Latitude","Longitude","jsonData","fileMulitpleData","ticketType","isMapFeature","clientId","bindFrequency","bindWeekDay","onChange","onChangeDropdown","GetStateDDL","saveForm","created","ticket_id","decodeURIComponent","$route","id","getForm","GetCountryDDL","vueObj","indexValue","filteredCountry","filter","item","CompleteAddress","Country","LongName","FullAddress","filterCountry","setTimeout","filteredState","AdministrativeAreaLevel1","filterState","AdministrativeAreaLevel2","City","AdministrativeAreaLevel3","PinCode","dataLat1","dataLat2","dataLng1","dataLng2","LatLng","index","Lat","Lng","group_name","$router","push","event","appendingUrl","GetDDLDataFSM","json","DATA","CountryId","toString","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","onChangeEventForFields","x","y","z","_field$config$options","checkIsForServiceRequest","_field$config$options2","isBlank","find","first_value","mode","format","GetClientaddress","_y$config$options$fin","checkIsAutoCreateService","_y$config$options$fin2","GetBase64String","BindAddressUsingClientAdrress","e","dropName","clientAddressId","clientid","url","GetTicketClientAddress","USER_ADDRESS_1","COUNTRY_ID","CT","ST","STATE_ID","USER_CITY","USER_ZIPCODE","USER_ADDRESS_DESC","GetDDLData","status","second_value","GetDynamicForm","isFsmLocating","ConvertCustomFieldIntoDynamicFormObj","onAddButtonClick","OpenCategoryModal","showLabel","maxSize","accept","fileType","iconClass","multiple","evt","f","reader","FileReader","fileObj","onload","theFile","binaryData","base64StringEncoded","window","btoa","fileName","n","lastIndexOf","extensionName","substring","fileExt","attachemnetMime","size","fileSize","attachement_mime","base64String","contentType","ModuleName","SubModuleCode","readAsBinaryString","ex","AddTicket","CustomFieldArray","ConvertDynamicFormObjToCustomFieldObj","CustomFieldArrayStatic","field_name","field_value","CCUsers","i","obj","moduleCode","subModuleCode","attachmentData","SaveDynamicForm","parse","Value","OTHER_DATA","TICKET_NUMBER"],"mappings":"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","file":"js/chunk-2d22d3e6.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(\" \"+_vm._s(_vm.$t('AddTicket')))]),_c('span',{staticClass:\"float-right\"},[_c('RouterLink',{staticClass:\"p-action-btn text-white float-right\",attrs:{\"to\":\"/Ticketing/Index\"}},[_c('em',{staticClass:\"fa fa-angle-double-left\"}),_c('br'),_vm._v(\" \"+_vm._s(_vm.$t('BacktoList'))+\" \")])],1)])])]),(_vm.isSuccessMessage)?_c('div',{staticClass:\"border p-3\"},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12 ticket-thankyou text-center\"},[_vm._m(0),_c('h1',{staticClass:\"mt-4 mb-4\"},[_vm._v(_vm._s(_vm.$t('ThankYou')))]),_c('div',{staticClass:\"pb-4 ticket-number\"},[_c('P',[_vm._v(_vm._s(_vm.saveTicketStatus))]),_c('div',{staticStyle:{\"font-size\":\"20px\",\"position\":\"relative\",\"background\":\"#fff3cd\",\"padding\":\"35px 30px\",\"margin\":\"20px\",\"border\":\"4px dotted #856404\",\"display\":\"inline-block\",\"color\":\"#856404\"}},[_vm._v(\" \"+_vm._s(_vm.TicketNumber))])],1)])]):_vm._e(),_c('Form',{ref:\"AddTicket\"},[(!_vm.isSuccessMessage)?_c('dynamic-form',{ref:\"AddTicketForm\",attrs:{\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},scopedSlots:_vm._u([{key:\"tgslot-Description\",fn:function({ data }){return [_c('ckeditor',{class:{ 'is-invalid': data.error != '' },attrs:{\"editor\":_vm.editor},on:{\"ready\":_vm.onReady},model:{value:(data.fieldInfo.value),callback:function ($$v) {_vm.$set(data.fieldInfo, \"value\", $$v)},expression:\"data.fieldInfo.value\"}}),_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(_vm._s(data.error))])]}},{key:\"tgslot-addresFields\",fn:function({ data }){return [_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('dynamic-form',{ref:\"AddTicketForm1\",attrs:{\"schema\":_vm.StaticObj}})],1),_c('div',{staticClass:\"col-md-6\"},[(_vm.isShowMap)?_c('ManageMap',{staticClass:\"row\",attrs:{\"mapType\":\"MapBox\",\"mapContainer\":\"WorkOrder\",\"config\":_vm.config,\"mapHeight\":\"355px\"},on:{\"GetAddress\":_vm.GetAddress}}):_vm._e()],1)])]}}],null,false,3974122177)}):_vm._e()],1),(_vm.isManageCategory)?_c('ManageCategory',{attrs:{\"modulename\":\"Ticketing\",\"submodulecode\":\"Ticketing\",\"callbackfunction\":_vm.GetDropDownData}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"checksign text-success\"},[_c('i',{staticClass:\"fa fa-check\"})])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_c('h5',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('ManageCategory')))]),_c('button',{staticClass:\"close\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]),_c('div',{staticClass:\"modal-body\"},[_c('span',{staticClass:\"user-guide\"},[_c('a',{staticClass:\"ancuserguide\",attrs:{\"data-toggle\":\"collapse\",\"href\":\"#collapseReply\",\"role\":\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseExample\"}},[_vm._v(_vm._s(_vm.$t('UserGuide')))]),_c('div',{staticClass:\"divancuserguide collapse\",attrs:{\"id\":\"collapseReply\"}},[_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarmergeuserguide\"}},[_c('div',{staticClass:\"con\",domProps:{\"innerHTML\":_vm._s(_vm.$t('UgAddManageCategory'))}})])])]),_c('Form',{ref:\"AddManageCategoryModal\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},scopedSlots:_vm._u([{key:\"tgslot-Description\",fn:function({ data }){return [_c('ckeditor',{attrs:{\"editor\":_vm.editor},on:{\"ready\":_vm.onReady},model:{value:(data.fieldInfo.value),callback:function ($$v) {_vm.$set(data.fieldInfo, \"value\", $$v)},expression:\"data.fieldInfo.value\"}}),_c('span',{staticClass:\"invalid-feedback d-block\",attrs:{\"name\":\"Description\"}},[_vm._v(_vm._s(data.error))])]}},{key:\"tgslot-IsForServiceRequest\",fn:function({ data }){return [_c('div',{staticClass:\"form-group mb-0\"},[_c('label',{staticClass:\"switch\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.fieldInfo.value),expression:\"data.fieldInfo.value\"},{name:\"disabled\",rawName:\"v-disabled\",value:(_vm.disabled),expression:\"disabled\"}],staticClass:\"form-check-input custom-control-input dynamic\",attrs:{\"type\":\"checkbox\",\"name\":'IsLogin'},domProps:{\"checked\":Array.isArray(data.fieldInfo.value)?_vm._i(data.fieldInfo.value,null)>-1:(data.fieldInfo.value)},on:{\"change\":[function($event){var $$a=data.fieldInfo.value,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(data.fieldInfo, \"value\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(data.fieldInfo, \"value\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(data.fieldInfo, \"value\", $$c)}},function($event){return _vm.checkForAutoCreateEnable(data.fieldInfo.value)}]}}),_c('span',{staticClass:\"slider round\",staticStyle:{\"cursor\":\"default\"}},[_c('span',{staticClass:\"slider-yes\"},[_vm._v(_vm._s(_vm.$t('Yes')))]),_c('span',{staticClass:\"slider-no\"},[_vm._v(_vm._s(_vm.$t('No')))])])])])]}}])})],1)],1)])])])],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <section>\r\n        <div class=\"my-popups\">\r\n            <loader :is-visible=\"isLoading\"></loader>\r\n            <div class=\"modal d-block\">\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\">{{ $t('ManageCategory') }}</h5>\r\n                            <button v-on:click=\"Close\" href=\"javascript:;\" class=\"close\">\r\n                                <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <span class=\"user-guide\">\r\n                                <a class=\"ancuserguide\" data-toggle=\"collapse\" href=\"#collapseReply\" role=\"button\"\r\n                                    aria-expanded=\"false\" aria-controls=\"collapseExample\">{{ $t('UserGuide') }}</a>\r\n                                <div id=\"collapseReply\" class=\"divancuserguide collapse\">\r\n                                    <div id=\"scrollbarmergeuserguide\" class=\"custom-scrollbar-js\">\r\n                                        <div class=\"con\" v-html=\"$t('UgAddManageCategory')\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </span>\r\n                            <Form ref=\"AddManageCategoryModal\">\r\n                                <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\">\r\n                                    <template v-slot:tgslot-Description=\"{ data }\">\r\n                                        <ckeditor :editor=\"editor\" @ready=\"onReady\" v-model=\"data.fieldInfo.value\">\r\n                                        </ckeditor>\r\n                                        <span name=\"Description\" class=\"invalid-feedback d-block\">{{ data.error }}</span>\r\n                                    </template>\r\n                                    <template v-slot:tgslot-IsForServiceRequest=\"{ data }\">\r\n                                        <div class=\"form-group mb-0\">\r\n                                            <label class=\"switch\">\r\n                                                <input class=\"form-check-input custom-control-input dynamic\" type=\"checkbox\"\r\n                                                    v-model=\"data.fieldInfo.value\" v-bind:name=\"'IsLogin'\"\r\n                                                    v-on:change=\"checkForAutoCreateEnable(data.fieldInfo.value)\"\r\n                                                    v-disabled=\"disabled\">\r\n                                                <span class=\"slider round\" style=\"cursor:default;\">\r\n                                                    <span class=\"slider-yes\">{{ $t('Yes') }}</span>\r\n                                                    <span class=\"slider-no\">{{ $t('No') }}</span>\r\n                                                </span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </template>\r\n\r\n                                </dynamic-form>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\n//import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nexport default {\r\n    props: {\r\n        modulename: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        submodulecode: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        callbackfunction: {\r\n            type: Function\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            editor: this.CLASSIC_EDITOR,\r\n            isLoading: false,\r\n            isSaveAndClose: '',\r\n            AutoServiceDisabled: true,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Category'),\r\n                            name: \"Category\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Status'),\r\n                            name: \"Status\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{ value: '1001', name: 'Active' }, { value: '1003', name: 'Inactive' }],\r\n                                showAddIcon: false\r\n                            },\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('IsForServiceRequest'),\r\n                            name: \"IsForServiceRequest\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: \"\",\r\n                            settings: {\r\n                                isInSlot: true\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('Description'),\r\n                            name: \"Description\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            settings: {\r\n                                isInSlot: true\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: { \"required\": true, max: 200 },\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save And Close\",\r\n                    value: \"SaveAndClose\",\r\n                    onClick: this.SaveCategoryForm\r\n                },\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    onClick: this.SaveCategoryForm\r\n\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    async created() {\r\n        var vm = this;\r\n\r\n    },\r\n    methods: {\r\n        checkForAutoCreateEnable: function (isChecked) {\r\n            var vm = this;\r\n            if (isChecked == true) {\r\n                vm.AutoServiceDisabled = false;\r\n            } else {\r\n                vm.AutoServiceDisabled = true;\r\n            }\r\n        },\r\n        Close: function () {\r\n            var vm = this;\r\n            vm.$parent.isManageCategory = false;\r\n        },\r\n        ClearFieldValue: function () {\r\n            var vm = this;\r\n            vm._data.FormSchema[0].Data[0].value = \"\";\r\n            vm._data.FormSchema[0].Data[1].value = \"\";\r\n            vm._data.FormSchema[1].Data[0].value = \"\";\r\n            vm._data.FormSchema[2].Data[0].value = \"\";\r\n        },\r\n        SaveCategoryForm: function (btnType) {\r\n            var vm = this;\r\n            if (btnType.value == \"SaveAndClose\") {\r\n                vm.isSaveAndClose = \"SaveAndClose\";\r\n            }\r\n            debugger;\r\n            ths.$refs.AddManageCategoryModal.validate().then(result => {\r\n                if (result) {\r\n                    var jsonobj = {\r\n                        CategoryName: vm._data.FormSchema[0].Data[0].value,\r\n                        Status: vm._data.FormSchema[0].Data[1].value,\r\n                        IsForServiceRequest: vm._data.FormSchema[1].Data[0].value,\r\n                        Description: vm._data.FormSchema[2].Data[0].value,\r\n                        CategoryType: 'TICKET_CATEGORY'\r\n                    };\r\n                    var params = JSON.stringify(jsonobj);\r\n                    DataServices.SaveCategoryData(params).then((response) => {\r\n                        debugger;\r\n                        if (response.data.result.MSG == 'Success') {\r\n                            vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Category\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                            if (vm.isSaveAndClose == \"SaveAndClose\") {\r\n                                vm.Close();\r\n                                if (vm.$parent.FormSchema.length > 0) {\r\n                                    vm.$parent.FormSchema.forEach((group, gi) => {\r\n                                        group.Data.forEach((field, fi) => {\r\n                                            if (field.name == \"ticket_category_id\") {\r\n                                                vm.callbackfunction('TICKET_CATEGORY', field, null);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n                                vm.ClearFieldValue();\r\n                                if (vm.$parent.FormSchema.length > 0) {\r\n                                    vm.$parent.FormSchema.forEach((group, gi) => {\r\n                                        group.Data.forEach((field, fi) => {\r\n                                            if (field.name == \"ticket_category_id\") {\r\n                                                vm.callbackfunction('TICKET_CATEGORY', field, null);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t(\"AddedError\", [vm.$t(\"Category\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddManageCategoryModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddManageCategoryModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddManageCategoryModal.vue?vue&type=template&id=2d5490ac&\"\nimport script from \"./AddManageCategoryModal.vue?vue&type=script&lang=js&\"\nexport * from \"./AddManageCategoryModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <section class=\"main-content\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 padding-t_8\">\r\n                <div class=\"theme-primary partition-full\">\r\n                    <span class=\"p-name text-white\"> {{ $t('AddTicket') }}</span>\r\n                    <span class=\"float-right\">\r\n                        <RouterLink to=\"/Ticketing/Index\" class=\"p-action-btn text-white float-right\">\r\n                            <em class=\"fa fa-angle-double-left\"></em>\r\n                            <br />\r\n                            {{ $t('BacktoList') }}\r\n                        </RouterLink>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border p-3\" v-if=\"isSuccessMessage\">\r\n            <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12  ticket-thankyou text-center\">\r\n                <span class=\"checksign text-success\"><i class=\"fa fa-check\"></i></span>\r\n                <h1 class=\"mt-4 mb-4\">{{ $t('ThankYou') }}</h1>\r\n\r\n                <div class=\"pb-4 ticket-number\">\r\n                    <P>{{ saveTicketStatus }}</P>\r\n                    <div\r\n                        style=\"font-size: 20px;position: relative;background: #fff3cd;padding: 35px 30px; margin: 20px; border: 4px dotted #856404;display: inline-block;color: #856404;\">\r\n                        {{ TicketNumber }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Form ref=\"AddTicket\">\r\n            <dynamic-form ref=\"AddTicketForm\" :buttons=\"buttons\" :schema=\"FormSchema\" v-if=\"!isSuccessMessage\">\r\n                <template v-slot:tgslot-Description=\"{ data }\">\r\n\r\n                    <ckeditor :editor=\"editor\" @ready=\"onReady\" v-model=\"data.fieldInfo.value\"\r\n                        :class=\"{ 'is-invalid': data.error != '' }\"></ckeditor>\r\n                    <span class=\"invalid-feedback\">{{ data.error }}</span>\r\n                </template>\r\n                <template v-slot:tgslot-addresFields=\"{ data }\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <dynamic-form ref=\"AddTicketForm1\" :schema=\"StaticObj\"></dynamic-form>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <ManageMap class=\"row\" mapType=\"MapBox\" mapContainer=\"WorkOrder\" :config=\"config\"\r\n                                mapHeight=\"355px\" v-if=\"isShowMap\" @GetAddress=\"GetAddress\"></ManageMap>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </dynamic-form>\r\n        </Form>\r\n        <ManageCategory v-if=\"isManageCategory\" modulename=\"Ticketing\" submodulecode=\"Ticketing\"\r\n            v-bind:callbackfunction=\"GetDropDownData\"></ManageCategory>\r\n    </section>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nimport ManageMap from './../../components/Common/MapComponent.vue';\r\nimport ManageCategory from './DetailsComponent/AddManageCategoryModal.vue';\r\nexport default {\r\n    components: {\r\n        ManageMap,\r\n        ManageCategory\r\n    },\r\n    data: function () {\r\n        return {\r\n            config: {\r\n                isShowDrawButton: true,\r\n                isShowSearchBox: true\r\n            },\r\n            editor: this.CLASSIC_EDITOR,\r\n            isLoading: false,\r\n            isForServiceRequest: false,\r\n            autoCreateService: false,\r\n            isManageCategory: false,\r\n            CountryDDl: '',\r\n            StateDDl: '',\r\n            Latitude: '',\r\n            Longitude: '',\r\n            saveTicketStatus: '',\r\n            jsonData: {},\r\n            fileMulitpleData: [],\r\n            ticketType: '',\r\n            isMapFeature: '',\r\n            clientId: '',\r\n            TicketNumber: '',\r\n            isShowMap: true,\r\n            isSuccessMessage: false,\r\n            bindFrequency: [{ value: 'Daily', name: 'Daily' }, { value: 'Weekly', name: 'Weekly' }, { value: 'BiWeekly', name: 'BiWeekly' }, { value: 'Monthly', name: 'Monthly' },\r\n            { value: 'Quarterly', name: 'Quarterly' }, { value: 'halfYearly', name: 'halfYearly' }, { value: 'Annually', name: 'Annually' }],\r\n\r\n            bindWeekDay: [{ value: 1, name: 'Monday' }, { value: 2, name: 'Tuesday' }, { value: 3, name: 'Wednesday' }, { value: 4, name: 'Thursday' }, { value: 5, name: 'Friday' },\r\n            { value: 6, name: 'Saturday' }, { value: 7, name: 'Sunday' }],\r\n            StaticObj: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('ClientAddress'),\r\n                            name: \"AddrTo\",\r\n                            value: \"\",\r\n                            disabled: false,\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.onChangeDropdown\r\n\r\n                            },\r\n                            placeholder: this.$t('Select'),\r\n                            validationRules: \"\",\r\n\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Address'),\r\n                            name: \"Address\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('PleaseEnterAddress'),\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Country'),\r\n                            name: \"country_id\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.GetStateDDL\r\n                            },\r\n                            placeholder: this.$t('Select'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('State'),\r\n                            name: \"State\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Select'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('County'),\r\n                            name: \"County\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterCounty'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('City'),\r\n                            name: \"City\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterCityName'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Street'),\r\n                            name: \"Street\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterStreet'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('ZipCode'),\r\n                            name: \"Zip\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterZipCode'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('NoteAboutAddress'),\r\n                            name: \"Notes\",\r\n                            value: \"\",\r\n                            disabled: false,\r\n                            placeholder: this.$t('PleaseEnterDescription'),\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }],\r\n            FormSchema: [],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-warning save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i> Save As Draft\",\r\n                    value: \"DRAFT\",\r\n                    onClick: this.saveForm\r\n                },\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i> Submit\",\r\n                    onClick: this.saveForm\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i> Cancel\",\r\n                    onClick: this.Close\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created: function () {\r\n        debugger;\r\n        var vm = this;\r\n        let ticket_id = decodeURIComponent(vm.$route.params.id);\r\n        vm.getForm(ticket_id);\r\n        vm.GetCountryDDL();\r\n    },\r\n    methods: {\r\n        GetAddress: function (data) {\r\n            var vueObj = this;\r\n            vueObj.Latitude = '';\r\n            vueObj.Longitude = '';\r\n            debugger;\r\n            var indexValue = data.length - 1;\r\n            let filteredCountry = vueObj.CountryDDl.filter((item) => {\r\n                return item.name === data[indexValue].CompleteAddress.Country.LongName;\r\n            });\r\n            vueObj.StaticObj[1].Data[0].value = data[indexValue].CompleteAddress.FullAddress;\r\n            var filterCountry = filteredCountry == '' ? '' : filteredCountry[0].value;\r\n            vueObj.StaticObj[1].Data[1].value = filterCountry;\r\n            vueObj.GetStateDDL(null, filterCountry);\r\n            setTimeout(function () {\r\n                let filteredState = vueObj.StateDDl.filter((item) => {\r\n                    return item.name === data[indexValue].CompleteAddress.AdministrativeAreaLevel1.LongName;\r\n                });\r\n                var filterState = filteredState == '' ? '' : filteredState[0].value;\r\n                vueObj.StaticObj[1].Data[2].value = filterState;\r\n            }, 1000);\r\n            vueObj.StaticObj[1].Data[3].value = data[indexValue].CompleteAddress.AdministrativeAreaLevel2.LongName;\r\n            vueObj.StaticObj[1].Data[4].value = data[indexValue].CompleteAddress.City.LongName;\r\n            vueObj.StaticObj[1].Data[5].value = data[indexValue].CompleteAddress.AdministrativeAreaLevel3.LongName;\r\n            vueObj.StaticObj[1].Data[6].value = data[indexValue].CompleteAddress.PinCode;\r\n            var dataLat1 = ''; var dataLat2 = ''; var dataLng1 = ''; var dataLng2 = '';\r\n            data[indexValue].LatLng.forEach((item, index) => {\r\n                if (index == 0) {\r\n                    dataLat1 = item.Lat;\r\n                    dataLat2 = item.Lng;\r\n                }\r\n                else {\r\n                    dataLng1 = item.Lat;\r\n                    dataLng2 = item.Lng;\r\n                }\r\n            });\r\n            vueObj.Latitude = dataLng1 + ', ' + dataLat2;\r\n            vueObj.Longitude = dataLat1 + ', ' + dataLng2;\r\n\r\n\r\n            vueObj.FormSchema.forEach((group, gi) => {\r\n                group.Data.forEach((field, fi) => {\r\n                    if (group.group_name == \"GeneralInformation\") {\r\n                        if (field.name == \"location_se\") {\r\n                            field.value = vueObj.Latitude;\r\n                        }\r\n                        if (field.name == \"location_nw\") {\r\n                            field.value = vueObj.Longitude;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        Close() {\r\n            this.$router.push({ name: \"TicketingList\" });\r\n        },\r\n\r\n        GetCountryDDL: async function (event) {\r\n            var vm = this;\r\n            vm.StaticObj[1].Data[1].config.options = [];\r\n            vm.CountryDDl = '';\r\n            var appendingUrl = `id=&&moduleName=TICKETING&type=${'COUNTRIES'}&search=&refId=`;\r\n            await DataServices.GetDDLDataFSM(appendingUrl).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    vm.CountryDDl = response.data.result.DATA;\r\n                    if (json != null) {\r\n                        response.data.result.DATA.forEach((item, index) => {\r\n                            vm.StaticObj[1].Data[1].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        GetStateDDL: async function (event, id) {\r\n            var vm = this;\r\n            var CountryId = 0;\r\n            if (event == null) {\r\n                CountryId = id;\r\n            } else {\r\n                CountryId = event.target.value.toString();\r\n            }\r\n            vm.StaticObj[1].Data[2].config.options = [];\r\n            vm.StateDDl = '';\r\n            var appendingUrl = `id=&&moduleName=TICKETING&type=${'STATE'}&search=&refId=` + CountryId;\r\n            await DataServices.GetDDLDataFSM(appendingUrl).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    vm.StateDDl = response.data.result.DATA;\r\n                    if (json != null) {\r\n                        response.data.result.DATA.forEach((item, index) => {\r\n                            vm.StaticObj[1].Data[2].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        onReady(editor) {\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n        },\r\n\r\n        onChangeEventForFields: function (x, y, z) {\r\n            // debugger;\r\n            let ths = this;\r\n            var vm = this;\r\n            if (y.name == \"ticket_for\") {\r\n                ths.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach((field, fi) => {\r\n                        if (field.name == \"on_behalf\") {\r\n                            field.visibility = (y.value == \"2\");\r\n                            field.value = \"3\";\r\n                            field.label = \"On Behalf\";\r\n                        }\r\n                        if (field.name == \"on_behalf_consumer_id\" && y.value != \"1\") {\r\n                            field.visibility = true;\r\n                            vm.GetDropDownData('FSM_USERS', field, null);\r\n                            field.label = 'User';\r\n                        }\r\n                        if (field.name == \"on_behalf_consumer_id\" && y.value == \"1\") {\r\n                            field.visibility = false;\r\n                        }\r\n                        if (field.name == \"ticket_channel\") {\r\n                            field.visibility = false;\r\n\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else if (y.name == \"on_behalf\") {\r\n                ths.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach((field, fi) => {\r\n                        if (field.name == \"on_behalf_consumer_id\" && y.value == \"4\") {\r\n                            field.visibility = true;\r\n                            field.label = 'Client';\r\n                            vm.GetDropDownData('CLIENTS', field, null);\r\n                        }\r\n                        if (field.name == \"on_behalf_consumer_id\" && y.value == \"3\") {\r\n                            field.visibility = true;\r\n                            vm.GetDropDownData('FSM_USERS', field, null);\r\n                            field.label = 'User';\r\n                        }\r\n                        if (field.name == \"ticket_channel\" && y.value == \"4\") {\r\n                            field.visibility = true;\r\n                            field.label = 'Channel';\r\n                        }\r\n                        if (field.name == \"ticket_channel\" && y.value == \"3\") {\r\n                            field.visibility = false;\r\n                            field.label = 'Channel';\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else if (y.name == \"ticket_category_id\") {\r\n                ths.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach((field, fi) => {\r\n                        if (field.name == y.name) {\r\n                            // let checkIsForServiceRequest = field.config.options.find(x => x.value == y.value)?.first_value;\r\n                            let checkIsForServiceRequest = \"\";\r\n                            if (!vm.isBlank(field.config.options.find(x => x.value == y.value)?.first_value)) {\r\n                                checkIsForServiceRequest = field.config.options.find(x => x.value == y.value)?.first_value;\r\n                            }\r\n                            vm.isForServiceRequest = \"\";\r\n                            vm.isForServiceRequest = checkIsForServiceRequest == \"1\" ? true : false;\r\n                        }\r\n                        if (vm.isForServiceRequest == true) {\r\n                            if (field.name == \"ticket_for\") {\r\n                                field.visibility = false;\r\n                                field.value = 1;\r\n                            }\r\n                            if (field.name == \"on_behalf\") {\r\n                                field.visibility = false;\r\n                                field.value = null;\r\n                            }\r\n                            if (field.name == \"on_behalf_consumer_id\") {\r\n                                field.visibility = true;\r\n                                field.label = 'Client';\r\n                                vm.GetDropDownData('CLIENTS', field, null);\r\n                            }\r\n                            if (field.name == \"ticket_channel\") {\r\n                                field.visibility = true;\r\n                                field.label = 'Channel';\r\n                            }\r\n                            if (group.group_name == \"Preferred Time\" || group.group_name == \"Address\") {\r\n                                group.visibility = true;\r\n                                if (field.name == \"START_DATE\" || field.name == \"END_DATE\" || field.name == \"addresFields\") {\r\n                                    field.visibility = true;\r\n                                    field.config = { mode: 'DateTime', format: \"M/D/YYYY\" }\r\n                                }\r\n                            }\r\n                            if (group.group_name == \"Recurring\") {\r\n                                group.visibility = true;\r\n                                if (field.name == \"frequency\") {\r\n                                    field.visibility = true;\r\n                                    field.config.options = vm.bindFrequency;\r\n                                }\r\n                                if (field.name == \"recurrence\") {\r\n                                    field.visibility = true;\r\n                                }\r\n                            }\r\n                            if (field.name == \"is_field_service\") {\r\n                                field.value = \"\";\r\n                                field.visibility = false;\r\n                                field.value = 1;\r\n                            }\r\n                        }\r\n                        else if (vm.isForServiceRequest == false) {\r\n                            if (field.name == \"ticket_for\") {\r\n                                field.visibility = true;\r\n                                field.value = 1;\r\n                            }\r\n                            if (field.name == \"on_behalf_consumer_id\" || field.name == \"cdc_id\" || field.name == \"work_type_id\" || field.name == \"utility_id\" || field.name == \"ticket_channel\") {\r\n                                field.visibility = false;\r\n                            }\r\n                            if (group.group_name == \"Scheduled Appointment\" || group.group_name == \"Preferred Time\" || group.group_name == \"Address\") {\r\n                                group.visibility = false;\r\n                                if (field.name == \"ScheduledStartDate\" || field.name == \"ScheduledEndDate\" || field.name == \"crew_id\" || field.name == \"resource_id\" || field.name == \"START_DATE\" || field.name == \"END_DATE\" || field.name == \"addresFields\") {\r\n                                    field.visibility = false;\r\n                                }\r\n                            }\r\n                            if (group.group_name == \"Recurring\") {\r\n                                group.visibility = false;\r\n                                if (field.name == \"frequency\") {\r\n                                    field.visibility = false;\r\n                                    field.config.options = vm.bindFrequency;\r\n                                }\r\n                                if (field.name == \"recurrence\" || field.name == \"weekly\" || field.name == \"biweekly\" || field.name == \"recurringDate\") {\r\n                                    field.visibility = false;\r\n                                }\r\n                            }\r\n\r\n                            if (field.name == \"is_field_service\") {\r\n                                field.value = \"\";\r\n                                field.visibility = false;\r\n                                field.value = 0;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else if (y.name == \"frequency\") {\r\n                ths.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach((field, fi) => {\r\n                        if (group.group_name == \"Recurring\") {\r\n                            if (y.value == \"Daily\") {\r\n                                if (field.name == \"biweekly\" || field.name == \"recurringDate\" || field.name == \"weekly\") {\r\n                                    field.visibility = false;\r\n                                }\r\n                            }\r\n                            if (y.value == \"Weekly\") {\r\n                                if (field.name == \"weekly\") {\r\n                                    field.visibility = true;\r\n                                    field.config.options = vm.bindWeekDay;\r\n                                }\r\n                                if (field.name == \"biweekly\" || field.name == \"recurringDate\") {\r\n                                    field.visibility = false;\r\n                                }\r\n                            }\r\n                            if (y.value == \"BiWeekly\") {\r\n                                if (field.name == \"biweekly\") {\r\n                                    field.visibility = true;\r\n                                    field.config.options = vm.bindWeekDay;\r\n                                }\r\n                                if (field.name == \"weekly\" || field.name == \"recurringDate\") {\r\n                                    field.visibility = false;\r\n                                }\r\n                            }\r\n                            if (y.value == \"Monthly\" || y.value == \"Quarterly\" || y.value == \"halfYearly\" || y.value == \"Annually\") {\r\n                                if (field.name == \"recurringDate\") {\r\n                                    field.visibility = true;\r\n                                }\r\n                                if (field.name == \"weekly\" || field.name == \"biweekly\") {\r\n                                    field.visibility = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else if (y.name == \"on_behalf_consumer_id\") {\r\n                debugger;\r\n                vm.GetClientaddress(null, z.value);\r\n\r\n                ths.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach((field, fi) => {\r\n                        // debugger;\r\n                        if (field.name == \"utility_id\" && vm.isForServiceRequest == true && vm.isMapFeature == 'locating') {\r\n                            let id = z.value;\r\n                            field.visibility = true;\r\n                            field.label = 'Utility Name';\r\n                            vm.GetDropDownData('UTILITY_LIST_BY_CLIENT_ID', field, id);\r\n                        }\r\n                        else if (field.name == \"work_type_id\" && vm.isMapFeature == 'nonlocating') {\r\n                            let id = y.value;\r\n                            field.visibility = true;\r\n                            vm.GetDropDownData('FSM_WORKTYPE', field, null);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else if (y.name == \"utility_id\") {\r\n                ths.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach((field, fi) => {\r\n                        if (field.name == \"cdc_id\") {\r\n                            let id = y.value;\r\n                            field.visibility = true;\r\n                            vm.GetDropDownData('FSM_CDCCODE_FOR_TICKET', field, id);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n            else if (y.name == \"cdc_id\") {\r\n                ths.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach((field, fi) => {\r\n                        if (field.name == \"work_type_id\") {\r\n                            let id = y.value;\r\n                            field.visibility = true;\r\n                            vm.GetDropDownData('FSM_WORKTYPE_BY_CDC', field, id);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else if (y.name == \"work_type_id\") {\r\n                ths.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach((field, fi) => {\r\n                        let checkIsAutoCreateService = \"\";\r\n                        if (!vm.isBlank(y.config.options.find(x => x.value == z.value)?.first_value)) {\r\n                            checkIsAutoCreateService = y.config.options.find(x => x.value == z.value)?.first_value;\r\n                        }\r\n                        vm.autoCreateService = checkIsAutoCreateService == \"1\" ? true : false;\r\n                        if (vm.autoCreateService == true) {\r\n                            if (group.group_name == \"Scheduled Appointment\") {\r\n                                group.visibility = true;\r\n\r\n                                if (field.name == \"ScheduledStartDate\" || field.name == \"ScheduledEndDate\" || field.name == \"crew_id\" || field.name == \"resource_id\") {\r\n                                    field.visibility = true;\r\n                                    field.config = { mode: 'DateTime', format: \"M/D/YYYY\" }\r\n                                }\r\n                            }\r\n                            if (field.name == \"crew_id\") {\r\n                                vm.GetDropDownData('FSM_CREWNAME', field, null);\r\n                            }\r\n                            if (field.name == \"resource_id\") {\r\n                                vm.GetDropDownData('FSM_SA_RESOURCENAME', field, null);\r\n                            }\r\n                        }\r\n                        else if (vm.autoCreateService == false) {\r\n                            if (group.group_name == \"Scheduled Appointment\") {\r\n                                group.visibility = false;\r\n\r\n                                if (field.name == \"ScheduledStartDate\" || field.name == \"ScheduledEndDate\" || field.name == \"crew_id\" || field.name == \"resource_id\") {\r\n                                    field.visibility = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else if (y.name == \"attachment\") {\r\n                // debugger;\r\n                ths.GetBase64String(y.value);\r\n            }\r\n        },\r\n        GetClientaddress: async function (event, id) {\r\n            var vm = this;\r\n            var clientId = 0;\r\n            if (event == null) {\r\n                clientId = id;\r\n            } else {\r\n                clientId = event.target.value.toString();\r\n                vm.clientId = clientId;\r\n            }\r\n            vm.StaticObj[0].Data[0].config.options = [];\r\n            var appendingUrl = `id=&&moduleName=TICKETING&type=${'CLIENT_ADDRESS_LIST_WO'}&search=&refId=` + clientId;\r\n            await DataServices.GetDDLDataFSM(appendingUrl).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        response.data.result.DATA.forEach((item, index) => {\r\n                            vm.StaticObj[0].Data[0].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                            if (item.first_value == \"1\") {\r\n                                vm.StaticObj[0].Data[0].value = item.value;\r\n                                vm.BindAddressUsingClientAdrress(clientId, item.value);\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n            //vm.GetUtilityDDL(event, id);\r\n        },\r\n        onChangeDropdown: async function (e) {\r\n            var vm = this;\r\n            var dropName = e.target.name;\r\n            var clientAddressId = '';\r\n            if (dropName == \"AddrTo\") {\r\n                clientAddressId = e.target.value;\r\n            }\r\n            vm.FormSchema.forEach((group, gi) => {\r\n                group.Data.forEach((field, fi) => {\r\n                    if (field.name == \"on_behalf_consumer_id\") {\r\n                        let clientid = field.value.value;\r\n                        if (!vm.isBlank(clientid) && clientAddressId != '') {\r\n                            vm.BindAddressUsingClientAdrress(clientid, clientAddressId);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        BindAddressUsingClientAdrress: function (clientid, clientAddressId) {\r\n            var vueObj = this;\r\n      \r\n            var url = `id=${clientid}&moduleName=TICKETING&addressId=${clientAddressId}`;\r\n            DataServices.GetTicketClientAddress(url).then(response => {\r\n    \r\n                if (response.data.result != null && response.data.result.data.length > 0) {\r\n                    vueObj.StaticObj[1].Data[0].value = response.data.result.data[0].USER_ADDRESS_1;\r\n                    vueObj.StaticObj[1].Data[1].value = response.data.result.data[0].COUNTRY_ID;\r\n                    vueObj.StaticObj[1].Data[2].value = response.data.result.data[0].CT[0].ST[0].STATE_ID;\r\n                    vueObj.StaticObj[1].Data[4].value = response.data.result.data[0].USER_CITY;\r\n                    vueObj.StaticObj[1].Data[6].value = response.data.result.data[0].USER_ZIPCODE;\r\n                    vueObj.StaticObj[1].Data[7].value = response.data.result.data[0].USER_ADDRESS_DESC;\r\n                }\r\n            })\r\n        },\r\n        GetDropDownData: function (type, field, id) {\r\n         \r\n            var vm = this;\r\n            if (!vm.isBlank(id)) {\r\n                var url = `id=${id}&moduleName=TICKETING&type=${type}&search=&refId=`;\r\n            }\r\n            else {\r\n                var url = `id=&moduleName=TICKETING&type=${type}&search=&refId=`;\r\n            }\r\n            DataServices.GetDDLData(url).then(response => {\r\n                field.config.options = [];\r\n                field.value = '';\r\n                if (response.status == 200) {\r\n                    if (type == \"FSM_USERS\" || type == \"CLIENTS\" || type == \"FSM_CREWNAME\" || type == \"FSM_SA_RESOURCENAME\" || type == \"UTILITY_LIST_BY_CLIENT_ID\" || type == \"FSM_CDCCODE_FOR_TICKET\" || type == \"TICKET_CATEGORY\") {\r\n                        response.data.DATA.forEach((item) => {\r\n                            field.config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                    }\r\n                    if (type == \"FSM_WORKTYPE_BY_CDC\" || type == \"FSM_WORKTYPE\") {\r\n                        response.data.DATA.forEach((item) => {\r\n                            field.config.options.push({\r\n                                value: item.value,\r\n                                name: item.name,\r\n                                first_value: item.first_value,\r\n                                second_value: item.second_value\r\n                            })\r\n                        })\r\n                    }\r\n\r\n                }\r\n            })\r\n        },\r\n        getForm: function (id) {\r\n            var ths = this;\r\n            ths.isLoading = true;\r\n           \r\n            var url = `recordId=${id}&moduleName=Ticketing&subModuleCode=Ticketing`;\r\n            DataServices.GetDynamicForm(url).then(function (response) {\r\n                if (response != null && response.data != null) {\r\n                    debugger;\r\n                    ths.isMapFeature = response.data.isFsmLocating;\r\n                    ths.FormSchema = ths.ConvertCustomFieldIntoDynamicFormObj(response.data.data);\r\n                    ths.FormSchema.forEach((group, gi) => {\r\n\r\n                        group.Data.forEach((field, fi) => {\r\n                            if (group.group_name == \"Scheduled Appointment\" || group.group_name == \"Preferred Time\" || group.group_name == \"Recurring\") {\r\n                                group.visibility = false;\r\n                                if (field.name == \"ScheduledStartDate\" || field.name == \"ScheduledEndDate\" || field.name == \"crew_id\" || field.name == \"resource_id\" || field.name == \"START_DATE\" || field.name == \"END_DATE\" || field.name == \"frequency\" || field.name == \"weekly\" || field.name == \"biweekly\" || field.name == \"recurringDate\") {\r\n                                    field.visibility = false;\r\n                                }\r\n                                if (field.name == \"recurrence\") {\r\n                                    field.visibility = false;\r\n                                    field.astype = 'NumericField';\r\n                                }\r\n                            }\r\n                            if (field.name == \"is_read\") {\r\n                                field.value = 0;\r\n                            }\r\n                            if (field.name == \"cc_users\") {\r\n                                field.mode = \"tag\";\r\n                            }\r\n                            if (field.name == \"ticket_for\") {\r\n                                field.value = \"1\";\r\n                                field.label = \"Ticket For\";\r\n                            }\r\n                            if (field.name == \"ticket_category_id\") {\r\n                                field.config.showAddIcon = true;\r\n                                field.config.onAddButtonClick = ths.OpenCategoryModal;\r\n                            }\r\n                            if (field.name == \"on_behalf_consumer_id\" || field.name == \"location_nw\" || field.name == \"location_se\" || field.name == \"TicketType\" || field.name == \"is_field_service\" || field.name == \"on_behalf\" || field.name == \"ticket_channel\" || field.name == \"utility_id\" || field.name == \"cdc_id\" || field.name == \"work_type_id\") {\r\n                                field.visibility = false;\r\n                            }\r\n                            if (field.name == \"Description\") {\r\n                                field.showLabel = false;\r\n                            }\r\n                            if (field.name == \"attachment\") {\r\n                                field.showLabel = false;\r\n                                field.config =\r\n                                {\r\n                                    maxSize: 5,\r\n                                    accept: [\r\n                                        {\r\n                                            fileType: 'doc', // Document type\r\n                                            iconClass: 'fa-file-word-o' // Icon class for documents\r\n                                        },\r\n                                        {\r\n                                            fileType: 'docx', // Document type\r\n                                            iconClass: 'fa-file-word-o' // Icon class for documents\r\n                                        },\r\n                                        {\r\n                                            fileType: 'txt', // Text file type\r\n                                            iconClass: 'fa-file-text-o' // Icon class for text files\r\n                                        },\r\n                                        {\r\n                                            fileType: 'jpg', // Image types\r\n                                            iconClass: 'fa-file-image-o' // Icon class for images\r\n                                        },\r\n                                        {\r\n                                            fileType: 'jpeg', // Image types\r\n                                            iconClass: 'fa-file-image-o' // Icon class for images\r\n                                        },\r\n                                        {\r\n                                            fileType: 'png', // Image types\r\n                                            iconClass: 'fa-file-image-o' // Icon class for images\r\n                                        },\r\n                                        {\r\n                                            fileType: 'gif', // Image types\r\n                                            iconClass: 'fa-file-image-o' // Icon class for images\r\n                                        },\r\n                                        {\r\n                                            fileType: 'bmp', // Image types\r\n                                            iconClass: 'fa-file-image-o' // Icon class for images\r\n                                        },\r\n                                        {\r\n                                            fileType: 'mp4', // Video types\r\n                                            iconClass: 'fa-file-video-o' // Icon class for videos\r\n                                        },\r\n                                        {\r\n                                            fileType: 'mov', // Video types\r\n                                            iconClass: 'fa-file-video-o' // Icon class for videos\r\n                                        },\r\n                                        // Add more image, document, text, and video types as needed\r\n                                    ],\r\n                                    //onChange: ths.GetBase64String,\r\n                                    showAddIcon: false,\r\n                                    onAddButtonClick: '',\r\n                                    multiple: true\r\n                                }\r\n                            }\r\n                            field.config.onChange = ths.onChangeEventForFields;\r\n                        });\r\n                    });\r\n                    ths.FormSchema.push({\r\n                        layoutType: \"single\",\r\n                        group_name: 'Address',\r\n                        visibility: false,\r\n                        Data: [{\r\n                            astype: \"SlotField\",\r\n                            name: \"addresFields\",\r\n                            value: \"\",\r\n                            visibility: false,\r\n                            showLabel:false\r\n                        }]\r\n                    });\r\n\r\n                    ths.isLoading = false;\r\n                }\r\n            });\r\n        },\r\n        OpenCategoryModal: function () {\r\n            var vm = this;\r\n            vm.isManageCategory = true;\r\n        },\r\n\r\n        GetBase64String: function (evt) {\r\n            try {\r\n                var vm = this;\r\n                var f = evt[0]; // FileList object\r\n                // var f = evt.target.files[0]; // FileList object\r\n                var reader = new FileReader();\r\n                let fileObj = {};\r\n                // Closure to capture the file information.\r\n                reader.onload = (function (theFile) {\r\n                    return function (e) {\r\n                        var binaryData = e.target.result;\r\n                        //Converting Binary Data to base 64\r\n                        var base64StringEncoded = window.btoa(binaryData);\r\n                        //showing file converted to base64\r\n                        var fileName = f.name;\r\n                        vm.fileName = fileName;\r\n                        var n = fileName.lastIndexOf(\".\");\r\n                        var extensionName = fileName.substring(n + 1, fileName.length);\r\n                        vm.fileExt += \".\" + extensionName;\r\n                        var attachemnetMime = '{\"ContentType\":\"' + f.type + '\",\"Size\":\"' + f.size + '\",\"Extension\":\"' + extensionName + '\"}';\r\n                        var fileSize = f.size;\r\n                        vm.fileSize = fileSize;\r\n\r\n                        fileObj.attachement_mime = attachemnetMime,\r\n                            fileObj.fileName = fileName,\r\n                            fileObj.base64String = base64StringEncoded,\r\n                            fileObj.fileSize = f.size,\r\n                            fileObj.contentType = f.type,\r\n                            fileObj.ModuleName = 'TICKETING',\r\n                            fileObj.SubModuleCode = 'TICKETING'\r\n                        vm.fileMulitpleData.push(fileObj);\r\n                    };\r\n                })(f);\r\n                // Read in the image file as a data URL.\r\n                reader.readAsBinaryString(f);\r\n\r\n            }\r\n            catch (ex) {\r\n            }\r\n        },\r\n        saveForm: function (btnType) {\r\n            var ths = this;\r\n            debugger;\r\n            ths.$refs.AddTicket.validate().then(result => {\r\n                if (result) {\r\n                    if (btnType.value == \"DRAFT\") {\r\n                        ths.FormSchema.forEach((group, gi) => {\r\n                            group.Data.forEach((field, fi) => {\r\n                                if (group.group_name == \"GeneralInformation\") {\r\n                                    if (field.name == \"TicketType\") {\r\n                                        field.value = 'DRAFT';\r\n                                    }\r\n                                }\r\n                            });\r\n                        });\r\n                        ths.ticketType = 'DRAFT';\r\n                    }\r\n                    ths.isLoading = true;\r\n                    var CustomFieldArray = ths.ConvertDynamicFormObjToCustomFieldObj(ths.FormSchema);\r\n                    var CustomFieldArrayStatic = ths.ConvertDynamicFormObjToCustomFieldObj(ths.StaticObj);\r\n\r\n                    CustomFieldArray.forEach((x) => {\r\n                        if (x.field_name == \"on_behalf_consumer_id\") {\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                x.field_value = x.field_value.value;\r\n                            }\r\n                        }\r\n                        if (x.field_name == \"work_type_id\") {\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                x.field_value = x.field_value.value;\r\n                            }\r\n                        }\r\n                        if (x.field_name == \"cc_users\") {\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                var CCUsers = '';\r\n                                var i = 0;\r\n                                for (i = 0; i < x.field_value.length; i++) {\r\n                                    if (i == 0) {\r\n                                        CCUsers = x.field_value[i].value;\r\n                                    } else {\r\n                                        CCUsers = CCUsers + \",\" + x.field_value[i].value;\r\n                                    }\r\n                                }\r\n                                x.field_value = CCUsers;\r\n                            }\r\n                        }\r\n                        if (x.field_name == \"weekly\") {\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                x.field_value = x.field_value.value;\r\n                            }\r\n                        }\r\n                    })\r\n                    CustomFieldArrayStatic.forEach((x) => {\r\n                        CustomFieldArray.push(x);\r\n                    });\r\n\r\n                    var obj = {\r\n                        data: CustomFieldArray,\r\n                        moduleCode: \"Ticketing\",\r\n                        subModuleCode: \"Ticketing\",\r\n                        attachmentData: ths.fileMulitpleData.length > 0 ? ths.fileMulitpleData : null\r\n                    }\r\n                    DataServices.SaveDynamicForm(JSON.stringify(obj)).then(function (response) {\r\n                        debugger;\r\n                        ths.isLoading = false;\r\n                        if (response != null && response.data != null && response.data[0].Status == \"Success\") {\r\n                            ths.TicketNumber = JSON.parse(response.data[0].Value.OTHER_DATA).TICKET_NUMBER;\r\n                            ths.ShowAlert(ths.$t(\"AddedSuccess\", [ths.$t(\"Ticket\")]), \"success\", true, ths.$t(\"Alert\"));\r\n                            ths.isSuccessMessage = true;\r\n                            if (ths.ticketType == 'DRAFT') {\r\n                                ths.saveTicketStatus = ths.$t(\"TicketDraftSubmitStatus\");\r\n                            }\r\n                            else {\r\n                                ths.saveTicketStatus = ths.$t(\"TicketSubmitStatus\");\r\n                            }\r\n                        } else {\r\n                            ths.ShowAlert(ths.$t(\"ErrorWhileSaving\", [ths.$t(\"Ticket\")]), \"danger\", true, ths.$t(\"Alert\"));\r\n                            ths.isSuccessMessage = false;\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./add.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./add.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./add.vue?vue&type=template&id=5ef2b0eb&\"\nimport script from \"./add.vue?vue&type=script&lang=js&\"\nexport * from \"./add.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}