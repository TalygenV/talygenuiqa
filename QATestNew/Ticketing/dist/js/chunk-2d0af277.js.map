{"version":3,"sources":["webpack:///./src/views/MapStatus/MapStatusListing.vue","webpack:///./src/views/MapStatus/MapStatusSchema.js","webpack:///./src/components/Modal/AddMapStatusPopup.vue","webpack:///src/components/Modal/AddMapStatusPopup.vue","webpack:///./src/components/Modal/AddMapStatusPopup.vue?cb1e","webpack:///./src/components/Modal/AddMapStatusPopup.vue?45dc","webpack:///src/views/MapStatus/MapStatusListing.vue","webpack:///./src/views/MapStatus/MapStatusListing.vue?6799","webpack:///./src/views/MapStatus/MapStatusListing.vue?fbd4"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","IsGroupView","expression","attrs","$t","RenderRowActionMethod","MapStatusListing","Headers","listheaderbuttons","TotalRecords","leftSearchFields","FetchData","SortExp","SortBy","on","leftCommonSearch","pagerMethod","commonHeaderButtonClick","scopedSlots","_u","key","fn","data","column","COLUMN_NAME","isCRMShowStausDrop","row","statusId","ref","id","StatusListForListing","status_id","_e","staticClass","class","getStatusClassList","_v","_s","AddMapStatusPopup","mapStatusId","staticRenderFns","buttons","title","iconClass","callbackfunction","additionalClass","isdisabled","isvisible","checkPrivilege","isEnabledOnSelectedRow","leftsearchSchema","fieldName","fieldType","fieldIcon","fieldSearchConditionName","isSearch","listOptions","async","bindleftCommonSearchdropdown","instance","moduleName","filtername","AllCount","vm","param1","DataServices","GetDDLData","then","response","DATA","forEach","element","obj","push","isLoading","Close","FormSchema","onSubmit","props","MapStatusId","type","Number","required","serviceAppointmentStatusList","layoutType","Data","astype","label","placeholder","validationRules","max","mode","config","options","text","onClick","ListData","created","BindServiceAppointmentStatusType","BindWorkOrderStatusType","BindTicketStatusType","methods","$parent","appendingUrl","companyId","userid","json","item","index","formfields","val","jsonobj","statusMappingName","StatusMappingName","description","Description","serviceAppointmentStatus","ServiceUser","workOrderStatus","WorkOrder","ticketStatus","TicketStatus","params","JSON","stringify","SaveMapStatusTicketType","status","result","ShowAlert","component","components","PageSize","PageNumber","CurrentPage","user_type","user_id","Schema","noRecord","STATUS","STATUS_ID","STATUS_COLOR","STATUS_BG_COLOR","GetUserInfo","ID","UserType","CompanyId","paramsToObject","entries","isPaged","searchCondition","vueObj","srchCondition","isBlank","conditionForInstantSearch","url","FetchTicketStatusList","settings","isInSlot","length","total_records","TotalPages","Math","ceil","setTimeout","ResponsiveDataTable","event","openAddMapStatus","commonDeleteData","returnClass","undefined","$","not","each","confirmR","postJSON","ids","userId","refCode","objectPostString","deleteActivityData","box","Status","prop","removeAttr","removeClass","addClass","modal","alert","UpdateStatus","updatestatus"],"mappings":"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","file":"js/chunk-2d0af277.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('tg-list',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.IsGroupView),expression:\"IsGroupView\"}],attrs:{\"IsShowAction\":false,\"ModuleName\":\"Ticketing\",\"SubModuleCode\":\"FSM_Map_Status\",\"IdentityColumn\":\"id\",\"HeaderText\":_vm.$t('Map Status'),\"LegendArray\":[],\"RenderRowActionMethod\":() => { },\"widgets\":[],\"listType\":['List'],\"ListData\":_vm.MapStatusListing,\"HeaderData\":_vm.Headers,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"SearchFields\":_vm.leftSearchFields,\"ListDataCallBackFunction\":_vm.FetchData,\"showCheckBox\":true,\"SortExp\":_vm.SortExp,\"SortBy\":_vm.SortBy,\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick},scopedSlots:_vm._u([{key:\"slotdata\",fn:function({ data }){return [(data.column.COLUMN_NAME == 'status_id')?[(_vm.isCRMShowStausDrop(data.row.statusId, 'Ticketing'))?_c('listing-status',{ref:\"updatestatus\",attrs:{\"isfor\":'MapStatus',\"dataid\":data.row.id,\"data-controller\":\"Crm\",\"statuslist\":_vm.StatusListForListing,\"item\":data.statusId,\"data-action\":\"index\",\"dataselected\":data.row.status_id==1001?'Active':'Inactive',\"callbackfunction\":_vm.FetchData,\"isselectedvaluestring\":true}}):_vm._e(),(!_vm.isCRMShowStausDrop(data.row.status_id, 'Ticketing'))?_c('a',{staticClass:\"inactive-disabled\"},[_c('span',{class:_vm.getStatusClassList(data.row.status_id, 'status_id')},[_vm._v(\" \"+_vm._s(data.row[data.column.COLUMN_NAME])+\" \")])]):_vm._e()]:_vm._e()]}}])}),(_vm.AddMapStatusPopup)?_c('AddMapStatusPopup',{attrs:{\"MapTypeId\":_vm.mapStatusId}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import DataServices from \"@/services/DataService\";\r\nlet buttons =\r\n    [\r\n    {\r\n        title: 'Add',\r\n        iconClass: 'fa fa-plus',        \r\n        callbackfunction: 'openMapStatus',\r\n        additionalClass: '',\r\n        isdisabled: false,\r\n        isvisible: true,\r\n        checkPrivilege: true,\r\n        id:'AddMapStatus',\r\n         \r\n    },   \r\n   \r\n    {\r\n        id: 'DeleteMultiple',\r\n        title: 'Delete',\r\n        iconClass: 'fa-trash-o',\r\n        callbackfunction: 'commonDeleteData',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        isEnabledOnSelectedRow: true\r\n    }\r\n   \r\n   \r\n    ];\r\n\r\n\r\nlet leftsearchSchema = [\r\n    {\r\n        fieldName: 'Name',\r\n        fieldType: \"text\",\r\n        fieldIcon: \"fa fa-info-circle\",\r\n        fieldSearchConditionName: ['TSM.name'],\r\n        // paramName:\"Name\",\r\n        isSearch: false,\r\n        value: \"\",\r\n        listOptions: []\r\n    \r\n    },\r\n    {\r\n        fieldName: 'Service Appointment Status',\r\n        fieldType: \"ddl-check\",\r\n        fieldIcon: \"fa fa-file-text-o\",\r\n        fieldSearchConditionName: ['TSM.sa_status_id'],\r\n        // paramName:\"ServiceAppointment\",\r\n        isSearch: false,\r\n        value: \"\",\r\n        listOptions: []\r\n    },\r\n    {\r\n        fieldName: 'Work Order Status',\r\n        fieldType: \"ddl-check\",\r\n        fieldIcon: \"fa fa-file-text-o\",\r\n        fieldSearchConditionName: ['TSM.wo_status_id'],\r\n        // paramName:\"WorkOrder\",\r\n        isSearch: false,\r\n        value: \"\",\r\n        listOptions: []\r\n    },\r\n    {\r\n        fieldName: 'Ticket Status',\r\n        fieldType: \"ddl-check\",\r\n        fieldIcon: \"fa fa-file-text-o\",\r\n        fieldSearchConditionName: ['TSM.ticket_status_id'],\r\n        // paramName:\"WorkOrder\",\r\n        isSearch: false,\r\n        value: \"\",\r\n        listOptions: []\r\n    }\r\n]\r\n\r\n\r\nasync function  bindleftCommonSearchdropdown(instance, moduleName, filtername,data,AllCount) {\r\n    var vm = instance;\r\nvar param = \"moduleName='\"+moduleName+\"'&type=\"+filtername+\"\"\r\nvar param1 = \"moduleName=FSM&type=\"+filtername+\"\"\r\nif (filtername == 'SERVICEAPPOINTMENT_STATUS') {    \r\n    await DataServices.GetDDLData(param1).then((response) => {\r\n        \r\n        response.data.DATA.forEach(element => {\r\n            let obj = {\r\n                name: element.name,\r\n                value: element.value\r\n            }\r\n            vm.leftSearchFields[1].listOptions.push(obj);           \r\n        });\r\n    });\r\n}\r\nelse if(filtername=='WORK_ORDER_FINAL_STATUS'){       \r\n    await DataServices.GetDDLData(param1).then((response) => {\r\n        \r\n        response.data.DATA.forEach(element => {\r\n            let obj = {\r\n                name: element.name,\r\n                value: element.value\r\n            }\r\n            vm.leftSearchFields[2].listOptions.push(obj);\r\n        });\r\n    });\r\n}\r\nelse if(filtername=='FSM_TICKETING_STATUS'){ \r\n    await DataServices.GetDDLData(param1).then((response) => {\r\n        response.data.DATA.forEach(element => {\r\n            let obj = {\r\n                name: element.name,\r\n                value: element.value\r\n            }\r\n            vm.leftSearchFields[3].listOptions.push(obj);\r\n        });\r\n    });\r\n}\r\n}\r\nexport default { buttons, leftsearchSchema,bindleftCommonSearchdropdown};","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full\"},[_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('Manage Status Mapping')))]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]),_c('div',{staticClass:\"modal-body\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}})],1)])])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"my-popups\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"modal d-block\">\r\n            <div class=\"modal-dialog modal-dialog-centered\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header theme-primary partition-full\">\r\n                        <h4 class=\"modal-title\">{{ $t('Manage Status Mapping') }}</h4>\r\n                        <button type=\"button\" class=\"close\" v-on:click=\"Close\">\r\n                            <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div class=\"modal-body\">\r\n                        <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\"\r\n                            v-on:OnSubmit=\"onSubmit\"></dynamic-form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nexport default {\r\n    props: {\r\n        MapStatusId: {\r\n            type: Number,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            serviceAppointmentStatusList: [],\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Status Mapping Name'),\r\n                            name: \"StatusMappingName\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('Enter Status Mapping Name'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },                        \r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Description'),\r\n                            name: \"Description\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('Enter Description'),\r\n                            validationRules: { \"required\": false, max: 100 },\r\n                        },   \r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            mode: \"tag\",\r\n                            label: this.$t('Service Appointment Status '),\r\n                            name: \"ServiceUser\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Select Status'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            mode: \"tag\",\r\n                            label: this.$t('Work Order Status '),\r\n                            name: \"WorkOrder\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Select Status'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            mode: \"tag\",\r\n                            label: this.$t('Ticket Status '),\r\n                            name: \"TicketStatus\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Select Status'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                    ],\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close\r\n                }\r\n            ],\r\n            ListData: []\r\n        }\r\n    },\r\n    created: async function () {\r\n        this.BindServiceAppointmentStatusType();\r\n        this.BindWorkOrderStatusType();\r\n        this.BindTicketStatusType();        \r\n    },\r\n    methods:{\r\n        Close: function () {\r\n            this.$parent.AddMapStatusPopup = false;\r\n        },\r\n        BindServiceAppointmentStatusType: async function(){\r\n            debugger;\r\n            var vm = this;\r\n            var appendingUrl = `id=&companyId=${vm.companyId}&userId=${vm.userid}&moduleName=${'FSM'}&type=${'SERVICEAPPOINTMENT_STATUS'}`;\r\n            await DataServices.GetDDLData(appendingUrl).then(function (response) {\r\n                debugger;\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        response.data.DATA.forEach((item, index) => {\r\n                       vm.FormSchema[2].Data[0].config.options.push({  \r\n                        name: item.name,                      \r\n                        value: item.value                                              \r\n                    })\r\n                  })\r\n                }\r\n               }\r\n            });\r\n        },\r\n        BindWorkOrderStatusType: async function(){\r\n            debugger;\r\n            var vm = this;\r\n            var appendingUrl = `id=&companyId=${vm.companyId}&userId=${vm.userid}&moduleName=${'FSM'}&type=${'WORK_ORDER_FINAL_STATUS'}`;\r\n            await DataServices.GetDDLData(appendingUrl).then(function (response) {\r\n                debugger;\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        response.data.DATA.forEach((item, index) => {\r\n                       vm.FormSchema[2].Data[1].config.options.push({\r\n                        value: item.value,\r\n                        name: item.name\r\n                    })\r\n                  })\r\n                }\r\n               }\r\n            });\r\n        },\r\n        BindTicketStatusType: async function(){\r\n            debugger;\r\n            var vm = this;\r\n            var appendingUrl = `id=&companyId=${vm.companyId}&userId=${vm.userid}&moduleName=${'FSM'}&type=${'FSM_TICKETING_STATUS'}`;\r\n            await DataServices.GetDDLData(appendingUrl).then(function (response) {\r\n                debugger;\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        response.data.DATA.forEach((item, index) => {\r\n                       vm.FormSchema[2].Data[2].config.options.push({\r\n                        value: item.value,\r\n                        name: item.name\r\n                    })\r\n                  })\r\n                }\r\n               }\r\n            });\r\n        },\r\n        onSubmit(formfields, val) {\r\n            debugger;\r\n            var vm = this;           \r\n            var i = 0;\r\n            \r\n            var jsonobj = {\r\n                statusMappingName: formfields.StatusMappingName,\r\n                description: formfields.Description,\r\n                serviceAppointmentStatus: formfields.ServiceUser,\r\n                workOrderStatus: formfields.WorkOrder,\r\n                ticketStatus: formfields.TicketStatus\r\n            };\r\n            var params = JSON.stringify(jsonobj);\r\n            DataServices.SaveMapStatusTicketType(params).then(function (response)  {\r\n                debugger\r\n                if (response.data.status == 'Success') {\r\n                    if (response.data.result == \"NAME_ALREADY_EXISTS\") {\r\n                        vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"StatusMapping\")], [vm.$t(\"Name\")]), \"warning\", true, vm.$t(\"Alert\"));\r\n                        vm.Close();\r\n                    }\r\n                    else if (response.data.result == \"MAPPING_ALREADY_EXISTS\") {\r\n                        vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"StatusMapping\")]), \"warning\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                    else if (response.data.result == \"SA_STATUS_ALREADY_EXISTS\") {\r\n                        vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"ServiceAppointment\")], [vm.$t(\"Status\")]), \"warning\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                    else {\r\n                        vm.ShowAlert(vm.$t(\"OffHoursSuccess\", [vm.$t(\"StatusMapping\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                    vm.Close();\r\n                    vm.$parent.FetchData();\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t(\"DeletedError\", [vm.$t(\"StatusCode\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                    vm.Close();\r\n                }\r\n            });\r\n        }\r\n    }\r\n   \r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddMapStatusPopup.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddMapStatusPopup.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddMapStatusPopup.vue?vue&type=template&id=4f81a01e&\"\nimport script from \"./AddMapStatusPopup.vue?vue&type=script&lang=js&\"\nexport * from \"./AddMapStatusPopup.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <section>\r\n        <tg-list v-show=\"IsGroupView\" :IsShowAction=\"false\" ModuleName=\"Ticketing\" SubModuleCode=\"FSM_Map_Status\"\r\n        IdentityColumn=\"id\" :HeaderText=\"$t('Map Status')\" :LegendArray=\"[]\" :RenderRowActionMethod=\"() => { }\"\r\n        :widgets=\"[]\" :listType=\"['List']\" :ListData=\"MapStatusListing\" :HeaderData=\"Headers\" :HeaderButtons=\"listheaderbuttons\"\r\n        :TotalRecords=\"TotalRecords\" :SearchFields=\"leftSearchFields\" :ListDataCallBackFunction=\"FetchData\"\r\n        :showCheckBox=\"true\" :SortExp=\"SortExp\" :SortBy=\"SortBy\" :NorecordfoundText=\"$t('NoRecordfound')\"\r\n        v-on:LeftsearchButtonClick=\"leftCommonSearch\" v-on:PagerButtonClick=\"pagerMethod\"\r\n        v-on:HeaderButtonClick=\"commonHeaderButtonClick\">\r\n        <template v-slot:slotdata=\"{ data }\">\r\n            <template v-if=\"data.column.COLUMN_NAME == 'status_id'\">\r\n                <listing-status :isfor=\"'MapStatus'\" v-if=\"isCRMShowStausDrop(data.row.statusId, 'Ticketing')\"\r\n                    ref=\"updatestatus\" v-bind:dataid=\"data.row.id\" data-controller=\"Crm\"\r\n                    v-bind:statuslist=\"StatusListForListing\" v-bind:item=\"data.statusId\" data-action=\"index\"\r\n                    v-bind:dataselected=\"data.row.status_id==1001?'Active':'Inactive'\" v-bind:callbackfunction=\"FetchData\"\r\n                    v-bind:isselectedvaluestring=\"true\">\r\n                </listing-status>\r\n                <a class=\"inactive-disabled\" v-if=\"!isCRMShowStausDrop(data.row.status_id, 'Ticketing')\">\r\n                    <span v-bind:class=\"getStatusClassList(data.row.status_id, 'status_id')\">\r\n                        {{ data.row[data.column.COLUMN_NAME] }}\r\n                    </span>\r\n                </a>\r\n            </template>\r\n        </template>       \r\n    </tg-list>   \r\n    <AddMapStatusPopup v-if=\"AddMapStatusPopup\" :MapTypeId=\"mapStatusId\"></AddMapStatusPopup>   \r\n    </section>  \r\n</template>\r\n<script>\r\nimport Schema from \"@/views/MapStatus/MapStatusSchema\";\r\nimport DataServices from \"@/services/DataService\";\r\nimport AddMapStatusPopup from '../../components/Modal/AddMapStatusPopup.vue'\r\nexport default {\r\n    components:{AddMapStatusPopup},\r\n    data() {\r\n        return {\r\n            MapStatusListing: [],\r\n            AddMapStatusPopup: false,\r\n            mapStatusId: 0,\r\n            TotalRecords: 0,\r\n            PageSize: 10,\r\n            PageNumber: 1,\r\n            CurrentPage: 1,\r\n            SortBy: '',\r\n            SortExp: '',\r\n            user_type: null,\r\n            user_id:null,\r\n            companyId:null,\r\n            Headers: [{\r\n                \"COLUMN_NAME\": \"name\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Name\",\r\n                \"DISPLAY_ORDER\": 1\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"sa_status_id\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Service Appointment Status\",\r\n                \"DISPLAY_ORDER\": 2\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"wo_status_id\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Work Order Status\",\r\n                \"DISPLAY_ORDER\": 3\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"ticket_status_id\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Ticket Status\",\r\n                \"DISPLAY_ORDER\": 4\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"created_by\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Created By\",\r\n                \"DISPLAY_ORDER\": 5\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"created_at\",\r\n                \"DATA_TYPE\": \"date\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Created At\",\r\n                \"DISPLAY_ORDER\": 5\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"status_id\",\r\n                \"DATA_TYPE\": \"string\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": \"Status\",\r\n                \"DISPLAY_ORDER\": 5\r\n            }\r\n\r\n            ],\r\n            listheaderbuttons: Schema.buttons,\r\n            leftSearchFields: Schema.leftsearchSchema,\r\n            IsGroupView: true,\r\n            noRecord: false,\r\n            StatusListForListing: [{ STATUS: 'Active', STATUS_ID: 1001 ,STATUS_COLOR:\"#ffffff\",STATUS_BG_COLOR: \"#28a745\"}, \r\n            { STATUS: 'Inactive', STATUS_ID: 1002 ,STATUS_COLOR:\"#ffffff\",STATUS_BG_COLOR:\"#f50606\"}],\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        this.user_id = this.GetUserInfo.ID\r\n        this.user_type = this.GetUserInfo.UserType\r\n        this.companyId = this.GetUserInfo.CompanyId;\r\n        await this.FetchData();\r\n        await Schema.bindleftCommonSearchdropdown(vm,\"FSM\",\"SERVICEAPPOINTMENT_STATUS\");\r\n        await Schema.bindleftCommonSearchdropdown(vm,\"FSM\",\"WORK_ORDER_FINAL_STATUS\");\r\n        await Schema.bindleftCommonSearchdropdown(vm,\"FSM\",\"FSM_TICKETING_STATUS\");\r\n    },\r\n\r\n    methods: {\r\n        paramsToObject(entries) {\r\n            const result = {}\r\n            for (const [key, value] of entries) { // each 'entry' is a [key, value] tupple\r\n                result[key] = value;\r\n            }\r\n            return result;\r\n        },       \r\n        leftCommonSearch: function (value) {\r\n           // debugger;\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchCondition;\r\n            }\r\n            else {\r\n                this.searchCondition = \"\";\r\n            }\r\n            this.FetchData();\r\n        },\r\n        pagerMethod: function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            this.FetchData();\r\n        },\r\n        FetchData: async function () {\r\n            // debugger;\r\n            var vueObj = this;           \r\n            var srchCondition = \"\";\r\n                if (!this.isBlank(this.searchCondition)) {\r\n                    srchCondition = srchCondition + this.searchCondition;\r\n                }\r\n                if (typeof vueObj.conditionForInstantSearch != 'undefined')\r\n                {\r\n                    srchCondition = vm.conditionForInstantSearch;\r\n                } \r\n                  \r\n            var url = `pageSize=${vueObj.PageSize}&pageNum=${vueObj.PageNumber}&sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}&searchCondition=${srchCondition}`;\r\n\r\n            await DataServices.FetchTicketStatusList(url).then(function (response) {\r\n                // debugger;\r\n                if (response.data != \"\" && response.data != null) {\r\n                    vueObj.Headers.forEach((column) => {\r\n                        column.settings = null;\r\n                        if (column.COLUMN_NAME == \"status_id\") {\r\n                            column.settings = {\r\n                                isInSlot: true,\r\n                            };\r\n                        }\r\n                    });\r\n                    if (response.data.result.data.length > 0) {\r\n                        // debugger\r\n                        vueObj.MapStatusListing = response.data.result.data;\r\n                        vueObj.TotalRecords = response.data.result.data[0].total_records;\r\n                        vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                        vueObj.CurrentPage = vueObj.PageNumber;\r\n                        vueObj.listheaderbuttons[1].isdisabled = true;\r\n                        vueObj.noRecord = false;\r\n                        // vueObj.IsLoad = true;\r\n                    } \r\n                    else {\r\n                        vueObj.MapStatusListing = response.data.result.data;\r\n                        vueObj.noRecord = true;\r\n                        vueObj.TotalRecords = 0                       \r\n                    }\r\n                }\r\n                else {\r\n                    vueObj.noRecord = true;\r\n                    vueObj.Headers = [];\r\n                    vueObj.TotalRecords = 0\r\n                }                \r\n                 setTimeout(function () { vueObj.ResponsiveDataTable('tablelistingdata') }, 500);\r\n            })\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            // debugger;\r\n            switch (event.callbackfunction) {\r\n                case \"openMapStatus\":\r\n                    this.openAddMapStatus(null);\r\n                    break;\r\n                case \"commonDeleteData\":\r\n                    this.commonDeleteData();\r\n                    break;              \r\n            }\r\n        },       \r\n        getStatusClassList: function (status) {\r\n           // debugger;\r\n            var returnClass = '';\r\n            switch (status) {\r\n                case 'Active':\r\n                    returnClass = 'px-2 text-center bg-success text-white d-block';\r\n                    break;\r\n                case 'Inactive':\r\n                    returnClass = 'px-2 text-center bg-danger text-white d-block';\r\n                    break;\r\n                default:\r\n                    returnClass = '';\r\n            }\r\n            return returnClass;\r\n        },\r\n        openAddMapStatus: function (id) {    \r\n            if(id == undefined)\r\n                    id = 0;\r\n                this.mapStatusId = id;           \r\n                this.AddMapStatusPopup = !this.AddMapStatusPopup;\r\n            },\r\n        commonDeleteData: function (event) {\r\n          //  debugger;\r\n            var vm = this;\r\n            var val = \"\";\r\n            $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                if (val.length > 0)\r\n                    val += ',';\r\n                val += $(this).val();\r\n            });\r\n            if (val.length > 0) {\r\n                vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Resource\")), function () {\r\n                 //   debugger;\r\n                    var postJSON = {\r\n                        ids: val,\r\n                        companyId: vm.companyId,\r\n                        userId: vm.user_id,\r\n                        moduleName: \"FSM\",\r\n                        refCode: \"TICKET_MAP_STATUS\"\r\n\r\n                    };\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    DataServices.deleteActivityData(objectPostString).then(response => {\r\n                    //    debugger\r\n                        var box = \"\";\r\n                        if (response.data[0].Status == \"Success\") {\r\n                            $(\"[id^='chkAll']\").prop(\"checked\", false).removeAttr('checked');\r\n                            $(\"[id^='DeleteItem']\").removeClass('enable').addClass('disabled');\r\n                            $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                            vm.FetchData();\r\n                            box = vm.ShowAlert(vm.$t('DeletedSuccess', [vm.$t('StatusMapping')]), \"Success\", true, vm.$t('Alert'));\r\n                        }\r\n                        else {\r\n                            box = vm.ShowAlert(vm.$t('DeletedError', [vm.$t('StatusMapping')]), \"failure\", true, vm.$t('Alert'));\r\n                        }\r\n                        setTimeout(function () {\r\n                            box.modal('hide');\r\n                        }, 2000);\r\n\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                alert(vm.$t(\"Selectanyrecordtodelete\"));\r\n            }\r\n        },\r\n        UpdateStatus: async function(status){\r\n        //debugger\r\n        var vm =this;\r\n        if(status=='Active'){\r\n            status=1001\r\n        }\r\n        else{\r\n            status=1002\r\n        }\r\n        var val = \"\";\r\n            $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                if (val.length > 0)\r\n                    val += ',';\r\n                val += $(this).val();\r\n            });\r\n            if (val.length > 0) {\r\n                vm.confirmR(vm.$t(\"Confirm\"), true, (vm.$t(\"update\") + \"  \" + vm.$t(\"status\")), function () {\r\n                var url = `id=${val}&status_id=${status}&isFor=${'group'}`;\r\n                DataServices.updatestatus(url).then(response => {\r\n                  //  debugger\r\n                    if(response.data==true){\r\n                        $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked'); \r\n                        vm.FetchData();                        \r\n                    }\r\n                      \r\n                })\r\n\r\n           \r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n }\r\n\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapStatusListing.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapStatusListing.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapStatusListing.vue?vue&type=template&id=5b548e08&\"\nimport script from \"./MapStatusListing.vue?vue&type=script&lang=js&\"\nexport * from \"./MapStatusListing.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}