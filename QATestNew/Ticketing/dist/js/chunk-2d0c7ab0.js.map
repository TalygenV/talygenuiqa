{"version":3,"sources":["webpack:///./src/views/Company/Storage/List.vue?4a10","webpack:///src/views/Company/Storage/List.vue","webpack:///./src/views/Company/Storage/List.vue?719c","webpack:///./src/views/Company/Storage/List.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isLoading","staticClass","$t","GreetingData","filteredHeaders","listheaderbuttons","TotalRecords","renderActions","FetchData","searchCondition","on","leftCommonSearch","pagerMethod","commonHeaderButtonClick","actionButtonClick","sortdata","scopedSlots","_u","key","fn","ref","data","column","COLUMN_NAME","_v","domProps","row","template_id","_s","_e","isCRMShowStausDrop","status_id","greeting_template_id","StatusListForListing","recordId","$event","showStrorage","staticRenderFns","components","LeftColumn","AddCompanySetup","props","sourcetype","type","String","required","noRecord","CompanyId","Schema","buttons","leftSearchFields","leftsearchSchema","ShowManageView","ShowAddCustomReportView","PageSize","PageNumber","isPaged","TotalPages","listActions","conditionForInstantSearch","SortBy","SortExp","showsharereportview","showemailreportview","showschedulereportview","ReportID","reportname","reportid","foldername","folderid","LeadStatusList","searchcondition","MODULENAME","SUBMODULECODE","privilegeParams","sharetype","STATUS","STATUS_ID","STATUS_COLOR","STATUS_BG_COLOR","ths","GetUserInfo","bindleftCommonSearchdropdown","getStatuslistForListing","computed","filteredUserData","vueObj","UserData","map","item","filteredItem","USER_EMP_ID","mounted","forEach","value","isSearch","methods","console","log","event","callbackfunction","ManageFolder","AddCustomReport","commonDeleteData","EmailScheduleListing","index","vm","GreetingDataService","CheckPrivilege","then","response","ShowAlert","FOLDER_ID","REPORT_ID","REPORTNAME","$","modal","setTimeout","SetBootstraptoolTip","sendemail","editreport","setschedule","ViewReport","ACCESS","$router","push","name","params","Modulename","Submodulecode","ReportName","Module_Id","MODULE_ID","Folder_Id","Sub_Module_Id","Version","Action","FolderID","btoa","JSON","stringify","s","SortDir","attr","_vm$$refs$managefolde","$refs","managefolder","GetViewList","AddGreeting","val","not","each","length","confirmR","postJSON","ids","moduleName","subModuleCode","refCode","objectPostString","CommonDeleteData","status","prop","removeAttr","addClass","parseInt","getRequestParams","pageNumber","pageSize","sortBy","sortExp","clickEventOfColumn","url","GreetingListing","Headers","FieldSchema","filteredColumnNames","filter","obj","includes","settings","clickEvent","formatter","columnDataFormatter","isInSlot","Data","total_records","Math","ceil","CurrentPage","undefined","localStorage","SavedParameters","removeItem","ResponsiveDataTable","closeModalSharePopup","StatusType","lang","statusdropdown","json","result","component"],"mappings":"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","file":"js/chunk-2d0c7ab0.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"isVisible\":_vm.isLoading}}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-2 mt-2\"},[_c('LeftColumn')],1),_c('div',{staticClass:\"col-10\"},[_c('tg-list',{attrs:{\"IsShowAction\":false,\"showCheckBox\":true,\"ModuleName\":\"Dynamic_Reporting\",\"SubModuleCode\":\"Dynamic_Reporting\",\"IdentityColumn\":\"greeting_template_id\",\"HeaderText\":_vm.$t('Greeting'),\"ListData\":_vm.GreetingData,\"HeaderData\":_vm.filteredHeaders,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"IsSearchFieldsOnTop\":false,\"RenderRowActionMethod\":_vm.renderActions,\"ListDataCallBackFunction\":_vm.FetchData,\"IsFilterApplied\":_vm.searchCondition ? true : false,\"LegendArray\":[],\"sourcetype\":\"\",\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"ActionButtonClick\":_vm.actionButtonClick,\"SortdataButtonClick\":_vm.sortdata},scopedSlots:_vm._u([{key:\"slotdata\",fn:function(ref){\nvar data = ref.data;\nreturn [(data.column.COLUMN_NAME === 'template_id')?[_c('select',{staticClass:\"form-control w-100\",attrs:{\"name\":\"template_id\"}},[_c('option',{attrs:{\"value\":\"\",\"selected\":\"selected\"}},[_vm._v(\"Select Template\")]),_c('option',{domProps:{\"value\":data.row.template_id}},[_vm._v(_vm._s(data.row.template_id))])])]:_vm._e(),(data.column.COLUMN_NAME == 'status_id')?[(_vm.isCRMShowStausDrop(data.row.status_id, 'COMPANYSETUP_UPDATE'))?_c('listing-status',{ref:\"updatestatus\",attrs:{\"isfor\":'COMPANYSETUP_UPDATE',\"dataid\":data.row.greeting_template_id,\"data-controller\":\"COMPANYSETUP_UPDATE\",\"statuslist\":_vm.StatusListForListing,\"item\":data.row.greeting_template_id,\"data-action\":\"index\",\"module\":\"Company\",\"subModule\":\"Greeting\",\"dataselected\":data.row.status_id === 'Active' ? 'Active' : 'Inactive',\"callbackfunction\":_vm.FetchData,\"isselectedvaluestring\":true}}):_vm._e()]:_vm._e()]}}])})],1)]),(_vm.showStrorage)?_c('AddCompanySetup',{attrs:{\"recordId\":_vm.recordId,\"title\":_vm.$t('ManageStorage'),\"moduleName\":'Strorage',\"emitName\":'addReloadData',\"addApiUrl\":'/Strorage/add',\"subModule\":'Strorage'},on:{\"close\":function($event){_vm.showStrorage=false;_vm.recordId=0},\"addReloadData\":function($event){_vm.FetchData();_vm.showStrorage=false;_vm.recordId=0}}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <loader :isVisible=\"isLoading\"></loader>\r\n        <div class=\"row\">\r\n            <div class=\"col-2 mt-2\">\r\n                <LeftColumn />\r\n            </div>\r\n            <div class=\"col-10\">\r\n                <tg-list :IsShowAction=\"false\" :showCheckBox=\"true\" ModuleName=\"Dynamic_Reporting\" SubModuleCode=\"Dynamic_Reporting\"\r\n                    IdentityColumn=\"greeting_template_id\" :HeaderText=\"$t('Greeting')\" :ListData=\"GreetingData\" :HeaderData=\"filteredHeaders\"\r\n                    :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecords\" :IsSearchFieldsOnTop=\"false\"\r\n                    :RenderRowActionMethod=\"renderActions\" :ListDataCallBackFunction=\"FetchData\"\r\n                    :IsFilterApplied=\"searchCondition ? true : false\" v-on:LeftsearchButtonClick=\"leftCommonSearch\" :LegendArray=\"[]\" sourcetype=\"\"\r\n                    v-on:PagerButtonClick=\"pagerMethod\" v-on:HeaderButtonClick=\"commonHeaderButtonClick\"\r\n                    v-on:ActionButtonClick=\"actionButtonClick\" v-on:SortdataButtonClick=\"sortdata\" :NorecordfoundText=\"$t('NoRecordfound')\">\r\n                \r\n                    <template v-slot:slotdata=\"{ data }\">\r\n                        <template v-if=\"data.column.COLUMN_NAME === 'template_id'\"> \r\n                            <select name=\"template_id\" class=\"form-control w-100\">\r\n                                <option value=\"\" selected=\"selected\">Select Template</option>\r\n                                <option :value=\"data.row.template_id\">{{ data.row.template_id }}</option>\r\n                            </select>\r\n                        </template>\r\n                        <template v-if=\"data.column.COLUMN_NAME == 'status_id'\"> \r\n                            <listing-status :isfor=\"'COMPANYSETUP_UPDATE'\" v-if=\"isCRMShowStausDrop(data.row.status_id, 'COMPANYSETUP_UPDATE')\"\r\n                                ref=\"updatestatus\" v-bind:dataid=\"data.row.greeting_template_id\" data-controller=\"COMPANYSETUP_UPDATE\"\r\n                                v-bind:statuslist=\"StatusListForListing\" v-bind:item=\"data.row.greeting_template_id\" data-action=\"index\" module=\"Company\" subModule=\"Greeting\"\r\n                                v-bind:dataselected=\"data.row.status_id === 'Active' ? 'Active' : 'Inactive'\"\r\n                                v-bind:callbackfunction=\"FetchData\" v-bind:isselectedvaluestring=\"true\">\r\n                            </listing-status>\r\n                        </template>\r\n                    </template>\r\n                </tg-list>\r\n            </div>\r\n        </div>\r\n        <!---modal popup-->\r\n        <AddCompanySetup :recordId=\"recordId\" :title=\"$t('ManageStorage')\" v-if=\"showStrorage\"  v-on:close=\"showStrorage=false;recordId=0\" v-on:addReloadData=\"FetchData();showStrorage=false;recordId=0\" v-bind:moduleName=\"'Strorage'\" v-bind:emitName=\"'addReloadData'\" v-bind:addApiUrl=\"'/Strorage/add'\" v-bind:subModule=\"'Strorage'\" />\r\n    </div>\r\n</template>\r\n<script>\r\nimport GreetingDataService from \"@/services/DataService\";\r\nimport Schema from \"@/views/Company/Greeting/GreetingSchema\";\r\nimport AddCompanySetup from \"@/components/Modals/AddCompanySetup.vue\";\r\nimport LeftColumn from \"../LeftColumn.vue\";\r\nexport default {\r\n    components: {\r\n        LeftColumn,\r\n        AddCompanySetup,\r\n    },\r\n    props: {\r\n        sourcetype:\r\n        {\r\n            type: String,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            recordId:0,\r\n            noRecord:false,\r\n            isLoading: false,\r\n            CompanyId: null,\r\n            GreetingData: [],\r\n            TotalRecords: 0,\r\n            listheaderbuttons: Schema.buttons,\r\n            leftSearchFields: Schema.leftsearchSchema,\r\n            ShowManageView: false,\r\n            ShowAddCustomReportView: false,\r\n            PageSize: 10,\r\n            PageNumber: 1,\r\n            isPaged: 1,\r\n            TotalPages: 0,\r\n            listActions: Schema.listActions,\r\n            searchCondition: '',\r\n            conditionForInstantSearch: \"\",\r\n            SortBy: '',\r\n            SortExp: '',\r\n            showsharereportview: false,\r\n            showemailreportview: false,\r\n            showschedulereportview: false,\r\n            ReportID: null,\r\n            reportname: '',\r\n            reportid: '',\r\n            foldername: '',\r\n            folderid: '',\r\n            LeadStatusList: [],\r\n            searchcondition: '',\r\n            MODULENAME: null,\r\n            SUBMODULECODE: null,\r\n            privilegeParams: null,\r\n            sharetype: '',\r\n            // Headers: [],\r\n            filteredHeaders: [],\r\n            StatusListForListing: [\r\n                { \r\n                    STATUS: 'Active', \r\n                    STATUS_ID: 1001, \r\n                    STATUS_COLOR: \"#ffffff\", \r\n                    STATUS_BG_COLOR: \"#28a745\" \r\n                },{ \r\n                    STATUS: 'Inactive', \r\n                    STATUS_ID: 1002, \r\n                    STATUS_COLOR: \"#ffffff\", \r\n                    STATUS_BG_COLOR: \"#d72435\"\r\n                }\r\n            ],\r\n            showStrorage:false\r\n        }\r\n    },\r\n    async created() {\r\n        var ths = this;\r\n        ths.CompanyId = ths.GetUserInfo.CompanyId;\r\n        ths.privilegeParams = `controller=Greeting&action=`;\r\n        await ths.FetchData();\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'FOLDER_NAME')\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'CREATED_BY')\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'MODIFIED_BY')\r\n        ths.getStatuslistForListing(\"Dynamic_Reporting\", \"en\");\r\n    },\r\n    computed: {\r\n        filteredUserData() {\r\n            return this.vueObj.UserData.map((item) => {\r\n            const filteredItem = { ...item };\r\n\r\n            // Check if USER_EMP_ID is null or empty, then replace with '--'\r\n            if (filteredItem.USER_EMP_ID === null || filteredItem.USER_EMP_ID === '') {\r\n                filteredItem.USER_EMP_ID = '--';\r\n            }\r\n\r\n            return filteredItem;\r\n            });\r\n        },\r\n        \r\n    },\r\n    mounted() {\r\n        Schema.leftsearchSchema.forEach(item => {\r\n            item.value = '';\r\n            item.isSearch = false;\r\n        })\r\n    },\r\n    methods: {\r\n        renderActions: function (row) {\r\n            console.log(row);\r\n            // var self = this;\r\n            // let rtnActionArray = [];\r\n            // self.listActions.forEach(actionItem => {\r\n            //     let action = { ...actionItem };\r\n            //     switch (action.title) {\r\n            //         case 'View':\r\n            //             action.isVisible = row.ACCESS != null ? true : true;\r\n            //             break;\r\n            //         case 'Send Email':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Schedule':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Share':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Edit':\r\n            //             action.isVisible = row.ACCESS != 1 ? true : false;\r\n            //             break;\r\n            //         default:\r\n            //             action.isVisible = true;\r\n            //             break;\r\n            //     }\r\n            //     rtnActionArray.push(action);\r\n            // });\r\n            // return rtnActionArray;\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            switch (event.callbackfunction) {\r\n                case \"ManageFolder\":\r\n                    this.ManageFolder();\r\n                    break;\r\n                case \"AddCustomReport\":\r\n                    this.AddCustomReport();\r\n                    break;\r\n                case \"commonDeleteData\":\r\n                    this.commonDeleteData();\r\n                    break;\r\n                case \"EmailScheduleListing\":\r\n                    this.EmailScheduleListing();\r\n                    break;\r\n                case \"AddDepartment\":\r\n                    this.showStrorage = true\r\n                    break;\r\n            }\r\n        },\r\n        actionButtonClick: function (callbackfunction, item, index, event) {\r\n            var vm = this;\r\n            switch (callbackfunction) {\r\n                case 'sharereport':\r\n                    var vm = this;\r\n                    GreetingDataService.CheckPrivilege(vm.privilegeParams+'ShareReport').then((response)=>{\r\n                        if(response.data){\r\n                            vm.sharetype = callbackfunction\r\n                            vm.folderid = item.FOLDER_ID;\r\n                            vm.ReportID = item.REPORT_ID;\r\n                            vm.foldername = item.REPORTNAME;\r\n                            vm.showsharereportview = true;\r\n                            $(\"#modalshareview\").modal('show');\r\n                            setTimeout(function () {\r\n                                $(\"#modalshareview\").modal('show');\r\n                                setTimeout(function () {\r\n                                    vm.SetBootstraptoolTip();\r\n                                }, 200);\r\n                            }, 1000);\r\n                        }\r\n                        else{\r\n                            vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                            return false;\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'sendemail':\r\n                    vm.sendemail(item.REPORT_ID, item.MODULENAME, item.SUBMODULECODE);\r\n                    break;\r\n                case 'editreport':\r\n                    vm.editreport(item);\r\n                    break;\r\n                case 'setschedule':\r\n                    vm.setschedule(item.REPORT_ID);\r\n                    break;\r\n                case 'ViewReport':\r\n                    vm.ViewReport(item.REPORT_ID, item.ACCESS, item.FOLDER_ID);\r\n                    break;\r\n            }\r\n        },\r\n        editreport: function (data) {\r\n            var vm = this;\r\n            GreetingDataService.CheckPrivilege(vm.privilegeParams+'Update').then((response)=>{\r\n                if(response.data){\r\n                    vm.$router.push({\r\n                        name: 'EditDataReport',\r\n                        params: {\r\n                            Modulename: data.MODULENAME, Submodulecode: data.SUBMODULECODE, ReportName: data.REPORTNAME, ReportID: data.REPORT_ID,\r\n                            Module_Id: data.MODULE_ID, Folder_Id: data.FOLDER_ID, Sub_Module_Id: data.Sub_Module_Id, Version: vm.Version, Action: 'Edit'\r\n                        }\r\n                    });\r\n                }\r\n                else{\r\n                    vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        ViewReport: function (ReportID, ACCESS, FolderID) {\r\n            var vm = this;\r\n            vm.$router.push('/Report/viewcustomreport/' + btoa(JSON.stringify({ ReportID: ReportID, ACCESS: ACCESS , Folder_Id: FolderID })))\r\n\r\n        },\r\n        sortdata: async function (s) {\r\n            var SortDir = \"sort tb_headerSortDown\";\r\n            this.SortBy = s;\r\n            if (s === this.SortBy) {\r\n                if (this.SortExp == \"\") {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n                else if (this.SortExp == \"ASC\") {\r\n                    this.SortExp = \"DESC\";\r\n                    SortDir = \"sort tb_headerSortUp\";\r\n                }\r\n                else {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n            }\r\n\r\n            await this.FetchData();\r\n            $(\"#th-\" + s + '  span:first-child').attr(\"class\", SortDir);\r\n        },\r\n        pagerMethod: async function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            await this.FetchData(); \r\n        },\r\n        leftCommonSearch: async function (value) {\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchCondition;\r\n            }\r\n            else {\r\n                this.searchCondition = \"\";\r\n            }\r\n\r\n            await this.FetchData();\r\n        },\r\n        ManageFolder: function () {\r\n            var vm = this;\r\n            GreetingDataService.CheckPrivilege(vm.privilegeParams+'FolderListing').then((response)=>{\r\n                if(response.data){\r\n                    vm.ShowManageView = true;\r\n                    $(\"#modalManageView\").modal('show');\r\n                    setTimeout(function () {\r\n                        $(\"#modalManageView\").modal('show');\r\n                        setTimeout(function () {\r\n                            vm.SetBootstraptoolTip();\r\n                        }, 200);\r\n                    }, 1000);\r\n                    vm.$refs.managefolder?.GetViewList();\r\n                }\r\n                else{\r\n                    vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        AddGreeting: function () {\r\n            var vm = this;\r\n            console.log(vm, \"Add\");\r\n        },\r\n        commonDeleteData: function (event) {\r\n            var vm = this;\r\n            GreetingDataService.CheckPrivilege(vm.privilegeParams + 'Delete').then((response)=>{\r\n                if(response.data){\r\n                    var val = \"\";\r\n                    $('.chkItems:checkbox:checked').not(\"[id^='chkAll_0']\").each(function () {\r\n                        if (val.length > 0)\r\n                            val += ',';\r\n                        val += $(this).val();\r\n                    });\r\n                    if (val.length > 0) {\r\n                        vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Greeting\")), async function () {\r\n                            var postJSON = {\r\n                                ids: val,\r\n                                moduleName: \"Greeting\",\r\n                                subModuleCode: \"Greeting\",\r\n                                refCode: \"COMPANYSETUP_DELETE\"\r\n                            };\r\n                            // var objectPostString=`ids=${val}&tableName=TALYGEN_Greeting&primaryKey=Greeting_id`;\r\n                            var objectPostString = JSON.stringify(postJSON)\r\n                            console.log(objectPostString);\r\n                            await GreetingDataService.CommonDeleteData(objectPostString).then(async function (response) {\r\n                                console.log(response);\r\n                                if (response.status == 200) {\r\n                                    $('.chkItems:checkbox:checked,#chkAll_0').prop(\"checked\", false).removeAttr('checked');\r\n                                    $(\"#DeleteMultiple\").addClass(\"disabled\");\r\n                                    vm.ShowAlert(vm.$t('DeletedSuccess', [vm.$t('Greeting')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                    vm.PageNumber = parseInt(vm.PageNumber) - 1;\r\n                                    if (vm.PageNumber <= 0) {\r\n                                        vm.PageNumber = 1;\r\n                                    }\r\n                                    await vm.FetchData();\r\n                                }\r\n                                else {\r\n                                    // vm.ShowAlert(vm.$t(\"Failure\", [vm.$t(\"Report name\")]), 'danger', true, vm.$t('Alert'));\r\n                                    vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                }\r\n                                \r\n                            },);\r\n                        });\r\n                    }\r\n                    else {\r\n                        vm.ShowAlert(vm.$t(\"Selectanyrecordtodelete\"));\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                    return false;\r\n                }\r\n            })\r\n        },\r\n        getRequestParams: function (pageNumber, pageSize, sortBy, sortExp, isPaged, searchcondition) {\r\n            let params = {};\r\n            if (pageNumber) { params[\"pageNumber\"] = pageNumber; }\r\n            if (searchcondition) { params[\"searchcondition\"] = searchcondition; }\r\n            if (isPaged) { params[\"is_paged\"] = isPaged; }\r\n            if (sortBy) { params[\"sortBy\"] = sortBy; }\r\n            if (sortExp) { params[\"sortExp\"] = sortExp; }\r\n            if (pageSize) { params[\"pageSize\"] = pageSize; }\r\n            return params;\r\n        },\r\n        clickEventOfColumn: function (row, column) {\r\n            console.log(row,column.COLUMN_NAME)\r\n            if (column.COLUMN_NAME == 'greetingtype') {\r\n                this.recordId = row.greeting_template_id\r\n                this.showStrorage = true\r\n            }\r\n            if (column.COLUMN_NAME == 'USERNAME') {\r\n                this.$router.push({ name: 'viewcustomreport', params: { ReportID: row.REPORT_ID, ACCESS: row.ACCESS } });\r\n            }\r\n        },\r\n        async FetchData() {\r\n            var vueObj = this;\r\n            vueObj.isLoading = true;\r\n            var url=`CompanyId=${vueObj.CompanyId}&pageSize=${vueObj.PageSize}&pageNum=${vueObj.PageNumber}`;\r\n            await GreetingDataService.GreetingListing(url)\r\n                .then(function (response) {\r\n                    vueObj.Headers = response.data.FieldSchema;\r\n                    const filteredColumnNames = [\"greetingtype\", \"template_id\", \"status_id\"];\r\n                    // Filter the original list based on the desired COLUMN_NAME values\r\n                    vueObj.filteredHeaders =  vueObj.Headers.filter(obj => filteredColumnNames.includes(obj.COLUMN_NAME));\r\n                    vueObj.filteredHeaders.forEach((column) => {\r\n                        column.settings = null;\r\n                        if (column.COLUMN_NAME == \"greetingtype\") {\r\n                            column.settings = {\r\n                                clickEvent: vueObj.clickEventOfColumn,\r\n                                formatter: vueObj.columnDataFormatter,\r\n                            };\r\n                        }                        \r\n                        if (column.COLUMN_NAME == \"status_id\" || column.COLUMN_NAME == \"template_id\") {\r\n                            column.settings = {\r\n                                isInSlot: true\r\n                            };\r\n                        }\r\n                    });\r\n                    if (response.data.Data != \"\" && response.data.Data != null) {\r\n                        if (response.data.Data.length > 0) {\r\n                            vueObj.GreetingData = response.data.Data;\r\n                            vueObj.TotalRecords = vueObj.GreetingData[0].total_records;\r\n                            vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                            vueObj.CurrentPage = vueObj.PageNumber;\r\n                            vueObj.noRecord = false;\r\n                        } else {\r\n                            // vueObj.ReportData = [];\r\n                            vueObj.noRecord = true;\r\n                            vueObj.TotalRecords = 0\r\n                        }\r\n                        if (localStorage.SavedParameters != undefined) {\r\n                            localStorage.removeItem(\"SavedParameters\");\r\n                        }\r\n                    }\r\n                    else {\r\n                        vueObj.noRecord = true;\r\n                        // vueObj.ReportData = [];\r\n                        vueObj.TotalRecords = 0\r\n                    }\r\n                    setTimeout(function () {\r\n                        vueObj.ResponsiveDataTable('tablelistingdata')\r\n                    }, 500);\r\n            });\r\n            vueObj.isLoading = false;\r\n        },\r\n        closeModalSharePopup: function () {\r\n            $(\"#modalshareview\").modal('hide');\r\n            this.showsharereportview = false;\r\n        },\r\n        getStatuslistForListing: function (StatusType, lang) {\r\n            var vm = this;\r\n            var url =\"langCode=\" + lang + \"&statusType=\" + StatusType + \"&hasglobal=true\";\r\n                GreetingDataService.statusdropdown(url).then(function (response) {\r\n                if (response.data.status == \"Success\") {\r\n                    var json = response.data.result;\r\n                    vm.StatusListForListing = json.data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=23096783\"\nimport script from \"./List.vue?vue&type=script&lang=js\"\nexport * from \"./List.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}