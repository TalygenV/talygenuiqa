{"version":3,"sources":["webpack:///./src/views/Company/Location/List.vue?e469","webpack:///./src/views/Company/Location/LocationSchema.js","webpack:///src/views/Company/Location/List.vue","webpack:///./src/views/Company/Location/List.vue?811c","webpack:///./src/views/Company/Location/List.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isLoading","staticClass","$t","LocationData","filteredHeaders","listheaderbuttons","TotalRecords","topSearchFields","renderActions","FetchData","searchCondition","on","leftCommonSearch","pagerMethod","commonHeaderButtonClick","actionButtonClick","sortdata","scopedSlots","_u","key","fn","ref","data","column","COLUMN_NAME","isCRMShowStausDrop","row","status_id","company_location_id","StatusListForListing","value","_e","id","recordId","$event","showLocation","staticRenderFns","buttons","title","iconClass","callbackfunction","additionalClass","isdisabled","isvisible","checkPrivilege","topsearchSchema","fieldName","fieldType","fieldSearchConditionName","isSearch","listActions","icon","additionalSpan","bindleftCommonSearchdropdown","ths","modulename","filtername","vm","url","params","LocationDataService","GetMainReportSearching","then","response","console","log","leftsearchSchema","json","leftSearchFields","listOptions","map","item","container","name","FOLDER_NAME","FOLDER_ID","toString","LeadStatusList","items","CREATED_BY","CREATED_ID","values","MODIFIED_BY","MODIFIED_ID","dataval","components","LeftColumn","AddCompanySetup","props","sourcetype","type","String","required","noRecord","CompanyId","Schema","ShowManageView","ShowAddCustomReportView","PageSize","PageNumber","isPaged","TotalPages","conditionForInstantSearch","SortBy","SortExp","showsharereportview","showemailreportview","showschedulereportview","ReportID","reportname","reportid","foldername","folderid","searchcondition","MODULENAME","SUBMODULECODE","privilegeParams","sharetype","STATUS","STATUS_ID","STATUS_COLOR","STATUS_BG_COLOR","GetUserInfo","getStatuslistForListing","computed","filteredUserData","vueObj","UserData","filteredItem","USER_EMP_ID","mounted","forEach","methods","self","rtnActionArray","actionItem","action","isVisible","ACCESS","push","event","commonDeleteData","UpdateStatus","index","singleDeleteData","s","SortDir","$","attr","ManageFolder","CheckPrivilege","ShowAlert","_vm$$refs$managefolde","modal","setTimeout","SetBootstraptoolTip","$refs","managefolder","GetViewList","AddDesignation","confirmR","postJSON","ids","moduleName","subModuleCode","refCode","objectPostString","JSON","stringify","CommonDeleteData","status","parseInt","val","not","each","length","prop","removeAttr","addClass","ID","StatusId","IsFor","Module","Submodule","CommonUpdateStatus","getRequestParams","pageNumber","pageSize","sortBy","sortExp","clickEventOfColumn","showAnnouncementMessagage","$router","REPORT_ID","trim","LocationListing","Headers","FieldSchema","filteredColumnNames","filter","obj","includes","settings","clickEvent","formatter","columnDataFormatter","isInSlot","Data","created_by","parse","modified_by","total_records","Math","ceil","CurrentPage","undefined","localStorage","SavedParameters","removeItem","ResponsiveDataTable","closeModalSharePopup","StatusType","lang","statusdropdown","result","component"],"mappings":"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","file":"js/chunk-2d228c8f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-2 mt-2\"},[_c('LeftColumn',{attrs:{\"HeaderText\":_vm.$t('Channel')}})],1),_c('div',{staticClass:\"col-10\"},[_c('tg-list',{attrs:{\"IsShowAction\":true,\"showCheckBox\":true,\"ModuleName\":\"Dynamic_Reporting\",\"SubModuleCode\":\"Dynamic_Reporting\",\"IdentityColumn\":\"company_location_id\",\"HeaderText\":_vm.$t('Location'),\"ListData\":_vm.LocationData,\"HeaderData\":_vm.filteredHeaders,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"IsSearchFieldsOnTop\":false,\"SearchPosition\":\"top\",\"SearchFields\":_vm.topSearchFields,\"RenderRowActionMethod\":_vm.renderActions,\"ListDataCallBackFunction\":_vm.FetchData,\"IsFilterApplied\":_vm.searchCondition ? true : false,\"LegendArray\":[],\"sourcetype\":\"\",\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"ActionButtonClick\":_vm.actionButtonClick,\"SortdataButtonClick\":_vm.sortdata},scopedSlots:_vm._u([{key:\"slotdata\",fn:function(ref){\nvar data = ref.data;\nreturn [(data.column.COLUMN_NAME == 'status_id')?[(_vm.isCRMShowStausDrop(data.row.status_id, 'COMPANYSETUP_UPDATE'))?_c('listing-status',{ref:\"updatestatus\",attrs:{\"isfor\":'COMPANYSETUP_UPDATE',\"dataid\":data.row.company_location_id,\"data-controller\":\"COMPANYSETUP_UPDATE\",\"statuslist\":_vm.StatusListForListing,\"item\":data.row.company_location_id,\"data-action\":\"index\",\"module\":\"Location\",\"subModule\":\"Location\",\"dataselected\":data.row.status_id.value == 1001 ? 'Active' : 'Inactive',\"callbackfunction\":_vm.FetchData,\"isselectedvaluestring\":true}}):_vm._e()]:_vm._e(),(data.column.COLUMN_NAME == 'attachment')?[_c('listing-status',{ref:\"updatestatus\",attrs:{\"isfor\":'COMPANYSETUP_UPDATE',\"dataid\":data.row.id,\"data-controller\":\"COMPANYSETUP_UPDATE\",\"item\":data.row.id,\"data-action\":\"index\",\"module\":\"Location\",\"subModule\":\"Location\",\"callbackfunction\":_vm.FetchData}})]:_vm._e()]}}])})],1)]),(_vm.showLocation)?_c('AddCompanySetup',{attrs:{\"recordId\":_vm.recordId,\"title\":_vm.$t('ManageLocation'),\"moduleName\":'Location',\"emitName\":'addReloadData',\"addApiUrl\":'/Location/add',\"subModule\":'Location'},on:{\"close\":function($event){_vm.showLocation=false;_vm.recordId=0},\"addReloadData\":function($event){_vm.FetchData();_vm.showLocation=false;_vm.recordId=0}}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import LocationDataService from \"@/services/DataService\";\r\nlet buttons =\r\n    [\r\n    {\r\n        title: 'Add',\r\n        iconClass: 'fa-plus',\r\n        callbackfunction: 'AddLocation',\r\n        additionalClass: '',\r\n        isdisabled: false,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'ActiveMultiple',\r\n        title: 'Active',\r\n        iconClass: 'fa-check',\r\n        callbackfunction: 'ActiveMultipleListing',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'InactiveMultiple',\r\n        title: 'Inactive',\r\n        iconClass: 'fa-close',\r\n        callbackfunction: 'InactiveMultipleListing',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'DeleteMultiple',\r\n        title: 'Delete',\r\n        iconClass: 'fa-trash-o',\r\n        callbackfunction: 'commonDeleteData',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n    }\r\n    ];\r\nlet topsearchSchema = [\r\n    {\r\n        fieldName: 'Search by Location Name',\r\n        fieldType: \"text\",\r\n        // fieldIcon: \"fa-file\",\r\n        fieldSearchConditionName: ['location_name'],\r\n        isSearch: true,\r\n        // value: \"\",\r\n        // listOptions: []\r\n    },\r\n];\r\nlet listActions = [\r\n    {\r\n        title: 'Add Child',\r\n       // href: '/viewcustomreport',\r\n        callbackfunction: 'ManageLocation',\r\n        icon: 'fa fa-plus-circle text-info action-icon',\r\n        additionalSpan: ''\r\n    },{\r\n        title: 'Delete',\r\n       // href: '/viewcustomreport',\r\n        callbackfunction: 'DeleteLocation',\r\n        icon: 'fa fa-trash-o text-warning action-icon',\r\n        additionalSpan: ''\r\n    },\r\n];\r\nfunction bindleftCommonSearchdropdown(ths, modulename, filtername) {\r\n    var vm = ths;\r\n    let url=filtername;\r\n    let params = {};\r\n    params[\"moduleName\"] = modulename; \r\n    params[\"type\"] = filtername\r\n    LocationDataService.GetMainReportSearching(url)\r\n        .then(function (response) {\r\n            console.log(leftsearchSchema);\r\n            var json = response.data;\r\n            console.log('folderid', json);\r\n            if (json != null) {\r\n                if (filtername == \"FOLDER_NAME\") {\r\n                        vm.leftSearchFields[4].listOptions =json.map((item) => {\r\n                        const container = {};                    \r\n                        container.name = item.FOLDER_NAME;\r\n                        container.value = item.FOLDER_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((items) => {\r\n                        const container = {};                    \r\n                        container.name = items.FOLDER_NAME;\r\n                        container.value = items.FOLDER_ID.toString();                    \r\n                        return container;\r\n                    })                    \r\n                }  \r\n                if (filtername == \"CREATED_BY\") {\r\n                        vm.leftSearchFields[3].listOptions =json.map((value) => {\r\n                        const container = {};                    \r\n                        container.name = value.CREATED_BY;\r\n                        container.value = value.CREATED_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((values) => {\r\n                        const container = {};                    \r\n                        container.name = values.CREATED_BY;\r\n                        container.value = values.CREATED_ID.toString();                    \r\n                        return container;\r\n                    }) \r\n                } \r\n                if (filtername == \"MODIFIED_BY\") {\r\n                        vm.leftSearchFields[7].listOptions =json.map((data) => {\r\n                        const container = {};                    \r\n                        container.name = data.MODIFIED_BY;\r\n                        container.value = data.MODIFIED_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((dataval) => {\r\n                        const container = {};                    \r\n                        container.name = dataval.MODIFIED_BY;\r\n                        container.value = dataval.MODIFIED_ID.toString();                    \r\n                        return container;\r\n                    }) \r\n                }   \r\n               \r\n\r\n            }\r\n        \r\n    });\r\n}\r\nexport default { buttons, topsearchSchema, listActions, bindleftCommonSearchdropdown };\r\n","<template>\r\n    <div>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"row\">\r\n            <div class=\"col-2 mt-2\">\r\n                <LeftColumn :HeaderText=\"$t('Channel')\" />\r\n            </div>\r\n            <div class=\"col-10\">\r\n                <tg-list :IsShowAction=\"true\" :showCheckBox=\"true\" ModuleName=\"Dynamic_Reporting\" SubModuleCode=\"Dynamic_Reporting\"\r\n                    IdentityColumn=\"company_location_id\" :HeaderText=\"$t('Location')\" :ListData=\"LocationData\" :HeaderData=\"filteredHeaders\"\r\n                    :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecords\" :IsSearchFieldsOnTop=\"false\"\r\n                    SearchPosition=\"top\" :SearchFields=\"topSearchFields\" \r\n                    :RenderRowActionMethod=\"renderActions\" :ListDataCallBackFunction=\"FetchData\"\r\n                    :IsFilterApplied=\"searchCondition ? true : false\" v-on:LeftsearchButtonClick=\"leftCommonSearch\" :LegendArray=\"[]\" sourcetype=\"\"\r\n                    v-on:PagerButtonClick=\"pagerMethod\" v-on:HeaderButtonClick=\"commonHeaderButtonClick\"\r\n                    v-on:ActionButtonClick=\"actionButtonClick\" v-on:SortdataButtonClick=\"sortdata\" :NorecordfoundText=\"$t('NoRecordfound')\">\r\n                \r\n                    <template v-slot:slotdata=\"{ data }\">\r\n                        <!-- <template v-if=\"data.column.COLUMN_NAME == 'message'\"> \r\n                            <div v-html=\"truncateMessage(data.row.message, 50)\"></div>\r\n                        </template> -->\r\n                        <template v-if=\"data.column.COLUMN_NAME == 'status_id'\"> \r\n                            <listing-status :isfor=\"'COMPANYSETUP_UPDATE'\" v-if=\"isCRMShowStausDrop(data.row.status_id, 'COMPANYSETUP_UPDATE')\"\r\n                                ref=\"updatestatus\" v-bind:dataid=\"data.row.company_location_id\" data-controller=\"COMPANYSETUP_UPDATE\"\r\n                                v-bind:statuslist=\"StatusListForListing\" v-bind:item=\"data.row.company_location_id\" data-action=\"index\" module=\"Location\" subModule=\"Location\"\r\n                                v-bind:dataselected=\"data.row.status_id.value == 1001 ? 'Active' : 'Inactive'\"\r\n                                v-bind:callbackfunction=\"FetchData\" v-bind:isselectedvaluestring=\"true\">\r\n                            </listing-status>\r\n                        </template>\r\n\r\n                        <template v-if=\"data.column.COLUMN_NAME == 'attachment'\"> \r\n                            <listing-status :isfor=\"'COMPANYSETUP_UPDATE'\" \r\n                                ref=\"updatestatus\" v-bind:dataid=\"data.row.id\" data-controller=\"COMPANYSETUP_UPDATE\"\r\n                                v-bind:item=\"data.row.id\" data-action=\"index\" module=\"Location\" subModule=\"Location\"\r\n                                v-bind:callbackfunction=\"FetchData\">\r\n                            </listing-status>\r\n                        </template>\r\n\r\n                    </template>\r\n                </tg-list>\r\n            </div>\r\n        </div>\r\n        <!---modal popup-->\r\n        <AddCompanySetup :recordId=\"recordId\" :title=\"$t('ManageLocation')\" v-if=\"showLocation\"  v-on:close=\"showLocation=false;recordId=0\" v-on:addReloadData=\"FetchData();showLocation=false;recordId=0\" v-bind:moduleName=\"'Location'\" v-bind:emitName=\"'addReloadData'\" v-bind:addApiUrl=\"'/Location/add'\" v-bind:subModule=\"'Location'\" />\r\n    </div>\r\n</template>\r\n<script>\r\nimport LocationDataService from \"@/services/DataService\";\r\nimport Schema from \"@/views/Company/Location/LocationSchema\";\r\nimport AddCompanySetup from \"@/components/Modals/AddCompanySetup.vue\";\r\nimport LeftColumn from \"../LeftColumn.vue\";\r\nexport default {\r\n    components: {\r\n        LeftColumn,\r\n        AddCompanySetup,\r\n    },\r\n    props: {\r\n        sourcetype:\r\n        {\r\n            type: String,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            recordId:0,\r\n            showLocation:false,\r\n            noRecord:false,\r\n            isLoading: false,\r\n            CompanyId: null,\r\n            LocationData: [],\r\n            TotalRecords: 0,\r\n            listheaderbuttons: Schema.buttons,\r\n            topSearchFields: Schema.topsearchSchema,\r\n            ShowManageView: false,\r\n            ShowAddCustomReportView: false,\r\n            PageSize: 10,\r\n            PageNumber: 1,\r\n            isPaged: 1,\r\n            TotalPages: 0,\r\n            listActions: Schema.listActions,\r\n            searchCondition: '',\r\n            conditionForInstantSearch: \"\",\r\n            SortBy: '',\r\n            SortExp: '',\r\n            showsharereportview: false,\r\n            showemailreportview: false,\r\n            showschedulereportview: false,\r\n            ReportID: null,\r\n            reportname: '',\r\n            reportid: '',\r\n            foldername: '',\r\n            folderid: '',\r\n            LeadStatusList: [],\r\n            searchcondition: '',\r\n            MODULENAME: null,\r\n            SUBMODULECODE: null,\r\n            privilegeParams: null,\r\n            sharetype: '',\r\n            // Headers: [],\r\n            filteredHeaders: [],\r\n            StatusListForListing: [\r\n            { \r\n                    STATUS: 'Active', \r\n                    STATUS_ID: 1001, \r\n                    STATUS_COLOR: \"#ffffff\", \r\n                    STATUS_BG_COLOR: \"#28a745\" \r\n                },{ \r\n                    STATUS: 'Inactive', \r\n                    STATUS_ID: 1002, \r\n                    STATUS_COLOR: \"#ffffff\", \r\n                    STATUS_BG_COLOR: \"#d72435\"\r\n                }\r\n            ],\r\n        }\r\n    },\r\n    async created() {\r\n        var ths = this;\r\n        ths.CompanyId = ths.GetUserInfo.CompanyId;\r\n        ths.privilegeParams = `controller=Location&action=`;\r\n        await ths.FetchData();\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'FOLDER_NAME')\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'CREATED_BY')\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'MODIFIED_BY')\r\n        ths.getStatuslistForListing(\"Dynamic_Reporting\", \"en\");\r\n    },\r\n    computed: {\r\n        filteredUserData() {\r\n            return this.vueObj.UserData.map((item) => {\r\n            const filteredItem = { ...item };\r\n\r\n            // Check if USER_EMP_ID is null or empty, then replace with '--'\r\n            if (filteredItem.USER_EMP_ID === null || filteredItem.USER_EMP_ID === '') {\r\n                filteredItem.USER_EMP_ID = '--';\r\n            }\r\n\r\n            return filteredItem;\r\n            });\r\n        },\r\n        \r\n    },\r\n    mounted() {\r\n        Schema.topsearchSchema.forEach(item => {\r\n            item.value = '';\r\n            item.isSearch = false;\r\n        })\r\n    },\r\n    methods: {\r\n        renderActions: function (row) {\r\n            var self = this;\r\n            let rtnActionArray = [];\r\n            self.listActions.forEach(actionItem => {\r\n                let action = { ...actionItem };\r\n                switch (action.title) {\r\n                    case 'Add Child':\r\n                        action.isVisible = row.ACCESS != null ? true : true;\r\n                        break;\r\n                    case 'Delete':\r\n                        action.isVisible = row.ACCESS != 1 ? true : false;\r\n                        break;\r\n                    default:\r\n                        action.isVisible = true;\r\n                        break;\r\n                }\r\n                rtnActionArray.push(action);\r\n            });\r\n            return rtnActionArray;\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            console.log(event)\r\n            switch (event.callbackfunction) {\r\n                case \"commonDeleteData\":\r\n                    this.commonDeleteData();\r\n                    break;\r\n                case \"ActiveMultipleListing\":\r\n                    this.UpdateStatus(\"Active\");\r\n                    break;\r\n                case \"InactiveMultipleListing\":\r\n                    this.UpdateStatus(\"Inactive\");\r\n                    break;\r\n                case \"AddLocation\":\r\n                    this.showLocation = true\r\n                    break;\r\n            }\r\n        },\r\n        actionButtonClick: function (callbackfunction, item, index, event) {\r\n            var vm = this;\r\n            switch (callbackfunction) {\r\n                case \"ManageLocation\":\r\n                    this.showLocation = true\r\n                    break;\r\n                case \"DeleteLocation\":\r\n                    this.singleDeleteData(item);\r\n                    break;\r\n            }\r\n        },\r\n        sortdata: async function (s) {\r\n            var SortDir = \"sort tb_headerSortDown\";\r\n            this.SortBy = s;\r\n            if (s === this.SortBy) {\r\n                if (this.SortExp == \"\") {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n                else if (this.SortExp == \"ASC\") {\r\n                    this.SortExp = \"DESC\";\r\n                    SortDir = \"sort tb_headerSortUp\";\r\n                }\r\n                else {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n            }\r\n\r\n            await this.FetchData();\r\n            $(\"#th-\" + s + '  span:first-child').attr(\"class\", SortDir);\r\n        },\r\n        pagerMethod: async function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            await this.FetchData();\r\n        },\r\n        leftCommonSearch: async function (value) {\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchCondition;\r\n            }\r\n            else {\r\n                this.searchCondition = \"\";\r\n            }\r\n\r\n            await this.FetchData();\r\n        },\r\n        ManageFolder: function () {\r\n            var vm = this;\r\n            LocationDataService.CheckPrivilege(vm.privilegeParams+'FolderListing').then((response)=>{\r\n                if(response.data){\r\n                    vm.ShowManageView = true;\r\n                    $(\"#modalManageView\").modal('show');\r\n                    setTimeout(function () {\r\n                        $(\"#modalManageView\").modal('show');\r\n                        setTimeout(function () {\r\n                            vm.SetBootstraptoolTip();\r\n                        }, 200);\r\n                    }, 1000);\r\n                    vm.$refs.managefolder?.GetViewList();\r\n                }\r\n                else{\r\n                    vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        AddDesignation: function () {\r\n            var vm = this;\r\n            console.log(vm, \"Add\");\r\n        },\r\n        singleDeleteData(item) {\r\n            var vm = this;\r\n            if (item.company_location_id != null) {\r\n                vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Report\")), function () {\r\n                    var postJSON = {\r\n                        ids: item.company_location_id,\r\n                        moduleName: \"Location\",\r\n                        subModuleCode: \"Location\",\r\n                        refCode: \"COMPANYSETUP_DELETE\"\r\n                    };\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    LocationDataService.CommonDeleteData(objectPostString).then(async function (response) {\r\n                        if (response.status == 200) {\r\n                            vm.ShowAlert(vm.$t('DeletedSuccessfully', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                            vm.PageNumber = parseInt(vm.PageNumber) - 1;\r\n                            if (vm.PageNumber <= 0) {\r\n                                vm.PageNumber = 1;\r\n                            }\r\n                            await vm.FetchData();\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                        }\r\n\r\n                    },);\r\n                });\r\n            }\r\n            else {\r\n                vm.ShowAlert(vm.$t(\"Selectanyrecordtodelete\"));\r\n            }\r\n        },\r\n        commonDeleteData: function (event) {\r\n            var vm = this;\r\n            // LocationDataService.CheckPrivilege(vm.privilegeParams+'Delete').then((response)=>{\r\n            //     if(response.data){\r\n                    var val = \"\";\r\n                    $('.chkItems:checkbox:checked').not(\"[id^='chkAll_0']\").each(function () {\r\n                        if (val.length > 0)\r\n                            val += ',';\r\n                        val += $(this).val();\r\n                    });\r\n                    if (val.length > 0) {\r\n                        vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Report\")), function () {\r\n                            var postJSON = {\r\n                                ids: val,\r\n                                moduleName: \"Location\",\r\n                                subModuleCode: \"Location\",\r\n                                refCode: \"COMPANYSETUP_DELETE\"\r\n                            };\r\n                            var objectPostString = JSON.stringify(postJSON);\r\n                            LocationDataService.CommonDeleteData(objectPostString).then(async function (response) {\r\n                                if (response.status == 200) {\r\n                                    $('.chkItems:checkbox:checked,#chkAll_0').prop(\"checked\", false).removeAttr('checked');\r\n                                    $(\"#DeleteMultiple\").addClass(\"disabled\");\r\n                                    vm.ShowAlert(vm.$t('DeletedSuccessfully', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                    vm.PageNumber = parseInt(vm.PageNumber) - 1;\r\n                                    if (vm.PageNumber <= 0) {\r\n                                        vm.PageNumber = 1;\r\n                                    }\r\n                                    await vm.FetchData();\r\n                                }\r\n                                else {\r\n                                    vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                }\r\n\r\n                            },);\r\n                        });\r\n                    }\r\n                    else {\r\n                        vm.ShowAlert(vm.$t(\"Selectanyrecordtodelete\"));\r\n                    }\r\n                // }\r\n                // else\r\n                // {\r\n                //     vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                //     return false;\r\n                // }\r\n            // })\r\n        },\r\n        UpdateStatus: async function (status) {\r\n                        var vm = this;\r\n                        if (status == 'Active') {\r\n                            status = 1001;\r\n                        } else {\r\n                            status = 1002;\r\n                        }\r\n                        var val = \"\";\r\n                        $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                            if (val.length > 0) {\r\n                                val += ',';\r\n                            }\r\n                            val += $(this).val();\r\n                        });\r\n                        if (val.length > 0) {\r\n                            vm.listheaderbuttons[1].isdisabled = false ;\r\n                            vm.listheaderbuttons[2].isdisabled = false;\r\n                            vm.confirmR(vm.$t(\"AreYouSureToUpdateStatus\"), true, (vm.$t(\"update\") + \"  \" + vm.$t(\"status\")), function () {\r\n                                // Send IDs as a comma-separated string\r\n                                var postJSON = {\r\n                                    ID: val,\r\n                                    StatusId: status,\r\n                                    IsFor: \"COMPANYSETUP_UPDATE\",\r\n                                    Module: \"Location\",\r\n                                    Submodule: \"Location\",\r\n                                };\r\n            \r\n                                var objectPostString = JSON.stringify(postJSON);\r\n                                console.log(objectPostString);\r\n                                LocationDataService.CommonUpdateStatus(objectPostString).then(response => {\r\n                                    if (response.status == 200) {\r\n                                        $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                                        vm.ShowAlert(vm.$t('RecordUpdatedSuccessfully', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                        vm.FetchData();\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                    },\r\n        getRequestParams: function (pageNumber, pageSize, sortBy, sortExp, isPaged, searchcondition) {\r\n            let params = {};\r\n            if (pageNumber) { params[\"pageNumber\"] = pageNumber; }\r\n            if (searchcondition) { params[\"searchcondition\"] = searchcondition; }\r\n            if (isPaged) { params[\"is_paged\"] = isPaged; }\r\n            if (sortBy) { params[\"sortBy\"] = sortBy; }\r\n            if (sortExp) { params[\"sortExp\"] = sortExp; }\r\n            if (pageSize) { params[\"pageSize\"] = pageSize; }\r\n            return params;\r\n        },\r\n        clickEventOfColumn: function (row, column) {\r\n            if(column.COLUMN_NAME == 'title'){\r\n                this.recordId =row.id\r\n                this.showAnnouncementMessagage = true\r\n            }\r\n            if (column.COLUMN_NAME == 'USERNAME') {\r\n                this.$router.push({ name: 'viewcustomreport', params: { ReportID: row.REPORT_ID, ACCESS: row.ACCESS } });\r\n            }\r\n        },\r\n        FetchData: async function () {\r\n            // const params = this.getRequestParams(this.pageNumber, this.pageSize, this.sortBy, this.sortExp, this.isPaged, this.searchCondition);\r\n            var vueObj = this;\r\n            this.isLoading = true;\r\n            var url=`CompanyId=${vueObj.CompanyId}&pageSize=${vueObj.PageSize}&pageNum=${vueObj.PageNumber}&sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}&searchQuery=${vueObj.searchCondition.trim()}`;\r\n            await LocationDataService.LocationListing(url)\r\n                .then(function (response) {\r\n                    vueObj.Headers = response.data.FieldSchema;\r\n                    const filteredColumnNames = [\"location_name\", \"emailid\",\"location_address1\", \"location_phone1\", \"Location_Code\", \"status_id\"];\r\n                    // Filter the original list based on the desired COLUMN_NAME values\r\n                    vueObj.filteredHeaders =  vueObj.Headers.filter(obj => filteredColumnNames.includes(obj.COLUMN_NAME));\r\n                    vueObj.filteredHeaders.forEach((column) => {\r\n                        column.settings = null;\r\n                        if (column.COLUMN_NAME == \"title\") {\r\n                            column.settings = {\r\n                                clickEvent: vueObj.clickEventOfColumn,\r\n                                formatter: vueObj.columnDataFormatter,\r\n                            };\r\n                        }                        \r\n                        if (column.COLUMN_NAME == \"status_id\") {\r\n                            column.settings = {\r\n                                isInSlot: true\r\n                            };\r\n                        }\r\n                    });\r\n                    // &searchCondition=${vueObj.searchCondition}&isPaged=${vueObj.isPaged}&sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}\r\n                    if (response.data.Data != \"\" && response.data.Data != null) {\r\n                        if (response.data.Data.length > 0) {\r\n                            vueObj.LocationData = response.data.Data;\r\n                            vueObj.LocationData.forEach(item => {\r\n                                item.created_by = JSON.parse(item.created_by);\r\n                                item.modified_by = JSON.parse(item.modified_by);\r\n                                item.status_id = JSON.parse(item.status_id);\r\n                            });\r\n                            \r\n                            vueObj.TotalRecords = vueObj.LocationData[0].total_records;\r\n                            vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                            vueObj.CurrentPage = vueObj.PageNumber;\r\n                            vueObj.noRecord = false;\r\n                            vueObj.listheaderbuttons[1].isdisabled = true ;\r\n                            vueObj.listheaderbuttons[2].isdisabled = true;\r\n                        } else {\r\n                            vueObj.LocationData = [];\r\n                            vueObj.noRecord = true;\r\n                            vueObj.TotalRecords = 0\r\n                        }\r\n                        if (localStorage.SavedParameters != undefined) {\r\n                            localStorage.removeItem(\"SavedParameters\");\r\n                        }\r\n                    }\r\n                    else {\r\n                        vueObj.noRecord = true;\r\n                        vueObj.LocationData = [];\r\n                        vueObj.TotalRecords = 0\r\n                        vueObj.listheaderbuttons[1].isdisabled = true ;\r\n                        vueObj.listheaderbuttons[2].isdisabled = true;\r\n                    }\r\n                    setTimeout(function () {\r\n                        vueObj.ResponsiveDataTable('tablelistingdata')\r\n                    }, 500);\r\n                    vueObj.isLoading = false;\r\n            });\r\n        },\r\n\r\n        closeModalSharePopup: function () {\r\n            $(\"#modalshareview\").modal('hide');\r\n            this.showsharereportview = false;\r\n        },\r\n        getStatuslistForListing: function (StatusType, lang) {\r\n            var vm = this;\r\n            var url =\"langCode=\" + lang + \"&statusType=\" + StatusType + \"&hasglobal=true\";\r\n                LocationDataService.statusdropdown(url).then(function (response) {\r\n                if (response.data.status == \"Success\") {\r\n                    var json = response.data.result;\r\n                    vm.StatusListForListing = json.data;\r\n                }\r\n            });\r\n        },\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=56861fc3\"\nimport script from \"./List.vue?vue&type=script&lang=js\"\nexport * from \"./List.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}