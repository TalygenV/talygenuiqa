{"version":3,"sources":["webpack:///./src/views/Company/CurrencyManagement/List.vue?d1b5","webpack:///./src/views/Company/CurrencyManagement/CurrencyManagementSchema.js","webpack:///src/views/Company/CurrencyManagement/List.vue","webpack:///./src/views/Company/CurrencyManagement/List.vue?4379","webpack:///./src/views/Company/CurrencyManagement/List.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isLoading","staticClass","$t","CurrencyManagementData","filteredHeaders","listheaderbuttons","TotalRecords","topSearchFields","renderActions","FetchData","searchCondition","on","leftCommonSearch","pagerMethod","commonHeaderButtonClick","actionButtonClick","sortdata","scopedSlots","_u","key","fn","ref","data","column","COLUMN_NAME","isCRMShowStausDrop","row","status_id","currency_log_id","StatusListForListing","value","_e","recordId","$event","showCurrencyManagement","staticRenderFns","buttons","title","iconClass","callbackfunction","additionalClass","isdisabled","isvisible","checkPrivilege","id","topsearchSchema","fieldName","fieldType","fieldIcon","fieldSearchConditionName","isSearch","listOptions","listActions","icon","additionalSpan","href","CurrencybindCommondropdown","vm","url","CurrencyManagementDataService","CurrencyManagementCurrencyDropdown","then","response","result","length","forEach","element","Obj","CURRENCY_ID","name","CURRENCY","push","bindleftCommonSearchdropdown","ths","modulename","filtername","params","GetMainReportSearching","console","log","leftsearchSchema","json","leftSearchFields","map","item","container","FOLDER_NAME","FOLDER_ID","toString","LeadStatusList","items","CREATED_BY","CREATED_ID","values","MODIFIED_BY","MODIFIED_ID","dataval","components","LeftColumn","AddCompanySetup","props","sourcetype","type","String","required","noRecord","CompanyId","Schema","ShowManageView","ShowAddCustomReportView","PageSize","PageNumber","isPaged","TotalPages","conditionForInstantSearch","SortBy","SortExp","showsharereportview","showemailreportview","showschedulereportview","ReportID","reportname","reportid","foldername","folderid","searchcondition","MODULENAME","SUBMODULECODE","privilegeParams","sharetype","STATUS","STATUS_ID","STATUS_COLOR","STATUS_BG_COLOR","GetUserInfo","getStatuslistForListing","computed","filteredUserData","vueObj","UserData","filteredItem","USER_EMP_ID","mounted","methods","event","commonDeleteData","UpdateStatus","index","CheckPrivilege","ShowAlert","REPORT_ID","REPORTNAME","$","modal","setTimeout","SetBootstraptoolTip","sendemail","editreport","setschedule","ViewReport","ACCESS","$router","Modulename","Submodulecode","ReportName","Module_Id","MODULE_ID","Folder_Id","Sub_Module_Id","Version","Action","FolderID","btoa","JSON","stringify","s","SortDir","attr","ManageFolder","_vm$$refs$managefolde","$refs","managefolder","GetViewList","AddDesignation","val","not","each","confirmR","postJSON","ids","moduleName","subModuleCode","refCode","objectPostString","CommonDeleteData","status","prop","removeAttr","addClass","parseInt","ID","StatusId","IsFor","Module","Submodule","CommonUpdateStatus","getRequestParams","pageNumber","pageSize","sortBy","sortExp","clickEventOfColumn","trim","CurrencyManagementListing","Headers","FieldSchema","filteredColumnNames","filter","obj","includes","settings","clickEvent","formatter","columnDataFormatter","isInSlot","Data","created_by","parse","modified_by","total_records","Math","ceil","CurrentPage","ReportData","undefined","localStorage","SavedParameters","removeItem","ResponsiveDataTable","closeModalSharePopup","StatusType","lang","statusdropdown","component"],"mappings":"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","file":"js/chunk-2d0d7be7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-2 mt-2\"},[_c('LeftColumn')],1),_c('div',{staticClass:\"col-10\"},[_c('tg-list',{attrs:{\"IsShowAction\":false,\"showCheckBox\":true,\"ModuleName\":\"Dynamic_Reporting\",\"SubModuleCode\":\"Dynamic_Reporting\",\"IdentityColumn\":\"currency_log_id\",\"HeaderText\":_vm.$t('CurrencyManagement'),\"ListData\":_vm.CurrencyManagementData,\"HeaderData\":_vm.filteredHeaders,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"IsSearchFieldsOnTop\":false,\"SearchPosition\":\"top\",\"SearchFields\":_vm.topSearchFields,\"RenderRowActionMethod\":_vm.renderActions,\"ListDataCallBackFunction\":_vm.FetchData,\"IsFilterApplied\":_vm.searchCondition ? true : false,\"LegendArray\":[],\"sourcetype\":\"\",\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"ActionButtonClick\":_vm.actionButtonClick,\"SortdataButtonClick\":_vm.sortdata},scopedSlots:_vm._u([{key:\"slotdata\",fn:function(ref){\nvar data = ref.data;\nreturn [(data.column.COLUMN_NAME == 'status_id')?[(_vm.isCRMShowStausDrop(data.row.status_id, 'COMPANYSETUP_UPDATE'))?_c('listing-status',{ref:\"updatestatus\",attrs:{\"isfor\":'COMPANYSETUP_UPDATE',\"dataid\":data.row.currency_log_id,\"data-controller\":\"COMPANYSETUP_UPDATE\",\"statuslist\":_vm.StatusListForListing,\"item\":data.row.currency_log_id,\"data-action\":\"index\",\"module\":\"CurrencyManagement\",\"subModule\":\"CurrencyManagement\",\"dataselected\":data.row.status_id.value == 1001 ? 'Active' : 'Inactive',\"callbackfunction\":_vm.FetchData,\"isselectedvaluestring\":true}}):_vm._e()]:_vm._e()]}}])})],1)]),(_vm.showCurrencyManagement)?_c('AddCompanySetup',{attrs:{\"recordId\":_vm.recordId,\"title\":_vm.$t('CAManageCurrencyManagement'),\"moduleName\":'CurrencyManagement',\"emitName\":'addReloadData',\"addApiUrl\":'/CurrencyManagement/add',\"subModule\":'CurrencyManagement'},on:{\"close\":function($event){_vm.showCurrencyManagement=false;_vm.recordId=0},\"addReloadData\":function($event){_vm.FetchData();_vm.showCurrencyManagement=false;_vm.recordId=0}}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import CurrencyManagementDataService from \"@/services/DataService\";\r\nlet buttons =\r\n    [\r\n    {\r\n        title: 'Add',\r\n        iconClass: 'fa-plus',\r\n        callbackfunction: 'AddDepartment',\r\n        additionalClass: '',\r\n        isdisabled: false,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'ActiveMultiple',\r\n        title: 'Active',\r\n        iconClass: 'fa-check',\r\n        callbackfunction: 'ActiveMultipleListing',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'InactiveMultiple',\r\n        title: 'Inactive',\r\n        iconClass: 'fa-close',\r\n        callbackfunction: 'InactiveMultipleListing',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'DeleteMultiple',\r\n        title: 'Delete',\r\n        iconClass: 'fa-trash-o',\r\n        callbackfunction: 'commonDeleteData',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n    }\r\n    ];\r\nlet topsearchSchema = [\r\n    // {\r\n    //     fieldName: 'Search by Title',\r\n    //     fieldType: \"text\",\r\n    //     // fieldIcon: \"fa-file\",\r\n    //     fieldSearchConditionName: ['title'],\r\n    //     isSearch: true,\r\n    //     // value: \"\",\r\n    //     // listOptions: []\r\n    // },\r\n    {\r\n        fieldName: \"source_currency_id\",\r\n        fieldType: \"ddl-check\",\r\n        fieldIcon: \"fa-map-marker\",\r\n        // paramName:\"LocationId\",\r\n        fieldSearchConditionName: [],\r\n        isSearch: false,\r\n        value: null,\r\n        listOptions: [\r\n        ]\r\n    },\r\n];\r\nlet listActions = [\r\n    {\r\n        title: 'View',\r\n       // href: '/viewcustomreport',\r\n        callbackfunction: 'ViewReport',\r\n        icon: 'fa fa-eye action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Edit',\r\n        // href: '/CRM/ManageLead/{lead_id}/Yes/CRM/CRM_LEADS',\r\n        callbackfunction: 'editreport',\r\n        icon: 'fa fa-pencil text-success action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Send Email',\r\n        callbackfunction: 'sendemail',\r\n        href: 'javascript:void(0)',\r\n        icon: 'fa fa-paper-plane text-success action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Schedule',\r\n        callbackfunction: 'setschedule',\r\n        href: 'javascript:void(0)',\r\n        icon: 'fa fa-clock-o text-warning action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Share',\r\n        callbackfunction: 'sharereport',\r\n        href: 'javascript:void(0)',\r\n        icon: 'fa fa-share-alt text-success action-icon',\r\n        additionalSpan: ''\r\n    },\r\n];\r\n\r\nfunction CurrencybindCommondropdown(){\r\n    debugger;\r\n    var vm = this;\r\n    //var url=`RequestFrom=${'CURRENCIES_LIST'}`;\r\n    var url = `id=&moduleName=CurrencyManagement&type=${'CURRENCIES_LIST'}&search=&refId=`;\r\n    CurrencyManagementDataService.CurrencyManagementCurrencyDropdown(url)\r\n        .then(function (response) {\r\n            if (response.data.result != \"\" && response.data.result != null) {\r\n                if (response.data.result.length > 0) {\r\n                    // var LocationData=response.data.result;\r\n                    response.data.result.forEach(element => {                        \r\n                        let Obj={\r\n                            value:element.CURRENCY_ID,\r\n                            name:element.CURRENCY\r\n                        }\r\n                        vm.topsearchSchema[0].listOptions.push(Obj);\r\n                    });\r\n                }\r\n                \r\n            }\r\n        });\r\n}\r\n\r\nfunction bindleftCommonSearchdropdown(ths, modulename, filtername) {\r\n    var vm = ths;\r\n    let url=filtername;\r\n    let params = {};\r\n    params[\"moduleName\"] = modulename; \r\n    params[\"type\"] = filtername\r\n    CurrencyManagementDataService.GetMainReportSearching(url)\r\n        .then(function (response) {\r\n            console.log(leftsearchSchema);\r\n            var json = response.data;\r\n            console.log('folderid', json);\r\n            if (json != null) {\r\n                if (filtername == \"FOLDER_NAME\") {\r\n                        vm.leftSearchFields[4].listOptions =json.map((item) => {\r\n                        const container = {};                    \r\n                        container.name = item.FOLDER_NAME;\r\n                        container.value = item.FOLDER_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((items) => {\r\n                        const container = {};                    \r\n                        container.name = items.FOLDER_NAME;\r\n                        container.value = items.FOLDER_ID.toString();                    \r\n                        return container;\r\n                    })                    \r\n                }  \r\n                if (filtername == \"CREATED_BY\") {\r\n                        vm.leftSearchFields[3].listOptions =json.map((value) => {\r\n                        const container = {};                    \r\n                        container.name = value.CREATED_BY;\r\n                        container.value = value.CREATED_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((values) => {\r\n                        const container = {};                    \r\n                        container.name = values.CREATED_BY;\r\n                        container.value = values.CREATED_ID.toString();                    \r\n                        return container;\r\n                    }) \r\n                } \r\n                if (filtername == \"MODIFIED_BY\") {\r\n                        vm.leftSearchFields[7].listOptions =json.map((data) => {\r\n                        const container = {};                    \r\n                        container.name = data.MODIFIED_BY;\r\n                        container.value = data.MODIFIED_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((dataval) => {\r\n                        const container = {};                    \r\n                        container.name = dataval.MODIFIED_BY;\r\n                        container.value = dataval.MODIFIED_ID.toString();                    \r\n                        return container;\r\n                    }) \r\n                }   \r\n               \r\n\r\n            }\r\n        \r\n    });\r\n}\r\nexport default { buttons, topsearchSchema, listActions, bindleftCommonSearchdropdown, CurrencybindCommondropdown };\r\n","<template>\r\n    <div>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"row\">\r\n            <div class=\"col-2 mt-2\">\r\n                <LeftColumn />\r\n            </div>\r\n            <div class=\"col-10\">\r\n                <tg-list :IsShowAction=\"false\" :showCheckBox=\"true\" ModuleName=\"Dynamic_Reporting\" SubModuleCode=\"Dynamic_Reporting\"\r\n                    IdentityColumn=\"currency_log_id\" :HeaderText=\"$t('CurrencyManagement')\" :ListData=\"CurrencyManagementData\" :HeaderData=\"filteredHeaders\"\r\n                    :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecords\" :IsSearchFieldsOnTop=\"false\"\r\n                    SearchPosition=\"top\" :SearchFields=\"topSearchFields\"\r\n                    :RenderRowActionMethod=\"renderActions\" :ListDataCallBackFunction=\"FetchData\"\r\n                    :IsFilterApplied=\"searchCondition ? true : false\" v-on:LeftsearchButtonClick=\"leftCommonSearch\" :LegendArray=\"[]\" sourcetype=\"\"\r\n                    v-on:PagerButtonClick=\"pagerMethod\" v-on:HeaderButtonClick=\"commonHeaderButtonClick\"\r\n                    v-on:ActionButtonClick=\"actionButtonClick\" v-on:SortdataButtonClick=\"sortdata\" :NorecordfoundText=\"$t('NoRecordfound')\">\r\n                \r\n                    <template v-slot:slotdata=\"{ data }\">\r\n                        <template v-if=\"data.column.COLUMN_NAME == 'status_id'\"> \r\n                            <listing-status :isfor=\"'COMPANYSETUP_UPDATE'\" v-if=\"isCRMShowStausDrop(data.row.status_id, 'COMPANYSETUP_UPDATE')\"\r\n                                ref=\"updatestatus\" v-bind:dataid=\"data.row.currency_log_id\" data-controller=\"COMPANYSETUP_UPDATE\"\r\n                                v-bind:statuslist=\"StatusListForListing\" v-bind:item=\"data.row.currency_log_id\" data-action=\"index\" module=\"CurrencyManagement\" subModule=\"CurrencyManagement\"\r\n                                v-bind:dataselected=\"data.row.status_id.value == 1001 ? 'Active' : 'Inactive'\"\r\n                                v-bind:callbackfunction=\"FetchData\" v-bind:isselectedvaluestring=\"true\">\r\n                            </listing-status>\r\n                        </template>\r\n                    </template>\r\n                </tg-list>\r\n            </div>\r\n        </div>\r\n        <!---modal popup-->\r\n        <AddCompanySetup :recordId=\"recordId\" :title=\"$t('CAManageCurrencyManagement')\" v-if=\"showCurrencyManagement\" v-on:close=\"showCurrencyManagement=false;recordId=0\" v-on:addReloadData=\"FetchData();showCurrencyManagement=false;recordId=0\" v-bind:moduleName=\"'CurrencyManagement'\" v-bind:emitName=\"'addReloadData'\" v-bind:addApiUrl=\"'/CurrencyManagement/add'\" v-bind:subModule=\"'CurrencyManagement'\" />\r\n    </div>\r\n</template>\r\n<script>\r\nimport CurrencyManagementDataService from \"@/services/DataService\";\r\nimport Schema from \"@/views/Company/CurrencyManagement/CurrencyManagementSchema\";\r\nimport AddCompanySetup from \"@/components/Modals/AddCompanySetup.vue\";\r\nimport LeftColumn from \"../LeftColumn.vue\";\r\nexport default {\r\n    components: {\r\n        LeftColumn,\r\n        AddCompanySetup,\r\n    },\r\n    props: {\r\n        sourcetype:\r\n        {\r\n            type: String,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            recordId:0,\r\n            showCurrencyManagement:false,\r\n            noRecord:false,\r\n            isLoading: false,\r\n            CompanyId: null,\r\n            CurrencyManagementData: [],\r\n            TotalRecords: 0,\r\n            listheaderbuttons: Schema.buttons,\r\n            topSearchFields: Schema.topsearchSchema,\r\n            ShowManageView: false,\r\n            ShowAddCustomReportView: false,\r\n            PageSize: 10,\r\n            PageNumber: 1,\r\n            isPaged: 1,\r\n            TotalPages: 0,\r\n            listActions: Schema.listActions,\r\n            searchCondition: '',\r\n            conditionForInstantSearch: \"\",\r\n            SortBy: '',\r\n            SortExp: '',\r\n            showsharereportview: false,\r\n            showemailreportview: false,\r\n            showschedulereportview: false,\r\n            ReportID: null,\r\n            reportname: '',\r\n            reportid: '',\r\n            foldername: '',\r\n            folderid: '',\r\n            LeadStatusList: [],\r\n            searchcondition: '',\r\n            MODULENAME: null,\r\n            SUBMODULECODE: null,\r\n            privilegeParams: null,\r\n            sharetype: '',\r\n            // Headers: [],\r\n            filteredHeaders: [],\r\n            StatusListForListing: [\r\n                { \r\n                    STATUS: 'Active', \r\n                    STATUS_ID: 1001, \r\n                    STATUS_COLOR: \"#ffffff\", \r\n                    STATUS_BG_COLOR: \"#28a745\" \r\n                },{ \r\n                    STATUS: 'Inactive', \r\n                    STATUS_ID: 1002, \r\n                    STATUS_COLOR: \"#ffffff\", \r\n                    STATUS_BG_COLOR: \"#d72435\"\r\n                }\r\n            ],\r\n        }\r\n    },\r\n    async created() {\r\n        var ths = this;\r\n        ths.CompanyId = ths.GetUserInfo.CompanyId;\r\n        ths.privilegeParams = `controller=CurrencyManagement&action=`;\r\n        await ths.FetchData();\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'FOLDER_NAME')\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'CREATED_BY')\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'MODIFIED_BY')\r\n        ths.getStatuslistForListing(\"Dynamic_Reporting\", \"en\");\r\n    },\r\n    computed: {\r\n        filteredUserData() {\r\n            return this.vueObj.UserData.map((item) => {\r\n            const filteredItem = { ...item };\r\n\r\n            // Check if USER_EMP_ID is null or empty, then replace with '--'\r\n            if (filteredItem.USER_EMP_ID === null || filteredItem.USER_EMP_ID === '') {\r\n                filteredItem.USER_EMP_ID = '--';\r\n            }\r\n\r\n            return filteredItem;\r\n            });\r\n        },\r\n        \r\n    },\r\n    mounted() {\r\n        Schema.topsearchSchema.forEach(item => {\r\n            item.value = '';\r\n            item.isSearch = false;\r\n        })\r\n    },\r\n    methods: {\r\n        renderActions: function (row) {\r\n            console.log(row);\r\n            // var self = this;\r\n            // let rtnActionArray = [];\r\n            // self.listActions.forEach(actionItem => {\r\n            //     let action = { ...actionItem };\r\n            //     switch (action.title) {\r\n            //         case 'View':\r\n            //             action.isVisible = row.ACCESS != null ? true : true;\r\n            //             break;\r\n            //         case 'Send Email':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Schedule':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Share':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Edit':\r\n            //             action.isVisible = row.ACCESS != 1 ? true : false;\r\n            //             break;\r\n            //         default:\r\n            //             action.isVisible = true;\r\n            //             break;\r\n            //     }\r\n            //     rtnActionArray.push(action);\r\n            // });\r\n            // return rtnActionArray;\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            console.log(event)\r\n            switch (event.callbackfunction) {\r\n                case \"commonDeleteData\":\r\n                    this.commonDeleteData();\r\n                    break;\r\n                case \"ActiveMultipleListing\":\r\n                    this.UpdateStatus(\"Active\");\r\n                    break;\r\n                case \"InactiveMultipleListing\":\r\n                    this.UpdateStatus(\"Inactive\");\r\n                    break;\r\n                case \"AddDepartment\":\r\n                    this.showCurrencyManagement = true\r\n                    break;\r\n            }\r\n        },\r\n        actionButtonClick: function (callbackfunction, item, index, event) {\r\n            var vm = this;\r\n            switch (callbackfunction) {\r\n                case 'sharereport':\r\n                    var vm = this;\r\n                    CurrencyManagementDataService.CheckPrivilege(vm.privilegeParams+'ShareReport').then((response)=>{\r\n                        if(response.data){\r\n                            vm.sharetype = callbackfunction\r\n                            vm.folderid = item.FOLDER_ID;\r\n                            vm.ReportID = item.REPORT_ID;\r\n                            vm.foldername = item.REPORTNAME;\r\n                            vm.showsharereportview = true;\r\n                            $(\"#modalshareview\").modal('show');\r\n                            setTimeout(function () {\r\n                                $(\"#modalshareview\").modal('show');\r\n                                setTimeout(function () {\r\n                                    vm.SetBootstraptoolTip();\r\n                                }, 200);\r\n                            }, 1000);\r\n                        }\r\n                        else{\r\n                            vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                            return false;\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'sendemail':\r\n                    vm.sendemail(item.REPORT_ID, item.MODULENAME, item.SUBMODULECODE);\r\n                    break;\r\n                case 'editreport':\r\n                    vm.editreport(item);\r\n                    break;\r\n                case 'setschedule':\r\n                    vm.setschedule(item.REPORT_ID);\r\n                    break;\r\n                case 'ViewReport':\r\n                    vm.ViewReport(item.REPORT_ID, item.ACCESS, item.FOLDER_ID);\r\n                    break;\r\n            }\r\n        },\r\n        editreport: function (data) {\r\n            var vm = this;\r\n            CurrencyManagementDataService.CheckPrivilege(vm.privilegeParams+'Update').then((response)=>{\r\n                if(response.data){\r\n                    vm.$router.push({\r\n                        name: 'EditDataReport',\r\n                        params: {\r\n                            Modulename: data.MODULENAME, Submodulecode: data.SUBMODULECODE, ReportName: data.REPORTNAME, ReportID: data.REPORT_ID,\r\n                            Module_Id: data.MODULE_ID, Folder_Id: data.FOLDER_ID, Sub_Module_Id: data.Sub_Module_Id, Version: vm.Version, Action: 'Edit'\r\n                        }\r\n                    });\r\n                }\r\n                else{\r\n                    vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        ViewReport: function (ReportID, ACCESS, FolderID) {\r\n            var vm = this;\r\n            vm.$router.push('/Report/viewcustomreport/' + btoa(JSON.stringify({ ReportID: ReportID, ACCESS: ACCESS , Folder_Id: FolderID })))\r\n\r\n        },\r\n        sortdata: async function (s) {\r\n            var SortDir = \"sort tb_headerSortDown\";\r\n            this.SortBy = s;\r\n            if (s === this.SortBy) {\r\n                if (this.SortExp == \"\") {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n                else if (this.SortExp == \"ASC\") {\r\n                    this.SortExp = \"DESC\";\r\n                    SortDir = \"sort tb_headerSortUp\";\r\n                }\r\n                else {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n            }\r\n\r\n            await this.FetchData();\r\n            $(\"#th-\" + s + '  span:first-child').attr(\"class\", SortDir);\r\n        },\r\n        pagerMethod: async function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            await this.FetchData();\r\n        },\r\n        leftCommonSearch: async function (value) {\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchCondition;\r\n            }\r\n            else {\r\n                this.searchCondition = \"\";\r\n            }\r\n\r\n            await this.FetchData();\r\n        },\r\n        ManageFolder: function () {\r\n            var vm = this;\r\n            CurrencyManagementDataService.CheckPrivilege(vm.privilegeParams+'FolderListing').then((response)=>{\r\n                if(response.data){\r\n                    vm.ShowManageView = true;\r\n                    $(\"#modalManageView\").modal('show');\r\n                    setTimeout(function () {\r\n                        $(\"#modalManageView\").modal('show');\r\n                        setTimeout(function () {\r\n                            vm.SetBootstraptoolTip();\r\n                        }, 200);\r\n                    }, 1000);\r\n                    vm.$refs.managefolder?.GetViewList();\r\n                }\r\n                else{\r\n                    vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        AddDesignation: function () {\r\n            var vm = this;\r\n            console.log(vm, \"Add\");\r\n        },\r\n        commonDeleteData: function (event) {\r\n            var vm = this;\r\n            // CurrencyManagementDataService.CheckPrivilege(vm.privilegeParams+'Delete').then((response)=>{\r\n            //     if(response.data){\r\n                    var val = \"\";\r\n                    $('.chkItems:checkbox:checked').not(\"[id^='chkAll_0']\").each(function () {\r\n                        if (val.length > 0)\r\n                            val += ',';\r\n                        val += $(this).val();\r\n                    });\r\n                    if (val.length > 0) {\r\n                        vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Report\")), function () {\r\n                            var postJSON = {\r\n                                ids: val,\r\n                                moduleName: \"CurrencyManagement\",\r\n                                subModuleCode: \"CurrencyManagement\",\r\n                                refCode: \"COMPANYSETUP_DELETE\"\r\n                            };\r\n                            var objectPostString = JSON.stringify(postJSON);\r\n                            CurrencyManagementDataService.CommonDeleteData(objectPostString).then(async function (response) {\r\n                                if (response.status == 200) {\r\n                                    $('.chkItems:checkbox:checked,#chkAll_0').prop(\"checked\", false).removeAttr('checked');\r\n                                    $(\"#DeleteMultiple\").addClass(\"disabled\");\r\n                                    vm.ShowAlert(vm.$t('DeletedSuccessfully', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                    vm.PageNumber = parseInt(vm.PageNumber) - 1;\r\n                                    if (vm.PageNumber <= 0) {\r\n                                        vm.PageNumber = 1;\r\n                                    }\r\n                                    await vm.FetchData();\r\n                                }\r\n                                else {\r\n                                    vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                }\r\n\r\n                            },);\r\n                        });\r\n                    }\r\n                    else {\r\n                        vm.ShowAlert(vm.$t(\"Selectanyrecordtodelete\"));\r\n                    }\r\n            //     }\r\n            //     else\r\n            //     {\r\n            //         vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n            //         return false;\r\n            //     }\r\n            // })\r\n        },\r\n        UpdateStatus: async function (status) {\r\n            var vm = this;\r\n            if (status == 'Active') {\r\n                status = 1001;\r\n            } else {\r\n                status = 1002;\r\n            }\r\n            var val = \"\";\r\n            $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                if (val.length > 0) {\r\n                    val += ',';\r\n                }\r\n                val += $(this).val();\r\n            });\r\n            if (val.length > 0) {\r\n                vm.confirmR(vm.$t(\"AreYouSureToUpdateStatus\"), true, (vm.$t(\"update\") + \"  \" + vm.$t(\"status\")), function () {\r\n                    // Send IDs as a comma-separated string\r\n                    var postJSON = {\r\n                        ID: val,\r\n                        StatusId: status,\r\n                        IsFor: \"COMPANYSETUP_UPDATE\",\r\n                        Module: \"CurrencyManagement\",\r\n                        Submodule: \"CurrencyManagement\",\r\n                    };\r\n\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    console.log(objectPostString);\r\n                    CurrencyManagementDataService.CommonUpdateStatus(objectPostString).then(response => {\r\n                        if (response.status == 200) {\r\n                            $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                            vm.ShowAlert(vm.$t('RecordUpdatedSuccessfully', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                            vm.FetchData();\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        getRequestParams: function (pageNumber, pageSize, sortBy, sortExp, isPaged, searchcondition) {\r\n            let params = {};\r\n            if (pageNumber) { params[\"pageNumber\"] = pageNumber; }\r\n            if (searchcondition) { params[\"searchcondition\"] = searchcondition; }\r\n            if (isPaged) { params[\"is_paged\"] = isPaged; }\r\n            if (sortBy) { params[\"sortBy\"] = sortBy; }\r\n            if (sortExp) { params[\"sortExp\"] = sortExp; }\r\n            if (pageSize) { params[\"pageSize\"] = pageSize; }\r\n            return params;\r\n        },\r\n        clickEventOfColumn: function (row, column) {\r\n            if (column.COLUMN_NAME == 'title') {\r\n                this.recordId = row.currency_log_id\r\n                this.showCurrencyManagement = true\r\n            }\r\n            if (column.COLUMN_NAME == 'USERNAME') {\r\n                this.$router.push({ name: 'viewcustomreport', params: { ReportID: row.REPORT_ID, ACCESS: row.ACCESS } });\r\n            }\r\n        },\r\n        FetchData: async function () {\r\n            // const params = this.getRequestParams(this.pageNumber, this.pageSize, this.sortBy, this.sortExp, this.isPaged, this.searchCondition);\r\n            var vueObj = this;\r\n            this.isLoading = true;\r\n            // params.pageSize = vueObj.PageSize;\r\n            // params.pageNumber = vueObj.PageNumber;\r\n            // params.searchCondition = vueObj.searchCondition;\r\n            // if (vueObj.PageNumber) { params.pageNumber = vueObj.PageNumber; }\r\n            // else { vueObj.PageNumber = params.pageNumber = 1; }\r\n            // if (typeof vueObj.isPaged != 'undefined') { params.isPaged = vueObj.isPaged; }\r\n            // else { vueObj.isPaged = params.isPaged = 1; }\r\n            // params.isPaged = vueObj.isPaged;\r\n            // params.sortBy = vueObj.SortBy;\r\n            // params.sortExp = vueObj.SortExp;\r\n            // var srchCondition = \"\";\r\n            // vueObj.TotalRecords = vueObj.TotalRecords - 1;\r\n            // if (!this.isBlank(this.searchCondition)) { srchCondition = srchCondition + this.searchCondition; }\r\n            // if (!this.isBlank(this.conditionForInstantSearch)) {\r\n            //     srchCondition = srchCondition + ((!this.isBlank(this.searchCondition)) ? (\" AND \" + this.conditionForInstantSearch) : this.conditionForInstantSearch);\r\n            // }\r\n            var url=`CompanyId=${vueObj.CompanyId}&pageSize=${vueObj.PageSize}&pageNum=${vueObj.PageNumber}&sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}&searchQuery=${vueObj.searchCondition.trim()}`;\r\n            await CurrencyManagementDataService.CurrencyManagementListing(url)\r\n                .then(function (response) {\r\n                    vueObj.Headers = response.data.FieldSchema;\r\n                    const filteredColumnNames = [\"source_currency_id\", \"destination_currency_id\", \"currency_rate\", \"Automatic\"];\r\n                    // Filter the original list based on the desired COLUMN_NAME values\r\n                    vueObj.filteredHeaders =  vueObj.Headers.filter(obj => filteredColumnNames.includes(obj.COLUMN_NAME));\r\n                    vueObj.filteredHeaders.forEach((column) => {\r\n                        column.settings = null;\r\n                        if (column.COLUMN_NAME == \"title\") {\r\n                            column.settings = {\r\n                                clickEvent: vueObj.clickEventOfColumn,\r\n                                formatter: vueObj.columnDataFormatter,\r\n                            };\r\n                        }                        \r\n                        if (column.COLUMN_NAME == \"status_id\") {\r\n                            column.settings = {\r\n                                isInSlot: true\r\n                            };\r\n                        }\r\n                    });\r\n                    // &searchCondition=${vueObj.searchCondition}&isPaged=${vueObj.isPaged}&sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}\r\n                    if (response.data.Data != \"\" && response.data.Data != null) {\r\n                        if (response.data.Data.length > 0) {\r\n                            vueObj.CurrencyManagementData = response.data.Data;\r\n                            vueObj.CurrencyManagementData.forEach(item => {\r\n                                item.created_by = JSON.parse(item.created_by);\r\n                                item.modified_by = JSON.parse(item.modified_by);\r\n                                item.status_id = JSON.parse(item.status_id);\r\n                                //item.source_currency_id = JSON.parse(item.source_currency_id).CURRENCY;\r\n                                //item.source_currency_id = JSON.parse(item.destination_currency_id).CURRENCY\r\n                            });\r\n                            // console.log(vueObj.UserData.map((item) => item.USER_EMP_ID), \"EMPID\");\r\n                            // vueObj.UserData.forEach(ritem => {\r\n                            //     if (ritem.ACCESS == 1 || ritem.ACCESS == 2) {\r\n                            //         ritem.isCheckBoxDisabled = true;\r\n                            //     } else { ritem.isCheckBoxDisabled = false }\r\n                            //     if (ritem.ACCESS == null) { ritem.ACCESS = 0 }\r\n                            //     ritem.rowDetailsUrl = '';\r\n                            //     // if (ritem.rowDetailsUrl == '') {\r\n                            //     //     // ritem.rowDetailsUrl='/viewcustomreport/' + ritem.REPORT_ID +'/'+ ritem.ACCESS;\r\n                            //     //     ritem.rowDetailsUrl = '/Report/viewcustomreport/' + btoa(JSON.stringify({ ReportID: ritem.REPORT_ID, ACCESS: ritem.ACCESS, Folder_Id: ritem.FOLDER_ID }));\r\n                            //     // }\r\n                            // })\r\n                            vueObj.TotalRecords = vueObj.CurrencyManagementData[0].total_records;\r\n                            vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                            vueObj.CurrentPage = vueObj.PageNumber;\r\n                            vueObj.noRecord = false;\r\n                        } else {\r\n                            vueObj.ReportData = [];\r\n                            vueObj.noRecord = true;\r\n                            vueObj.TotalRecords = 0\r\n                        }\r\n                        if (localStorage.SavedParameters != undefined) {\r\n                            localStorage.removeItem(\"SavedParameters\");\r\n                        }\r\n                    }\r\n                    // if (response.data != \"\" && response.data != null) {\r\n                    //     if (response.data.data.length > 0) {\r\n                    //         vueObj.ReportData = response.data.data;\r\n                    //         vueObj.ReportData.forEach(ritem => {\r\n                    //             if (ritem.ACCESS == 1 || ritem.ACCESS == 2) {\r\n                    //                 ritem.isCheckBoxDisabled = true;\r\n                    //             } else { ritem.isCheckBoxDisabled = false }\r\n                    //             if (ritem.ACCESS == null) { ritem.ACCESS = 0 }\r\n                    //             ritem.rowDetailsUrl = '';\r\n                    //             if (ritem.rowDetailsUrl == '') {\r\n                    //                 // ritem.rowDetailsUrl='/viewcustomreport/' + ritem.REPORT_ID +'/'+ ritem.ACCESS;\r\n                    //                 ritem.rowDetailsUrl = '/Report/viewcustomreport/' + btoa(JSON.stringify({ ReportID: ritem.REPORT_ID, ACCESS: ritem.ACCESS, Folder_Id: ritem.FOLDER_ID }));\r\n                    //             }\r\n                    //         })\r\n                    //         vueObj.TotalRecords = response.data.data[0].TOTAL_RECORDS;\r\n                    //         vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                    //         vueObj.CurrentPage = vueObj.PageNumber;\r\n                    //         vueObj.noRecord = false;\r\n                    //     } else {\r\n                    //         vueObj.ReportData = [];\r\n                    //         vueObj.noRecord = true;\r\n                    //         vueObj.TotalRecords = 0\r\n                    //     }\r\n                    //     if (localStorage.SavedParameters != undefined) {\r\n                    //         localStorage.removeItem(\"SavedParameters\");\r\n                    //     }\r\n                    // }\r\n                    else {\r\n                        vueObj.noRecord = true;\r\n                        vueObj.ReportData = [];\r\n                        vueObj.TotalRecords = 0\r\n                    }\r\n                    setTimeout(function () {\r\n                        vueObj.ResponsiveDataTable('tablelistingdata')\r\n                    }, 500);\r\n                    vueObj.isLoading = false;\r\n            });\r\n        },\r\n        closeModalSharePopup: function () {\r\n            $(\"#modalshareview\").modal('hide');\r\n            this.showsharereportview = false;\r\n        },\r\n        getStatuslistForListing: function (StatusType, lang) {\r\n            var vm = this;\r\n            var url =\"langCode=\" + lang + \"&statusType=\" + StatusType + \"&hasglobal=true\";\r\n                CurrencyManagementDataService.statusdropdown(url).then(function (response) {\r\n                if (response.data.status == \"Success\") {\r\n                    var json = response.data.result;\r\n                    vm.StatusListForListing = json.data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=353aee6e\"\nimport script from \"./List.vue?vue&type=script&lang=js\"\nexport * from \"./List.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}