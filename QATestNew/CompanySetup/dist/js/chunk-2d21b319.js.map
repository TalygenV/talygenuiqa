{"version":3,"sources":["webpack:///./src/views/Company/ProvisionalRight/List.vue?c785","webpack:///./src/views/Company/ProvisionalRight/ProvisionalRightSchema.js","webpack:///src/views/Company/ProvisionalRight/List.vue","webpack:///./src/views/Company/ProvisionalRight/List.vue?c638","webpack:///./src/views/Company/ProvisionalRight/List.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isLoading","staticClass","$t","ProvisionalRightData","filteredHeaders","listheaderbuttons","TotalRecords","topSearchFields","renderActions","FetchData","searchCondition","on","leftCommonSearch","pagerMethod","commonHeaderButtonClick","actionButtonClick","sortdata","scopedSlots","_u","key","fn","ref","data","column","COLUMN_NAME","row","description","_v","_s","_e","from_user_id","Name","to_user_id","isCRMShowStausDrop","status_id","user_provisional_rights_id","StatusListForListing","value","recordId","$event","showProvisionalRight","staticRenderFns","buttons","title","iconClass","callbackfunction","additionalClass","isdisabled","isvisible","checkPrivilege","id","topsearchSchema","fieldName","fieldType","fieldSearchConditionName","isSearch","listActions","icon","additionalSpan","href","bindleftCommonSearchdropdown","ths","modulename","filtername","vm","url","params","DepartmentDataService","GetMainReportSearching","then","response","console","log","leftsearchSchema","json","leftSearchFields","listOptions","map","item","container","name","FOLDER_NAME","FOLDER_ID","toString","LeadStatusList","items","CREATED_BY","CREATED_ID","values","MODIFIED_BY","MODIFIED_ID","dataval","components","LeftColumn","AddCompanySetup","props","sourcetype","type","String","required","noRecord","CompanyId","Schema","ShowManageView","ShowAddCustomReportView","PageSize","PageNumber","isPaged","TotalPages","conditionForInstantSearch","SortBy","SortExp","showsharereportview","showemailreportview","showschedulereportview","ReportID","reportname","reportid","foldername","folderid","searchcondition","MODULENAME","SUBMODULECODE","privilegeParams","sharetype","STATUS","STATUS_ID","STATUS_COLOR","STATUS_BG_COLOR","GetUserInfo","getStatuslistForListing","computed","filteredUserData","vueObj","UserData","filteredItem","USER_EMP_ID","mounted","forEach","methods","event","ManageFolder","AddCustomReport","commonDeleteData","EmailScheduleListing","UpdateStatus","index","ProvisionalRightDataService","CheckPrivilege","ShowAlert","REPORT_ID","REPORTNAME","$","modal","setTimeout","SetBootstraptoolTip","sendemail","editreport","setschedule","ViewReport","ACCESS","$router","push","Modulename","Submodulecode","ReportName","Module_Id","MODULE_ID","Folder_Id","Sub_Module_Id","Version","Action","FolderID","btoa","JSON","stringify","s","SortDir","attr","_vm$$refs$managefolde","$refs","managefolder","GetViewList","AddDesignation","val","not","each","length","confirmR","postJSON","ids","moduleName","subModuleCode","refCode","objectPostString","CommonDeleteData","status","prop","removeAttr","addClass","parseInt","ID","StatusId","IsFor","Module","Submodule","CommonUpdateStatus","getRequestParams","pageNumber","pageSize","sortBy","sortExp","clickEventOfColumn","trim","ProvisionalRightListing","Headers","FieldSchema","filteredColumnNames","filter","obj","includes","settings","clickEvent","formatter","columnDataFormatter","isInSlot","Data","created_by","parse","modified_by","total_records","Math","ceil","CurrentPage","undefined","localStorage","SavedParameters","removeItem","ResponsiveDataTable","closeModalSharePopup","StatusType","lang","statusdropdown","result","component"],"mappings":"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","file":"js/chunk-2d21b319.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-2 mt-2\"},[_c('LeftColumn')],1),_c('div',{staticClass:\"col-10\"},[_c('tg-list',{attrs:{\"IsShowAction\":false,\"showCheckBox\":true,\"ModuleName\":\"Dynamic_Reporting\",\"SubModuleCode\":\"Dynamic_Reporting\",\"IdentityColumn\":\"user_provisional_rights_id\",\"HeaderText\":_vm.$t('ProvisionalRight'),\"ListData\":_vm.ProvisionalRightData,\"HeaderData\":_vm.filteredHeaders,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"IsSearchFieldsOnTop\":false,\"SearchPosition\":\"top\",\"SearchFields\":_vm.topSearchFields,\"RenderRowActionMethod\":_vm.renderActions,\"ListDataCallBackFunction\":_vm.FetchData,\"IsFilterApplied\":_vm.searchCondition ? true : false,\"LegendArray\":[],\"sourcetype\":\"\",\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"ActionButtonClick\":_vm.actionButtonClick,\"SortdataButtonClick\":_vm.sortdata},scopedSlots:_vm._u([{key:\"slotdata\",fn:function(ref){\nvar data = ref.data;\nreturn [(data.column.COLUMN_NAME == 'description')?[(data.row.description != null)?[_c('div',[_vm._v(_vm._s(data.row.description))])]:[_c('div',[_vm._v(\"--\")])]]:_vm._e(),(data.column.COLUMN_NAME == 'from_user_id')?[(data.row.from_user_id.Name != null)?[_c('div',[_vm._v(_vm._s(data.row.from_user_id.Name))])]:[_c('div',[_vm._v(\"--\")])]]:_vm._e(),(data.column.COLUMN_NAME == 'to_user_id')?[(data.row.to_user_id.Name != null)?[_c('div',[_vm._v(_vm._s(data.row.to_user_id.Name))])]:[_c('div',[_vm._v(\"--\")])]]:_vm._e(),(data.column.COLUMN_NAME == 'status_id')?[(_vm.isCRMShowStausDrop(data.row.status_id, 'COMPANYSETUP_UPDATE'))?_c('listing-status',{ref:\"updatestatus\",attrs:{\"isfor\":'COMPANYSETUP_UPDATE',\"dataid\":data.row.user_provisional_rights_id,\"data-controller\":\"COMPANYSETUP_UPDATE\",\"statuslist\":_vm.StatusListForListing,\"item\":data.row.user_provisional_rights_id,\"data-action\":\"index\",\"module\":\"ProvisionalRight\",\"subModule\":\"ProvisionalRight\",\"dataselected\":data.row.status_id.value == 1001 ? 'Active' : 'Inactive',\"callbackfunction\":_vm.FetchData,\"isselectedvaluestring\":true}}):_vm._e()]:_vm._e()]}}])})],1)]),(_vm.showProvisionalRight)?_c('AddCompanySetup',{attrs:{\"recordId\":_vm.recordId,\"title\":_vm.$t('Manage Provisional Rights'),\"moduleName\":'ProvisionalRight',\"emitName\":'addReloadData',\"addApiUrl\":'/ProvisionalRight/add',\"subModule\":'ProvisionalRight'},on:{\"close\":function($event){_vm.showProvisionalRight=false;_vm.recordId=0},\"addReloadData\":function($event){_vm.FetchData();_vm.showProvisionalRight=false;_vm.recordId=0}}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import DepartmentDataService from \"@/services/DataService\";\r\nlet buttons =\r\n    [\r\n    {\r\n        title: 'Add Provisional Rights',\r\n        iconClass: 'fa-plus',\r\n        callbackfunction: 'AddProvisionalRight',\r\n        additionalClass: '',\r\n        isdisabled: false,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'ActiveMultiple',\r\n        title: 'Active',\r\n        iconClass: 'fa-check',\r\n        callbackfunction:'ActiveMultipleListing',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'InactiveMultiple',\r\n        title: 'Inactive',\r\n        iconClass: 'fa-close',\r\n        callbackfunction:'InactiveMultipleListing',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'DeleteMultiple',\r\n        title: 'Delete',\r\n        iconClass: 'fa-trash-o',\r\n        callbackfunction: 'commonDeleteData',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n    }\r\n    ];\r\nlet topsearchSchema = [\r\n    {\r\n        fieldName: 'Search by Provisional Right Name',\r\n        fieldType: \"text\",\r\n        // fieldIcon: \"fa-file\",\r\n        fieldSearchConditionName: ['provisional_right_name'],\r\n        isSearch: true,\r\n        // value: \"\",\r\n        // listOptions: []\r\n    },\r\n];\r\nlet listActions = [\r\n    {\r\n        title: 'View',\r\n       // href: '/viewcustomreport',\r\n        callbackfunction: 'ViewReport',\r\n        icon: 'fa fa-eye action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Edit',\r\n        // href: '/CRM/ManageLead/{lead_id}/Yes/CRM/CRM_LEADS',\r\n        callbackfunction: 'editreport',\r\n        icon: 'fa fa-pencil text-success action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Send Email',\r\n        callbackfunction: 'sendemail',\r\n        href: 'javascript:void(0)',\r\n        icon: 'fa fa-paper-plane text-success action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Schedule',\r\n        callbackfunction: 'setschedule',\r\n        href: 'javascript:void(0)',\r\n        icon: 'fa fa-clock-o text-warning action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Share',\r\n        callbackfunction: 'sharereport',\r\n        href: 'javascript:void(0)',\r\n        icon: 'fa fa-share-alt text-success action-icon',\r\n        additionalSpan: ''\r\n    },\r\n];\r\nfunction bindleftCommonSearchdropdown(ths, modulename, filtername) {\r\n    var vm = ths;\r\n    let url=filtername;\r\n    let params = {};\r\n    params[\"moduleName\"] = modulename; \r\n    params[\"type\"] = filtername\r\n    DepartmentDataService.GetMainReportSearching(url)\r\n        .then(function (response) {\r\n            console.log(leftsearchSchema);\r\n            var json = response.data;\r\n            console.log('folderid', json);\r\n            if (json != null) {\r\n                if (filtername == \"FOLDER_NAME\") {\r\n                        vm.leftSearchFields[4].listOptions =json.map((item) => {\r\n                        const container = {};                    \r\n                        container.name = item.FOLDER_NAME;\r\n                        container.value = item.FOLDER_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((items) => {\r\n                        const container = {};                    \r\n                        container.name = items.FOLDER_NAME;\r\n                        container.value = items.FOLDER_ID.toString();                    \r\n                        return container;\r\n                    })                    \r\n                }  \r\n                if (filtername == \"CREATED_BY\") {\r\n                        vm.leftSearchFields[3].listOptions =json.map((value) => {\r\n                        const container = {};                    \r\n                        container.name = value.CREATED_BY;\r\n                        container.value = value.CREATED_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((values) => {\r\n                        const container = {};                    \r\n                        container.name = values.CREATED_BY;\r\n                        container.value = values.CREATED_ID.toString();                    \r\n                        return container;\r\n                    }) \r\n                } \r\n                if (filtername == \"MODIFIED_BY\") {\r\n                        vm.leftSearchFields[7].listOptions =json.map((data) => {\r\n                        const container = {};                    \r\n                        container.name = data.MODIFIED_BY;\r\n                        container.value = data.MODIFIED_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((dataval) => {\r\n                        const container = {};                    \r\n                        container.name = dataval.MODIFIED_BY;\r\n                        container.value = dataval.MODIFIED_ID.toString();                    \r\n                        return container;\r\n                    }) \r\n                }   \r\n               \r\n\r\n            }\r\n        \r\n    });\r\n}\r\nexport default { buttons, topsearchSchema, listActions, bindleftCommonSearchdropdown };\r\n","<template>\r\n    <div>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"row\">\r\n            <div class=\"col-2 mt-2\">\r\n                <LeftColumn />\r\n            </div>\r\n            <div class=\"col-10\">\r\n                <tg-list :IsShowAction=\"false\" :showCheckBox=\"true\" ModuleName=\"Dynamic_Reporting\" SubModuleCode=\"Dynamic_Reporting\"\r\n                    IdentityColumn=\"user_provisional_rights_id\" :HeaderText=\"$t('ProvisionalRight')\" :ListData=\"ProvisionalRightData\" :HeaderData=\"filteredHeaders\"\r\n                    :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecords\" :IsSearchFieldsOnTop=\"false\"\r\n                    SearchPosition=\"top\" :SearchFields=\"topSearchFields\"\r\n                    :RenderRowActionMethod=\"renderActions\" :ListDataCallBackFunction=\"FetchData\"\r\n                    :IsFilterApplied=\"searchCondition ? true : false\" v-on:LeftsearchButtonClick=\"leftCommonSearch\" :LegendArray=\"[]\" sourcetype=\"\"\r\n                    v-on:PagerButtonClick=\"pagerMethod\" v-on:HeaderButtonClick=\"commonHeaderButtonClick\"\r\n                    v-on:ActionButtonClick=\"actionButtonClick\" v-on:SortdataButtonClick=\"sortdata\" :NorecordfoundText=\"$t('NoRecordfound')\">\r\n                \r\n                    <template v-slot:slotdata=\"{ data }\">\r\n                        <template v-if=\"data.column.COLUMN_NAME == 'description'\">\r\n                            <template v-if=\"data.row.description != null\">\r\n                                <div>{{ data.row.description }}</div>\r\n                            </template>\r\n                            <template v-else>\r\n                                <div>--</div>\r\n                            </template>\r\n                        </template>\r\n                        <template v-if=\"data.column.COLUMN_NAME == 'from_user_id'\">\r\n                            <template v-if=\"data.row.from_user_id.Name != null\">\r\n                                <div>{{ data.row.from_user_id.Name }}</div>\r\n                            </template>\r\n                            <template v-else>\r\n                                <div>--</div>\r\n                            </template>\r\n                        </template>\r\n                        <template v-if=\"data.column.COLUMN_NAME == 'to_user_id'\">\r\n                            <template v-if=\"data.row.to_user_id.Name != null\">\r\n                                <div>{{ data.row.to_user_id.Name }}</div>\r\n                            </template>\r\n                            <template v-else>\r\n                                <div>--</div>\r\n                            </template>\r\n                        </template>\r\n                        <template v-if=\"data.column.COLUMN_NAME == 'status_id'\">\r\n                            <listing-status :isfor=\"'COMPANYSETUP_UPDATE'\" v-if=\"isCRMShowStausDrop(data.row.status_id, 'COMPANYSETUP_UPDATE')\"\r\n                                ref=\"updatestatus\" v-bind:dataid=\"data.row.user_provisional_rights_id\" data-controller=\"COMPANYSETUP_UPDATE\"\r\n                                v-bind:statuslist=\"StatusListForListing\" v-bind:item=\"data.row.user_provisional_rights_id\" data-action=\"index\" module=\"ProvisionalRight\" subModule=\"ProvisionalRight\"\r\n                                v-bind:dataselected=\"data.row.status_id.value == 1001 ? 'Active' : 'Inactive'\"\r\n                                v-bind:callbackfunction=\"FetchData\" v-bind:isselectedvaluestring=\"true\">\r\n                            </listing-status>\r\n                        </template>\r\n                    </template>\r\n                </tg-list>\r\n            </div>\r\n        </div>\r\n        <!---modal popup-->\r\n        <AddCompanySetup :recordId=\"recordId\" :title=\"$t('Manage Provisional Rights')\" v-if=\"showProvisionalRight\" v-on:close=\"showProvisionalRight=false;recordId=0\" v-on:addReloadData=\"FetchData();showProvisionalRight=false;recordId=0\" v-bind:moduleName=\"'ProvisionalRight'\" v-bind:emitName=\"'addReloadData'\" v-bind:addApiUrl=\"'/ProvisionalRight/add'\" v-bind:subModule=\"'ProvisionalRight'\" />\r\n    </div>\r\n</template>\r\n<script>\r\nimport ProvisionalRightDataService from \"@/services/DataService\";\r\nimport Schema from \"@/views/Company/ProvisionalRight/ProvisionalRightSchema\";\r\nimport AddCompanySetup from \"@/components/Modals/AddCompanySetup.vue\";\r\nimport LeftColumn from \"../LeftColumn.vue\";\r\nexport default {\r\n    components: {\r\n        LeftColumn,\r\n        AddCompanySetup,\r\n    },\r\n    props: {\r\n        sourcetype:\r\n        {\r\n            type: String,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            recordId:0,\r\n            showProvisionalRight:false,\r\n            noRecord:false,\r\n            isLoading: false,\r\n            CompanyId: null,\r\n            ProvisionalRightData: [],\r\n            TotalRecords: 0,\r\n            listheaderbuttons: Schema.buttons,\r\n            topSearchFields: Schema.topsearchSchema,\r\n            ShowManageView: false,\r\n            ShowAddCustomReportView: false,\r\n            PageSize: 10,\r\n            PageNumber: 1,\r\n            isPaged: 1,\r\n            TotalPages: 0,\r\n            listActions: Schema.listActions,\r\n            searchCondition: '',\r\n            conditionForInstantSearch: \"\",\r\n            SortBy: '',\r\n            SortExp: '',\r\n            showsharereportview: false,\r\n            showemailreportview: false,\r\n            showschedulereportview: false,\r\n            ReportID: null,\r\n            reportname: '',\r\n            reportid: '',\r\n            foldername: '',\r\n            folderid: '',\r\n            LeadStatusList: [],\r\n            searchcondition: '',\r\n            MODULENAME: null,\r\n            SUBMODULECODE: null,\r\n            privilegeParams: null,\r\n            sharetype: '',\r\n            // Headers: [],\r\n            filteredHeaders: [],\r\n            StatusListForListing: [\r\n                { \r\n                    STATUS: 'Active', \r\n                    STATUS_ID: 1001, \r\n                    STATUS_COLOR: \"#ffffff\", \r\n                    STATUS_BG_COLOR: \"#28a745\" \r\n                },{ \r\n                    STATUS: 'Inactive', \r\n                    STATUS_ID: 1002, \r\n                    STATUS_COLOR: \"#ffffff\", \r\n                    STATUS_BG_COLOR: \"#d72435\"\r\n                }\r\n            ],\r\n        }\r\n    },\r\n    async created() {\r\n        var ths = this;\r\n        ths.CompanyId = ths.GetUserInfo.CompanyId;\r\n        ths.privilegeParams = `controller=ProvisionalRight&action=`;\r\n        await ths.FetchData();\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'FOLDER_NAME')\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'CREATED_BY')\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'MODIFIED_BY')\r\n        ths.getStatuslistForListing(\"Dynamic_Reporting\", \"en\");\r\n    },\r\n    computed: {\r\n        filteredUserData() {\r\n            return this.vueObj.UserData.map((item) => {\r\n            const filteredItem = { ...item };\r\n\r\n            // Check if USER_EMP_ID is null or empty, then replace with '--'\r\n            if (filteredItem.USER_EMP_ID === null || filteredItem.USER_EMP_ID === '') {\r\n                filteredItem.USER_EMP_ID = '--';\r\n            }\r\n\r\n            return filteredItem;\r\n            });\r\n        },\r\n        \r\n    },\r\n    mounted() {\r\n        Schema.topsearchSchema.forEach(item => {\r\n            item.value = '';\r\n            item.isSearch = false;\r\n        })\r\n    },\r\n    methods: {\r\n        renderActions: function (row) {\r\n            console.log(row);\r\n            // var self = this;\r\n            // let rtnActionArray = [];\r\n            // self.listActions.forEach(actionItem => {\r\n            //     let action = { ...actionItem };\r\n            //     switch (action.title) {\r\n            //         case 'View':\r\n            //             action.isVisible = row.ACCESS != null ? true : true;\r\n            //             break;\r\n            //         case 'Send Email':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Schedule':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Share':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Edit':\r\n            //             action.isVisible = row.ACCESS != 1 ? true : false;\r\n            //             break;\r\n            //         default:\r\n            //             action.isVisible = true;\r\n            //             break;\r\n            //     }\r\n            //     rtnActionArray.push(action);\r\n            // });\r\n            // return rtnActionArray;\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            console.log(event)\r\n            switch (event.callbackfunction) {\r\n                case \"ManageFolder\":\r\n                    this.ManageFolder();\r\n                    break;\r\n                case \"AddCustomReport\":\r\n                    this.AddCustomReport();\r\n                    break;\r\n                case \"commonDeleteData\":\r\n                    this.commonDeleteData();\r\n                    break;\r\n                case \"EmailScheduleListing\":\r\n                    this.EmailScheduleListing();\r\n                    break;\r\n                case \"AddProvisionalRight\":\r\n                    this.showProvisionalRight = true\r\n                    break;\r\n                case \"ActiveMultipleListing\":\r\n                    this.UpdateStatus(\"Active\");\r\n                    break;\r\n                case \"InactiveMultipleListing\":\r\n                    this.UpdateStatus(\"Inactive\");\r\n                    break;\r\n            }\r\n        },\r\n        actionButtonClick: function (callbackfunction, item, index, event) {\r\n            var vm = this;\r\n            switch (callbackfunction) {\r\n                case 'sharereport':\r\n                    var vm = this;\r\n                    ProvisionalRightDataService.CheckPrivilege(vm.privilegeParams+'ShareReport').then((response)=>{\r\n                        if(response.data){\r\n                            vm.sharetype = callbackfunction\r\n                            vm.folderid = item.FOLDER_ID;\r\n                            vm.ReportID = item.REPORT_ID;\r\n                            vm.foldername = item.REPORTNAME;\r\n                            vm.showsharereportview = true;\r\n                            $(\"#modalshareview\").modal('show');\r\n                            setTimeout(function () {\r\n                                $(\"#modalshareview\").modal('show');\r\n                                setTimeout(function () {\r\n                                    vm.SetBootstraptoolTip();\r\n                                }, 200);\r\n                            }, 1000);\r\n                        }\r\n                        else{\r\n                            vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                            return false;\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'sendemail':\r\n                    vm.sendemail(item.REPORT_ID, item.MODULENAME, item.SUBMODULECODE);\r\n                    break;\r\n                case 'editreport':\r\n                    vm.editreport(item);\r\n                    break;\r\n                case 'setschedule':\r\n                    vm.setschedule(item.REPORT_ID);\r\n                    break;\r\n                case 'ViewReport':\r\n                    vm.ViewReport(item.REPORT_ID, item.ACCESS, item.FOLDER_ID);\r\n                    break;\r\n            }\r\n        },\r\n        editreport: function (data) {\r\n            var vm = this;\r\n            ProvisionalRightDataService.CheckPrivilege(vm.privilegeParams+'Update').then((response)=>{\r\n                if(response.data){\r\n                    vm.$router.push({\r\n                        name: 'EditDataReport',\r\n                        params: {\r\n                            Modulename: data.MODULENAME, Submodulecode: data.SUBMODULECODE, ReportName: data.REPORTNAME, ReportID: data.REPORT_ID,\r\n                            Module_Id: data.MODULE_ID, Folder_Id: data.FOLDER_ID, Sub_Module_Id: data.Sub_Module_Id, Version: vm.Version, Action: 'Edit'\r\n                        }\r\n                    });\r\n                }\r\n                else{\r\n                    vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        ViewReport: function (ReportID, ACCESS, FolderID) {\r\n            var vm = this;\r\n            vm.$router.push('/Report/viewcustomreport/' + btoa(JSON.stringify({ ReportID: ReportID, ACCESS: ACCESS , Folder_Id: FolderID })))\r\n\r\n        },\r\n        sortdata: async function (s) {\r\n            var SortDir = \"sort tb_headerSortDown\";\r\n            this.SortBy = s;\r\n            if (s === this.SortBy) {\r\n                if (this.SortExp == \"\") {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n                else if (this.SortExp == \"ASC\") {\r\n                    this.SortExp = \"DESC\";\r\n                    SortDir = \"sort tb_headerSortUp\";\r\n                }\r\n                else {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n            }\r\n\r\n            await this.FetchData();\r\n            $(\"#th-\" + s + '  span:first-child').attr(\"class\", SortDir);\r\n        },\r\n        pagerMethod: async function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            await this.FetchData();\r\n        },\r\n        leftCommonSearch: async function (value) {\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchCondition;\r\n            }\r\n            else {\r\n                this.searchCondition = \"\";\r\n            }\r\n            await this.FetchData();\r\n        },\r\n        ManageFolder: function () {\r\n            var vm = this;\r\n            ProvisionalRightDataService.CheckPrivilege(vm.privilegeParams+'FolderListing').then((response)=>{\r\n                if(response.data){\r\n                    vm.ShowManageView = true;\r\n                    $(\"#modalManageView\").modal('show');\r\n                    setTimeout(function () {\r\n                        $(\"#modalManageView\").modal('show');\r\n                        setTimeout(function () {\r\n                            vm.SetBootstraptoolTip();\r\n                        }, 200);\r\n                    }, 1000);\r\n                    vm.$refs.managefolder?.GetViewList();\r\n                }\r\n                else{\r\n                    vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        AddDesignation: function () {\r\n            var vm = this;\r\n            console.log(vm, \"Add\");\r\n        },\r\n        commonDeleteData: function (event) {\r\n            var vm = this;\r\n            // ProvisionalRightDataService.CheckPrivilege(vm.privilegeParams+'Delete').then((response)=>{\r\n            //     if(response.data){\r\n                    var val = \"\";\r\n                    $('.chkItems:checkbox:checked').not(\"[id^='chkAll_0']\").each(function () {\r\n                        if (val.length > 0)\r\n                            val += ',';\r\n                        val += $(this).val();\r\n                    });\r\n                    if (val.length > 0) {\r\n                        vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Report\")), function () {\r\n                            var postJSON = {\r\n                                ids: val,\r\n                                moduleName: \"ProvisionalRight\",\r\n                                subModuleCode: \"ProvisionalRight\",\r\n                                refCode: \"COMPANYSETUP_DELETE\"\r\n                            };\r\n                            var objectPostString = JSON.stringify(postJSON);\r\n                            ProvisionalRightDataService.CommonDeleteData(objectPostString).then(async function (response) {\r\n                                if (response.status == 200) {\r\n                                    $('.chkItems:checkbox:checked,#chkAll_0').prop(\"checked\", false).removeAttr('checked');\r\n                                    $(\"#DeleteMultiple\").addClass(\"disabled\");\r\n                                    vm.ShowAlert(vm.$t('DeletedSuccessfully', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                    vm.PageNumber = parseInt(vm.PageNumber) - 1;\r\n                                    if (vm.PageNumber <= 0) {\r\n                                        vm.PageNumber = 1;\r\n                                    }\r\n                                    await vm.FetchData();\r\n                                }\r\n                                else {\r\n                                    vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                }\r\n\r\n                            },);\r\n                        });\r\n                    }\r\n                    else {\r\n                        vm.ShowAlert(vm.$t(\"Selectanyrecordtodelete\"));\r\n                    }\r\n            //     }\r\n            //     else\r\n            //     {\r\n            //         vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n            //         return false;\r\n            //     }\r\n            // })\r\n        },\r\n        UpdateStatus: async function (status) {\r\n            var vm = this;\r\n            if (status == 'Active') {\r\n                status = 1001;\r\n            } else {\r\n                status = 1002;\r\n            }\r\n            var val = \"\";\r\n            $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                if (val.length > 0) {\r\n                    val += ',';\r\n                }\r\n                val += $(this).val();\r\n            });\r\n            if (val.length > 0) {\r\n                vm.confirmR(vm.$t(\"AreYouSureToUpdateStatus\"), true, (vm.$t(\"update\") + \"  \" + vm.$t(\"status\")), function () {\r\n                    // Send IDs as a comma-separated string\r\n                    var postJSON = {\r\n                        ID: val,\r\n                        StatusId: status,\r\n                        IsFor: \"COMPANYSETUP_UPDATE\",\r\n                        Module: \"ProvisionalRight\",\r\n                        Submodule: \"ProvisionalRight\",\r\n                    };\r\n\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    console.log(objectPostString);\r\n                    ProvisionalRightDataService.CommonUpdateStatus(objectPostString).then(response => {\r\n                        if (response.status == 200) {\r\n                            $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                            vm.ShowAlert(vm.$t('RecordUpdatedSuccessfully', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                            vm.FetchData();\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        getRequestParams: function (pageNumber, pageSize, sortBy, sortExp, isPaged, searchcondition) {\r\n            let params = {};\r\n            if (pageNumber) { params[\"pageNumber\"] = pageNumber; }\r\n            if (searchcondition) { params[\"searchcondition\"] = searchcondition; }\r\n            if (isPaged) { params[\"is_paged\"] = isPaged; }\r\n            if (sortBy) { params[\"sortBy\"] = sortBy; }\r\n            if (sortExp) { params[\"sortExp\"] = sortExp; }\r\n            if (pageSize) { params[\"pageSize\"] = pageSize; }\r\n            return params;\r\n        },\r\n        clickEventOfColumn: function (row, column) {\r\n            console.log(row,column.COLUMN_NAME)\r\n            if (column.COLUMN_NAME == 'provisional_right_name') {\r\n                this.recordId = row.user_provisional_rights_id\r\n                this.showProvisionalRight = true\r\n            }\r\n            if (column.COLUMN_NAME == 'USERNAME') {\r\n                this.$router.push({ name: 'viewcustomreport', params: { ReportID: row.REPORT_ID, ACCESS: row.ACCESS } });\r\n            }\r\n        },\r\n        FetchData: async function () {\r\n            var vueObj = this;\r\n            this.isLoading = true;\r\n            var url=`CompanyId=${vueObj.CompanyId}&pageSize=${vueObj.PageSize}&pageNum=${vueObj.PageNumber}&sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}&searchQuery=${vueObj.searchCondition.trim()}`;\r\n            await ProvisionalRightDataService.ProvisionalRightListing(url)\r\n                .then(function (response) {\r\n                    vueObj.Headers = response.data.FieldSchema;\r\n                    const filteredColumnNames = [\"provisional_right_name\",\"from_user_id\", \"to_user_id\",\"effective_from_date\", \"effective_to_date\", \"description\", \"status_id\"];\r\n                    // Filter the original list based on the desired COLUMN_NAME values\r\n                    vueObj.filteredHeaders =  vueObj.Headers.filter(obj => filteredColumnNames.includes(obj.COLUMN_NAME));\r\n                    vueObj.filteredHeaders.forEach((column) => {\r\n                        column.settings = null;\r\n                        if (column.COLUMN_NAME == \"provisional_right_name\") {\r\n                            column.settings = {\r\n                                clickEvent: vueObj.clickEventOfColumn,\r\n                                formatter: vueObj.columnDataFormatter,\r\n                            };\r\n                        }                        \r\n                        if (column.COLUMN_NAME == \"status_id\" || column.COLUMN_NAME == \"description\" || column.COLUMN_NAME == \"from_user_id\" || column.COLUMN_NAME == \"to_user_id\") {\r\n                            column.settings = {\r\n                                isInSlot: true\r\n                            };\r\n                        }\r\n                    });\r\n                    if (response.data.Data != \"\" && response.data.Data != null) {\r\n                        if (response.data.Data.length > 0) {\r\n                            vueObj.ProvisionalRightData = response.data.Data;\r\n                            vueObj.ProvisionalRightData.forEach(item => {\r\n                                item.created_by = JSON.parse(item.created_by);\r\n                                item.modified_by = JSON.parse(item.modified_by);\r\n                                item.from_user_id = JSON.parse(item.from_user_id);\r\n                                item.to_user_id = JSON.parse(item.to_user_id);\r\n                                item.status_id = JSON.parse(item.status_id);\r\n                            });\r\n                            vueObj.TotalRecords = vueObj.ProvisionalRightData[0].total_records;\r\n                            vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                            vueObj.CurrentPage = vueObj.PageNumber;\r\n                            vueObj.noRecord = false;\r\n                        } else {\r\n                            vueObj.ProvisionalRightData = [];\r\n                            vueObj.noRecord = true;\r\n                            vueObj.TotalRecords = 0\r\n                        }\r\n                        if (localStorage.SavedParameters != undefined) {\r\n                            localStorage.removeItem(\"SavedParameters\");\r\n                        }\r\n                    }\r\n                    else {\r\n                        vueObj.noRecord = true;\r\n                        vueObj.ProvisionalRightData = [];\r\n                        vueObj.TotalRecords = 0;\r\n                    }\r\n                    setTimeout(function () {\r\n                        vueObj.ResponsiveDataTable('tablelistingdata')\r\n                    }, 500);\r\n                    vueObj.isLoading = false;\r\n            });\r\n        },\r\n        closeModalSharePopup: function () {\r\n            $(\"#modalshareview\").modal('hide');\r\n            this.showsharereportview = false;\r\n        },\r\n        getStatuslistForListing: function (StatusType, lang) {\r\n            var vm = this;\r\n            var url =\"langCode=\" + lang + \"&statusType=\" + StatusType + \"&hasglobal=true\";\r\n                ProvisionalRightDataService.statusdropdown(url).then(function (response) {\r\n                if (response.data.status == \"Success\") {\r\n                    var json = response.data.result;\r\n                    vm.StatusListForListing = json.data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=4e149527\"\nimport script from \"./List.vue?vue&type=script&lang=js\"\nexport * from \"./List.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}