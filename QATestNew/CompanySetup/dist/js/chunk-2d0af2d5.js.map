{"version":3,"sources":["webpack:///./src/views/Company/PaymentGateway/List.vue?59aa","webpack:///./src/views/Company/PaymentGateway/PaymentGatewaySchema.js","webpack:///src/views/Company/PaymentGateway/List.vue","webpack:///./src/views/Company/PaymentGateway/List.vue?1872","webpack:///./src/views/Company/PaymentGateway/List.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isLoading","staticClass","$t","PaymentGatewayData","filteredHeaders","listheaderbuttons","TotalRecords","topSearchFields","renderActions","FetchData","searchCondition","on","leftCommonSearch","pagerMethod","commonHeaderButtonClick","actionButtonClick","sortdata","scopedSlots","_u","key","fn","ref","data","column","COLUMN_NAME","isCRMShowStausDrop","row","status_id","Id","StatusListForListing","value","_e","recordId","$event","showPaymentGateway","staticRenderFns","buttons","title","iconClass","callbackfunction","additionalClass","isdisabled","isvisible","checkPrivilege","id","topsearchSchema","fieldName","fieldType","fieldSearchConditionName","isSearch","listActions","icon","additionalSpan","href","bindleftCommonSearchdropdown","ths","modulename","filtername","vm","url","params","DepartmentDataService","GetMainReportSearching","then","response","console","log","leftsearchSchema","json","leftSearchFields","listOptions","map","item","container","name","FOLDER_NAME","FOLDER_ID","toString","LeadStatusList","items","CREATED_BY","CREATED_ID","values","MODIFIED_BY","MODIFIED_ID","dataval","components","LeftColumn","AddCompanySetup","props","sourcetype","type","String","required","noRecord","CompanyId","Schema","ShowManageView","ShowAddCustomReportView","PageSize","PageNumber","isPaged","TotalPages","conditionForInstantSearch","SortBy","SortExp","showsharereportview","showemailreportview","showschedulereportview","ReportID","reportname","reportid","foldername","folderid","searchcondition","MODULENAME","SUBMODULECODE","privilegeParams","UserName","Password","Signature","sharetype","STATUS","STATUS_ID","STATUS_COLOR","STATUS_BG_COLOR","GetUserInfo","getStatuslistForListing","computed","filteredUserData","vueObj","UserData","filteredItem","USER_EMP_ID","mounted","forEach","methods","event","commonDeleteData","UpdateStatus","index","PaymentGatewayDataService","CheckPrivilege","ShowAlert","REPORT_ID","REPORTNAME","$","modal","setTimeout","SetBootstraptoolTip","sendemail","editreport","setschedule","ViewReport","ACCESS","$router","push","Modulename","Submodulecode","ReportName","Module_Id","MODULE_ID","Folder_Id","Sub_Module_Id","Version","Action","FolderID","btoa","JSON","stringify","s","SortDir","attr","ManageFolder","_vm$$refs$managefolde","$refs","managefolder","GetViewList","AddDesignation","val","not","each","length","confirmR","postJSON","ids","moduleName","subModuleCode","refCode","objectPostString","CommonDeleteData","status","prop","removeAttr","addClass","parseInt","ID","StatusId","IsFor","Module","Submodule","CommonUpdateStatus","getRequestParams","pageNumber","pageSize","sortBy","sortExp","clickEventOfColumn","PaymentGateway_id","trim","PaymentGatewayListing","Headers","FieldSchema","filteredColumnNames","filter","obj","includes","settings","clickEvent","formatter","columnDataFormatter","isInSlot","Data","payment_gateway_code","parse","created_by","modified_by","total_records","Math","ceil","CurrentPage","undefined","localStorage","SavedParameters","removeItem","ResponsiveDataTable","closeModalSharePopup","StatusType","lang","statusdropdown","result","component"],"mappings":"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","file":"js/chunk-2d0af2d5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-2 mt-2\"},[_c('LeftColumn')],1),_c('div',{staticClass:\"col-10\"},[_c('tg-list',{attrs:{\"IsShowAction\":false,\"showCheckBox\":true,\"ModuleName\":\"Dynamic_Reporting\",\"SubModuleCode\":\"Dynamic_Reporting\",\"IdentityColumn\":\"Id\",\"HeaderText\":_vm.$t('PaymentGateway'),\"ListData\":_vm.PaymentGatewayData,\"HeaderData\":_vm.filteredHeaders,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"IsSearchFieldsOnTop\":false,\"SearchPosition\":\"top\",\"SearchFields\":_vm.topSearchFields,\"RenderRowActionMethod\":_vm.renderActions,\"ListDataCallBackFunction\":_vm.FetchData,\"IsFilterApplied\":_vm.searchCondition ? true : false,\"LegendArray\":[],\"sourcetype\":\"\",\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"ActionButtonClick\":_vm.actionButtonClick,\"SortdataButtonClick\":_vm.sortdata},scopedSlots:_vm._u([{key:\"slotdata\",fn:function(ref){\nvar data = ref.data;\nreturn [(data.column.COLUMN_NAME == 'status_id')?[(_vm.isCRMShowStausDrop(data.row.status_id, 'COMPANYSETUP_UPDATE'))?_c('listing-status',{ref:\"updatestatus\",attrs:{\"isfor\":'COMPANYSETUP_UPDATE',\"dataid\":data.row.Id,\"data-controller\":\"COMPANYSETUP_UPDATE\",\"statuslist\":_vm.StatusListForListing,\"item\":data.row.Id,\"data-action\":\"index\",\"module\":\"PaymentGateway\",\"subModule\":\"PaymentGateway\",\"dataselected\":data.row.status_id.value == 1001 ? 'Active' : 'InActive',\"callbackfunction\":_vm.FetchData,\"isselectedvaluestring\":true}}):_vm._e()]:_vm._e()]}}])})],1)]),(_vm.showPaymentGateway)?_c('AddCompanySetup',{attrs:{\"recordId\":_vm.recordId,\"title\":_vm.$t('Manage Payment Gateway'),\"moduleName\":'PaymentGateway',\"emitName\":'addReloadData',\"addApiUrl\":'/PaymentGateway/add',\"subModule\":'PaymentGateway'},on:{\"close\":function($event){_vm.showPaymentGateway=false;_vm.recordId=0},\"addReloadData\":function($event){_vm.FetchData();_vm.showPaymentGateway=false;_vm.recordId=0}}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import PaymentGatewayDataService from \"@/services/DataService\";\r\nlet buttons =\r\n    [\r\n    {\r\n        title: 'Add',\r\n        iconClass: 'fa-plus',\r\n        callbackfunction: 'AddDepartment',\r\n        additionalClass: '',\r\n        isdisabled: false,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'ActiveMultiple',\r\n        title: 'Active',\r\n        iconClass: 'fa-check',\r\n        callbackfunction: 'ActiveMultipleListing',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'InactiveMultiple',\r\n        title: 'Inactive',\r\n        iconClass: 'fa-close',\r\n        callbackfunction: 'InactiveMultipleListing',\r\n        additionalClass: '',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n        checkPrivilege: true\r\n    },\r\n    {\r\n        id: 'DeleteMultiple',\r\n        title: 'Delete',\r\n        iconClass: 'fa-trash-o',\r\n        callbackfunction: 'commonDeleteData',\r\n        isdisabled: true,\r\n        isvisible: true,\r\n    }\r\n    ];\r\nlet topsearchSchema = [\r\n    {\r\n        fieldName: 'Search by Payment',\r\n        fieldType: \"text\",\r\n        // fieldIcon: \"fa-file\",\r\n        fieldSearchConditionName: ['payment_gateway_code'],\r\n        isSearch: true,\r\n        // value: \"\",\r\n        // listOptions: []\r\n    },\r\n];\r\nlet listActions = [\r\n    {\r\n        title: 'View',\r\n       // href: '/viewcustomreport',\r\n        callbackfunction: 'ViewReport',\r\n        icon: 'fa fa-eye action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Edit',\r\n        // href: '/CRM/ManageLead/{lead_id}/Yes/CRM/CRM_LEADS',\r\n        callbackfunction: 'editreport',\r\n        icon: 'fa fa-pencil text-success action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Send Email',\r\n        callbackfunction: 'sendemail',\r\n        href: 'javascript:void(0)',\r\n        icon: 'fa fa-paper-plane text-success action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Schedule',\r\n        callbackfunction: 'setschedule',\r\n        href: 'javascript:void(0)',\r\n        icon: 'fa fa-clock-o text-warning action-icon',\r\n        additionalSpan: ''\r\n    },\r\n    {\r\n        title: 'Share',\r\n        callbackfunction: 'sharereport',\r\n        href: 'javascript:void(0)',\r\n        icon: 'fa fa-share-alt text-success action-icon',\r\n        additionalSpan: ''\r\n    },\r\n];\r\nfunction bindleftCommonSearchdropdown(ths, modulename, filtername) {\r\n    var vm = ths;\r\n    let url=filtername;\r\n    let params = {};\r\n    params[\"moduleName\"] = modulename; \r\n    params[\"type\"] = filtername\r\n    DepartmentDataService.GetMainReportSearching(url)\r\n        .then(function (response) {\r\n            console.log(leftsearchSchema);\r\n            var json = response.data;\r\n            console.log('folderid', json);\r\n            if (json != null) {\r\n                if (filtername == \"FOLDER_NAME\") {\r\n                        vm.leftSearchFields[4].listOptions =json.map((item) => {\r\n                        const container = {};                    \r\n                        container.name = item.FOLDER_NAME;\r\n                        container.value = item.FOLDER_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((items) => {\r\n                        const container = {};                    \r\n                        container.name = items.FOLDER_NAME;\r\n                        container.value = items.FOLDER_ID.toString();                    \r\n                        return container;\r\n                    })                    \r\n                }  \r\n                if (filtername == \"CREATED_BY\") {\r\n                        vm.leftSearchFields[3].listOptions =json.map((value) => {\r\n                        const container = {};                    \r\n                        container.name = value.CREATED_BY;\r\n                        container.value = value.CREATED_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((values) => {\r\n                        const container = {};                    \r\n                        container.name = values.CREATED_BY;\r\n                        container.value = values.CREATED_ID.toString();                    \r\n                        return container;\r\n                    }) \r\n                } \r\n                if (filtername == \"MODIFIED_BY\") {\r\n                        vm.leftSearchFields[7].listOptions =json.map((data) => {\r\n                        const container = {};                    \r\n                        container.name = data.MODIFIED_BY;\r\n                        container.value = data.MODIFIED_ID.toString();                    \r\n                        return container;\r\n                    })                   \r\n                        vm.LeadStatusList = json.map((dataval) => {\r\n                        const container = {};                    \r\n                        container.name = dataval.MODIFIED_BY;\r\n                        container.value = dataval.MODIFIED_ID.toString();                    \r\n                        return container;\r\n                    }) \r\n                }   \r\n               \r\n\r\n            }\r\n        \r\n    });\r\n}\r\nexport default { buttons, topsearchSchema, listActions, bindleftCommonSearchdropdown };\r\n","<template>\r\n    <div>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"row\">\r\n            <div class=\"col-2 mt-2\">\r\n                <LeftColumn />\r\n            </div>\r\n            <div class=\"col-10\">\r\n                <tg-list :IsShowAction=\"false\" :showCheckBox=\"true\" ModuleName=\"Dynamic_Reporting\" SubModuleCode=\"Dynamic_Reporting\"\r\n                    IdentityColumn=\"Id\" :HeaderText=\"$t('PaymentGateway')\" :ListData=\"PaymentGatewayData\" :HeaderData=\"filteredHeaders\"\r\n                    :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecords\" :IsSearchFieldsOnTop=\"false\"\r\n                    SearchPosition=\"top\" :SearchFields=\"topSearchFields\"\r\n                    :RenderRowActionMethod=\"renderActions\" :ListDataCallBackFunction=\"FetchData\"\r\n                    :IsFilterApplied=\"searchCondition ? true : false\" v-on:LeftsearchButtonClick=\"leftCommonSearch\" :LegendArray=\"[]\" sourcetype=\"\"\r\n                    v-on:PagerButtonClick=\"pagerMethod\" v-on:HeaderButtonClick=\"commonHeaderButtonClick\"\r\n                    v-on:ActionButtonClick=\"actionButtonClick\" v-on:SortdataButtonClick=\"sortdata\" :NorecordfoundText=\"$t('NoRecordfound')\">\r\n                \r\n                    <template v-slot:slotdata=\"{ data }\">\r\n                        <!-- {{ data.row.fv }}\r\n                        <template v-if=\"data.column.COLUMN_NAME == 'template_category_id'\">\r\n                            <template  v-if=\"data.row.template_category_id.Name != null\">\r\n                                <div>{{ data.row.template_category_id.Name }}</div>\r\n                            </template>\r\n                        </template> -->\r\n                        <template v-if=\"data.column.COLUMN_NAME == 'status_id'\"> \r\n                            <listing-status :isfor=\"'COMPANYSETUP_UPDATE'\" v-if=\"isCRMShowStausDrop(data.row.status_id, 'COMPANYSETUP_UPDATE')\"\r\n                                ref=\"updatestatus\" v-bind:dataid=\"data.row.Id\" data-controller=\"COMPANYSETUP_UPDATE\"\r\n                                v-bind:statuslist=\"StatusListForListing\" v-bind:item=\"data.row.Id\" data-action=\"index\" module=\"PaymentGateway\" subModule=\"PaymentGateway\"\r\n                                v-bind:dataselected=\"data.row.status_id.value == 1001 ? 'Active' : 'InActive'\"\r\n                                v-bind:callbackfunction=\"FetchData\" v-bind:isselectedvaluestring=\"true\">\r\n                            </listing-status>\r\n                        </template>\r\n                    </template>\r\n                </tg-list>\r\n            </div>\r\n        </div>\r\n        <!---modal popup-->\r\n        <AddCompanySetup :recordId=\"recordId\" :title=\"$t('Manage Payment Gateway')\" v-if=\"showPaymentGateway\" v-on:close=\"showPaymentGateway=false;recordId=0\" v-on:addReloadData=\"FetchData();showPaymentGateway=false;recordId=0\" v-bind:moduleName=\"'PaymentGateway'\" v-bind:emitName=\"'addReloadData'\" v-bind:addApiUrl=\"'/PaymentGateway/add'\" v-bind:subModule=\"'PaymentGateway'\" />\r\n    </div>\r\n</template>\r\n<script>\r\nimport PaymentGatewayDataService from \"@/services/DataService\";\r\nimport Schema from \"@/views/Company/PaymentGateway/PaymentGatewaySchema\";\r\nimport AddCompanySetup from \"@/components/Modals/AddCompanySetup.vue\";\r\nimport LeftColumn from \"../LeftColumn.vue\";\r\nexport default {\r\n    components: {\r\n        LeftColumn,\r\n        AddCompanySetup,\r\n    },\r\n    props: {\r\n        sourcetype:\r\n        {\r\n            type: String,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            recordId:0,\r\n            showPaymentGateway:false,\r\n            noRecord:false,\r\n            isLoading: false,\r\n            CompanyId: null,\r\n            PaymentGatewayData: [],\r\n            TotalRecords: 0,\r\n            listheaderbuttons: Schema.buttons,\r\n            topSearchFields: Schema.topsearchSchema,\r\n            ShowManageView: false,\r\n            ShowAddCustomReportView: false,\r\n            PageSize: 10,\r\n            PageNumber: 1,\r\n            isPaged: 1,\r\n            TotalPages: 0,\r\n            listActions: Schema.listActions,\r\n            searchCondition: '',\r\n            conditionForInstantSearch: \"\",\r\n            SortBy: '',\r\n            SortExp: '',\r\n            showsharereportview: false,\r\n            showemailreportview: false,\r\n            showschedulereportview: false,\r\n            ReportID: null,\r\n            reportname: '',\r\n            reportid: '',\r\n            foldername: '',\r\n            folderid: '',\r\n            LeadStatusList: [],\r\n            searchcondition: '',\r\n            MODULENAME: null,\r\n            SUBMODULECODE: null,\r\n            privilegeParams: null,\r\n            UserName:'',\r\n            Password:'',\r\n            Signature:'',\r\n            sharetype: '',\r\n            // Headers: [],\r\n            filteredHeaders: [],\r\n            StatusListForListing: [\r\n                { \r\n                    STATUS: 'Active', \r\n                    STATUS_ID: 1001, \r\n                    STATUS_COLOR: \"#ffffff\", \r\n                    STATUS_BG_COLOR: \"#28a745\" \r\n                },{ \r\n                    STATUS: 'InActive', \r\n                    STATUS_ID: 1002, \r\n                    STATUS_COLOR: \"#ffffff\", \r\n                    STATUS_BG_COLOR: \"#d72435\"\r\n                }\r\n            ],\r\n        }\r\n    },\r\n    async created() {\r\n        var ths = this;\r\n        ths.CompanyId = ths.GetUserInfo.CompanyId;\r\n        ths.privilegeParams = `controller=PaymentGateway&action=`;\r\n        await ths.FetchData();\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'FOLDER_NAME')\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'CREATED_BY')\r\n        Schema.bindleftCommonSearchdropdown(ths, 'Dynamic_Reporting', 'MODIFIED_BY')\r\n        ths.getStatuslistForListing(\"Dynamic_Reporting\", \"en\");\r\n    },\r\n    computed: {\r\n        filteredUserData() {\r\n            return this.vueObj.UserData.map((item) => {\r\n            const filteredItem = { ...item };\r\n\r\n            // Check if USER_EMP_ID is null or empty, then replace with '--'\r\n            if (filteredItem.USER_EMP_ID === null || filteredItem.USER_EMP_ID === '') {\r\n                filteredItem.USER_EMP_ID = '--';\r\n            }\r\n\r\n            return filteredItem;\r\n            });\r\n        },\r\n        \r\n    },\r\n    mounted() {\r\n        Schema.topsearchSchema.forEach(item => {\r\n            item.value = '';\r\n            item.isSearch = false;\r\n        })\r\n    },\r\n    methods: {\r\n        renderActions: function (row) {\r\n            console.log(row);\r\n            // var self = this;\r\n            // let rtnActionArray = [];\r\n            // self.listActions.forEach(actionItem => {\r\n            //     let action = { ...actionItem };\r\n            //     switch (action.title) {\r\n            //         case 'View':\r\n            //             action.isVisible = row.ACCESS != null ? true : true;\r\n            //             break;\r\n            //         case 'Send Email':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Schedule':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Share':\r\n            //             action.isVisible = row.ACCESS != 1 && row.ACCESS != 2 ? true : false;\r\n            //             break;\r\n            //         case 'Edit':\r\n            //             action.isVisible = row.ACCESS != 1 ? true : false;\r\n            //             break;\r\n            //         default:\r\n            //             action.isVisible = true;\r\n            //             break;\r\n            //     }\r\n            //     rtnActionArray.push(action);\r\n            // });\r\n            // return rtnActionArray;\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            switch (event.callbackfunction) {\r\n                case \"commonDeleteData\":\r\n                    this.commonDeleteData();\r\n                    break;\r\n                case \"ActiveMultipleListing\":\r\n                    this.UpdateStatus(\"Active\");\r\n                    break;\r\n                case \"InactiveMultipleListing\":\r\n                    this.UpdateStatus(\"InActive\");\r\n                    break;\r\n                case \"AddDepartment\":\r\n                    this.showPaymentGateway = true\r\n                    break;\r\n            }\r\n        },\r\n        actionButtonClick: function (callbackfunction, item, index, event) {\r\n            var vm = this;\r\n            switch (callbackfunction) {\r\n                case 'sharereport':\r\n                    var vm = this;\r\n                    PaymentGatewayDataService.CheckPrivilege(vm.privilegeParams+'ShareReport').then((response)=>{\r\n                        if(response.data){\r\n                            vm.sharetype = callbackfunction\r\n                            vm.folderid = item.FOLDER_ID;\r\n                            vm.ReportID = item.REPORT_ID;\r\n                            vm.foldername = item.REPORTNAME;\r\n                            vm.showsharereportview = true;\r\n                            $(\"#modalshareview\").modal('show');\r\n                            setTimeout(function () {\r\n                                $(\"#modalshareview\").modal('show');\r\n                                setTimeout(function () {\r\n                                    vm.SetBootstraptoolTip();\r\n                                }, 200);\r\n                            }, 1000);\r\n                        }\r\n                        else{\r\n                            vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                            return false;\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'sendemail':\r\n                    vm.sendemail(item.REPORT_ID, item.MODULENAME, item.SUBMODULECODE);\r\n                    break;\r\n                case 'editreport':\r\n                    vm.editreport(item);\r\n                    break;\r\n                case 'setschedule':\r\n                    vm.setschedule(item.REPORT_ID);\r\n                    break;\r\n                case 'ViewReport':\r\n                    vm.ViewReport(item.REPORT_ID, item.ACCESS, item.FOLDER_ID);\r\n                    break;\r\n            }\r\n        },\r\n        editreport: function (data) {\r\n            var vm = this;\r\n            PaymentGatewayDataService.CheckPrivilege(vm.privilegeParams+'Update').then((response)=>{\r\n                if(response.data){\r\n                    vm.$router.push({\r\n                        name: 'EditDataReport',\r\n                        params: {\r\n                            Modulename: data.MODULENAME, Submodulecode: data.SUBMODULECODE, ReportName: data.REPORTNAME, ReportID: data.REPORT_ID,\r\n                            Module_Id: data.MODULE_ID, Folder_Id: data.FOLDER_ID, Sub_Module_Id: data.Sub_Module_Id, Version: vm.Version, Action: 'Edit'\r\n                        }\r\n                    });\r\n                }\r\n                else{\r\n                    vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        ViewReport: function (ReportID, ACCESS, FolderID) {\r\n            var vm = this;\r\n            vm.$router.push('/Report/viewcustomreport/' + btoa(JSON.stringify({ ReportID: ReportID, ACCESS: ACCESS , Folder_Id: FolderID })))\r\n\r\n        },\r\n        sortdata: async function (s) {\r\n            var SortDir = \"sort tb_headerSortDown\";\r\n            this.SortBy = s;\r\n            if (s === this.SortBy) {\r\n                if (this.SortExp == \"\") {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n                else if (this.SortExp == \"ASC\") {\r\n                    this.SortExp = \"DESC\";\r\n                    SortDir = \"sort tb_headerSortUp\";\r\n                }\r\n                else {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n            }\r\n\r\n            await this.FetchData();\r\n            $(\"#th-\" + s + '  span:first-child').attr(\"class\", SortDir);\r\n        },\r\n        pagerMethod: async function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            await this.FetchData();\r\n        },\r\n        leftCommonSearch: async function (value) {\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchCondition;\r\n            }\r\n            else {\r\n                this.searchCondition = \"\";\r\n            }\r\n\r\n            await this.FetchData();\r\n        },\r\n        ManageFolder: function () {\r\n            var vm = this;\r\n            PaymentGatewayDataService.CheckPrivilege(vm.privilegeParams+'FolderListing').then((response)=>{\r\n                if(response.data){\r\n                    vm.ShowManageView = true;\r\n                    $(\"#modalManageView\").modal('show');\r\n                    setTimeout(function () {\r\n                        $(\"#modalManageView\").modal('show');\r\n                        setTimeout(function () {\r\n                            vm.SetBootstraptoolTip();\r\n                        }, 200);\r\n                    }, 1000);\r\n                    vm.$refs.managefolder?.GetViewList();\r\n                }\r\n                else{\r\n                    vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        AddDesignation: function () {\r\n            var vm = this;\r\n            console.log(vm, \"Add\");\r\n        },\r\n        commonDeleteData: function (event) {\r\n            var vm = this;\r\n            // PaymentGatewayDataService.CheckPrivilege(vm.privilegeParams+'Delete').then((response)=>{\r\n            //     if(response.data){\r\n                    var val = \"\";\r\n                    $('.chkItems:checkbox:checked').not(\"[id^='chkAll_0']\").each(function () {\r\n                        if (val.length > 0)\r\n                            val += ',';\r\n                        val += $(this).val();\r\n                    });\r\n                    if (val.length > 0) {\r\n                        vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Report\")), function () {\r\n                            var postJSON = {\r\n                                ids: val,\r\n                                moduleName: \"PaymentGateway\",\r\n                                subModuleCode: \"PaymentGateway\",\r\n                                refCode: \"COMPANYSETUP_DELETE\"\r\n                            };\r\n                            var objectPostString = JSON.stringify(postJSON);\r\n                            PaymentGatewayDataService.CommonDeleteData(objectPostString).then(async function (response) {\r\n                                if (response.status == 200) {\r\n                                    $('.chkItems:checkbox:checked,#chkAll_0').prop(\"checked\", false).removeAttr('checked');\r\n                                    $(\"#DeleteMultiple\").addClass(\"disabled\");\r\n                                    vm.ShowAlert(vm.$t('DeletedSuccessfully', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                    vm.PageNumber = parseInt(vm.PageNumber) - 1;\r\n                                    if (vm.PageNumber <= 0) {\r\n                                        vm.PageNumber = 1;\r\n                                    }\r\n                                    await vm.FetchData();\r\n                                }\r\n                                else {\r\n                                    vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                                }\r\n\r\n                            },);\r\n                        });\r\n                    }\r\n                    else {\r\n                        vm.ShowAlert(vm.$t(\"Selectanyrecordtodelete\"));\r\n                    }\r\n            //     }\r\n            //     else\r\n            //     {\r\n            //         vm.ShowAlert(vm.$t('UnAuthorized'), \"warning\", true, \"Alert\");\r\n            //         return false;\r\n            //     }\r\n            // })\r\n        },\r\n        UpdateStatus: async function (status) {\r\n            var vm = this;\r\n            if (status == 'Active') {\r\n                status = 1001;\r\n            } else {\r\n                status = 1002;\r\n            }\r\n            var val = \"\";\r\n            $('.chkItems:checkbox:checked').not(\"[id^='chkAll']\").each(function () {\r\n                if (val.length > 0) {\r\n                    val += ',';\r\n                }\r\n                val += $(this).val();\r\n            });\r\n            if (val.length > 0) {\r\n                vm.confirmR(vm.$t(\"AreYouSureToUpdateStatus\"), true, (vm.$t(\"update\") + \"  \" + vm.$t(\"status\")), function () {\r\n                    // Send IDs as a comma-separated string\r\n                    var postJSON = {\r\n                        ID: val,\r\n                        StatusId: status,\r\n                        IsFor: \"COMPANYSETUP_UPDATE\",\r\n                        Module: \"PaymentGateway\",\r\n                        Submodule: \"PaymentGateway\",\r\n                    };\r\n\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    console.log(objectPostString);\r\n                    PaymentGatewayDataService.CommonUpdateStatus(objectPostString).then(response => {\r\n                        if (response.status == 200) {\r\n                            $('.chkItems:checkbox:checked').prop(\"checked\", false).removeAttr('checked');\r\n                            vm.ShowAlert(vm.$t('RecordUpdatedSuccessfully', [vm.$t('Report')]), \"success\", true, vm.$t(\"Alert\"));\r\n                            vm.FetchData();\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        getRequestParams: function (pageNumber, pageSize, sortBy, sortExp, isPaged, searchcondition) {\r\n            let params = {};\r\n            if (pageNumber) { params[\"pageNumber\"] = pageNumber; }\r\n            if (searchcondition) { params[\"searchcondition\"] = searchcondition; }\r\n            if (isPaged) { params[\"is_paged\"] = isPaged; }\r\n            if (sortBy) { params[\"sortBy\"] = sortBy; }\r\n            if (sortExp) { params[\"sortExp\"] = sortExp; }\r\n            if (pageSize) { params[\"pageSize\"] = pageSize; }\r\n            return params;\r\n        },\r\n        clickEventOfColumn: function (row, column) {\r\n            if (column.COLUMN_NAME == 'title') {\r\n                this.recordId = row.PaymentGateway_id\r\n                this.showPaymentGateway = true\r\n            }\r\n            if (column.COLUMN_NAME == 'USERNAME') {\r\n                this.$router.push({ name: 'viewcustomreport', params: { ReportID: row.REPORT_ID, ACCESS: row.ACCESS } });\r\n            }\r\n        },\r\n        FetchData: async function () {\r\n            // const params = this.getRequestParams(this.pageNumber, this.pageSize, this.sortBy, this.sortExp, this.isPaged, this.searchCondition);\r\n            var vueObj = this;\r\n            this.isLoading = true;            \r\n            var url=`CompanyId=${vueObj.CompanyId}&pageSize=${vueObj.PageSize}&pageNum=${vueObj.PageNumber}&sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}&searchQuery=${vueObj.searchCondition.trim()}`;\r\n            await PaymentGatewayDataService.PaymentGatewayListing(url)\r\n                .then(function (response) {\r\n                    vueObj.Headers = response.data.FieldSchema;\r\n                    const filteredColumnNames = [\"payment_gateway_code\", \"description\", \"status_id\"];\r\n                    // Filter the original list based on the desired COLUMN_NAME values\r\n                    vueObj.filteredHeaders =  vueObj.Headers.filter(obj => filteredColumnNames.includes(obj.COLUMN_NAME));\r\n                    vueObj.filteredHeaders.forEach((column) => {\r\n                        column.settings = null;\r\n                        if (column.COLUMN_NAME == \"payment_gateway_code\") {\r\n                            column.settings = {\r\n                                clickEvent: vueObj.clickEventOfColumn,\r\n                                formatter: vueObj.columnDataFormatter,\r\n                            };\r\n                        }                        \r\n                        if (column.COLUMN_NAME == \"status_id\") {\r\n                            column.settings = {\r\n                                isInSlot: true\r\n                            };\r\n                        }\r\n                    });\r\n                    // &searchCondition=${vueObj.searchCondition}&isPaged=${vueObj.isPaged}&sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}\r\n                    if (response.data.Data != \"\" && response.data.Data != null) {\r\n                        if (response.data.Data.length > 0) {\r\n                            vueObj.PaymentGatewayData = response.data.Data;\r\n                            vueObj.PaymentGatewayData.forEach(item => {\r\n                                item.payment_gateway_code = JSON.parse(item.payment_gateway_code).value;\r\n                                item.created_by = JSON.parse(item.created_by);\r\n                                item.modified_by = JSON.parse(item.modified_by);\r\n                                item.status_id = JSON.parse(item.status_id);\r\n                            });\r\n                            \r\n                            vueObj.TotalRecords = vueObj.PaymentGatewayData[0].total_records;\r\n                            vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                            vueObj.CurrentPage = vueObj.PageNumber;\r\n                            vueObj.noRecord = false;\r\n                        } else {\r\n                            vueObj.PaymentGatewayData = [];\r\n                            vueObj.noRecord = true;\r\n                            vueObj.TotalRecords = 0\r\n                        }\r\n                        if (localStorage.SavedParameters != undefined) {\r\n                            localStorage.removeItem(\"SavedParameters\");\r\n                        }\r\n                    }                    \r\n                    else {\r\n                        vueObj.noRecord = true;\r\n                        vueObj.PaymentGatewayData = [];\r\n                        vueObj.TotalRecords = 0\r\n                    }\r\n                    setTimeout(function () {\r\n                        vueObj.ResponsiveDataTable('tablelistingdata')\r\n                    }, 500);\r\n                    vueObj.isLoading = false;\r\n            });\r\n        },\r\n        closeModalSharePopup: function () {\r\n            $(\"#modalshareview\").modal('hide');\r\n            this.showsharereportview = false;\r\n        },\r\n        getStatuslistForListing: function (StatusType, lang) {\r\n            var vm = this;\r\n            var url =\"langCode=\" + lang + \"&statusType=\" + StatusType + \"&hasglobal=true\";\r\n                PaymentGatewayDataService.statusdropdown(url).then(function (response) {\r\n                if (response.data.status == \"Success\") {\r\n                    var json = response.data.result;\r\n                    vm.StatusListForListing = json.data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=00576450\"\nimport script from \"./List.vue?vue&type=script&lang=js\"\nexport * from \"./List.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}