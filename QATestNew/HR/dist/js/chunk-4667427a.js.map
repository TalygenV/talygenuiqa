{"version":3,"sources":["webpack:///./src/views/HR/Group/GroupList.vue?51b6","webpack:///./src/views/HR/Group/Schema.js","webpack:///src/views/HR/Group/GroupList.vue","webpack:///./src/views/HR/Group/GroupList.vue?a9cd","webpack:///./src/views/HR/Group/GroupList.vue","webpack:///./src/views/HR/Group/OpwnGroupModel.vue?edaf","webpack:///src/views/HR/Group/OpwnGroupModel.vue","webpack:///./src/views/HR/Group/OpwnGroupModel.vue?22e5","webpack:///./src/views/HR/Group/OpwnGroupModel.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isLoading","renderActions","GroupData","Headers","listheaderbuttons","TotalRecords","leftSearchFields","FetchData","SortExp","SortBy","$t","on","actionButtonClick","leftCommonSearch","pagerMethod","commonHeaderButtonClick","sortdata","HeaderText","_e","staticRenderFns","buttons","title","iconClass","callbackfunction","additionalClass","isdisabled","isvisible","checkPrivilege","id","isEnabledOnSelectedRow","listActions","href","icon","additionalSpan","components","AddGroup","data","IsGroupOpen","fieldName","fieldType","fieldSearchConditionName","paramName","isSearch","value","listOptions","groupid","groupname","PageSize","PageNumber","CurrentPage","TotalPages","searchCondition","Schema","CompanyId","Userid","created","vm","GetUserInfo","ID","updated","divElement","document","getElementsByClassName","lastChild","className","spanElement","createElement","textContent","appendChild","mounted","ths","forEach","item","methods","index","event","openAddGroup","group_id","isPaged","searchConditionJson","commonDeleteData","sortBy","sortExp","row","self","rtnActionArray","actionItem","action","isVisible","push","vueObj","params","DataServices","GroupListing","then","response","length","created_at","formatTimestamp","totalrecords","Math","ceil","input","date","moment","formattedDate","format","val","$","not","each","confirmR","postJSON","ids","companyId","userId","moduleName","subModuleCode","objectPostString","JSON","stringify","CommonCommonDelete","status","ShowAlert","groupId","TextHeader","component","staticClass","_v","_s","Close","$parent","domProps","FormSchema","onSubmit","props","Type","String","Required","layoutType","Data","astype","label","name","placeholder","validationRules","config","onChange","IsGroupExists","disabled","mode","options","max","type","class","text","onClick","OnSubmit","GetRecruiters","FetchAddEditGroupData","recruiterArray","group_name","recruiterData","element","obj","GetRecruiterList","DATA","formfields","jsonobj","UserId","GroupID","undefined","Nametext","GroupName","RecruiterID","Recruiters","Groupdate","Date","SaveRecruiterGroup","Status","GroupExists"],"mappings":"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","file":"js/chunk-4667427a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('tg-list',{attrs:{\"IsShowAction\":true,\"ModuleName\":\"HR\",\"SubModuleCode\":\"Group\",\"LegendArray\":[],\"RenderRowActionMethod\":_vm.renderActions,\"widgets\":[],\"IdentityColumn\":\"group_id\",\"listType\":['List'],\"ListData\":_vm.GroupData,\"HeaderData\":_vm.Headers,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecords,\"SearchFields\":_vm.leftSearchFields,\"IsSearchFieldsOnTop\":\"true\",\"SearchPosition\":\"top\",\"ListDataCallBackFunction\":_vm.FetchData,\"showCheckBox\":true,\"SortExp\":_vm.SortExp,\"SortBy\":_vm.SortBy,\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"ActionButtonClick\":_vm.actionButtonClick,\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"SortdataButtonClick\":_vm.sortdata}}),(_vm.IsGroupOpen)?_c('AddGroup',{attrs:{\"HeaderText\":_vm.HeaderText}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import DataServices from \"@/services/DataService\";\r\nlet buttons =\r\n    [     \r\n        {\r\n            title: 'Add Group',\r\n            iconClass: 'fa-plus',\r\n            callbackfunction: 'openAddGroup',\r\n            additionalClass: '',\r\n            isdisabled: false,\r\n            isvisible: true,\r\n            checkPrivilege: false\r\n        },\r\n        {\r\n            id: 'DeleteMultiple',\r\n            title: 'Delete',\r\n            iconClass: 'fa-trash-o',\r\n            isEnabledOnSelectedRow: true,\r\n            callbackfunction: 'commonDeleteData',\r\n            isdisabled: true,\r\n            isvisible: true,\r\n            isEnabledOnSelectedRow: true\r\n        }\r\n    ];\r\nlet listActions = [\r\n    {\r\n        title:'Edit',   \r\n        href: 'javascript:void(0)',         \r\n        icon: 'fa fa-pencil action-icon',\r\n        callbackfunction:'EditGroup',\r\n        additionalSpan:''\r\n    }\r\n\r\n];\r\n\r\nexport default { buttons,  listActions };","<template>\r\n    <section>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <tg-list :IsShowAction=\"true\" ModuleName=\"HR\" SubModuleCode=\"Group\" :LegendArray=\"[]\"\r\n            :RenderRowActionMethod=\"renderActions\" v-on:ActionButtonClick=\"actionButtonClick\" :widgets=\"[]\"\r\n            IdentityColumn=\"group_id\" :listType=\"['List']\" :ListData=\"GroupData\" :HeaderData=\"Headers\"\r\n            :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecords\" :SearchFields=\"leftSearchFields\"\r\n            IsSearchFieldsOnTop=\"true\" SearchPosition=\"top\" :ListDataCallBackFunction=\"FetchData\" :showCheckBox=\"true\"\r\n            :SortExp=\"SortExp\" :SortBy=\"SortBy\" :NorecordfoundText=\"$t('NoRecordfound')\"\r\n            v-on:LeftsearchButtonClick=\"leftCommonSearch\" v-on:PagerButtonClick=\"pagerMethod\"\r\n            v-on:HeaderButtonClick=\"commonHeaderButtonClick\" v-on:SortdataButtonClick=\"sortdata\">\r\n            \r\n        </tg-list>\r\n        <AddGroup v-if=\"IsGroupOpen\" :HeaderText=\"HeaderText\"></AddGroup>\r\n    </section>\r\n</template>\r\n<script>\r\nimport Schema from \"./Schema\"\r\nimport DataServices from \"@/services/DataService\";\r\nimport AddGroup from './OpwnGroupModel.vue'\r\nimport moment from 'moment'\r\nexport default {\r\n    components: { AddGroup },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            IsGroupOpen: false,\r\n            Headers: [{\r\n                \"COLUMN_NAME\": \"group_name\",\r\n                \"DATA_TYPE\": \"text\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": 'Group Name',\r\n                \"DISPLAY_ORDER\": 1,\r\n\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"recruiter_id\",\r\n                \"DATA_TYPE\": \"text\",\r\n                \"SORTABLE\": false,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": 'Team',\r\n                \"DISPLAY_ORDER\": 2\r\n            },\r\n            {\r\n                \"COLUMN_NAME\": \"created_at\",\r\n                \"DATA_TYPE\": \"Date\",\r\n                \"SORTABLE\": true,\r\n                \"VISIBLE\": true,\r\n                \"DISPLAY_NAME\": 'Add/Update On',\r\n                \"DISPLAY_ORDER\": 3,\r\n            }\r\n            ],\r\n            leftSearchFields: [{\r\n                fieldName: 'Search',\r\n                fieldType: \"text\",\r\n                fieldSearchConditionName: [''],\r\n                paramName:\"groupname\",\r\n                isSearch: true,\r\n                value: \"\",\r\n                listOptions: []\r\n            }],\r\n            groupid: 0,\r\n            groupname: '',\r\n            SortBy: '',\r\n            SortExp: '',\r\n            PageSize: \"10\",\r\n            PageNumber: \"1\",\r\n            TotalRecords: 0,\r\n            CurrentPage: 1,\r\n            TotalPages: 0,           \r\n            searchCondition:'',\r\n            GroupData: [],\r\n            listheaderbuttons: Schema.buttons,\r\n            listActions: Schema.listActions,\r\n            CompanyId: null,\r\n            Userid: null,\r\n            HeaderText: ''\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        vm.CompanyId = this.GetUserInfo.CompanyId;\r\n        vm.Userid = this.GetUserInfo.ID;\r\n        await vm.FetchData();\r\n    },\r\n    updated() {\r\n        const divElement = document.getElementsByClassName('theme-primary partition p-actions-expand')\r\n        if (divElement[0] && divElement[0].lastChild.className != 'p-name text-white') {\r\n            const spanElement = document.createElement('span')\r\n            spanElement.className = \"p-name text-white\"\r\n            spanElement.textContent = this.$t('GroupListing');\r\n\r\n            divElement[0].appendChild(spanElement);\r\n        }\r\n    },\r\n    mounted() {\r\n        var ths = this;\r\n        ths.leftSearchFields.forEach(item => {\r\n            item.value = '';\r\n            item.isSearch = false;\r\n        })\r\n    },\r\n    methods: {\r\n        actionButtonClick: function (callbackfunction, item, index, event) {\r\n            switch (callbackfunction) {\r\n                case \"EditGroup\":\r\n                    this.openAddGroup(item.group_id, 'EditGroup');\r\n                    break;\r\n            }\r\n        },\r\n        leftCommonSearch: function (value) {\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                this.searchCondition = value.searchConditionJson;\r\n            }\r\n            else {\r\n                this.searchCondition = \"\";\r\n            }\r\n            this.FetchData();\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            switch (event.callbackfunction) {\r\n                case \"openAddGroup\":\r\n                    this.openAddGroup(0, 'AddGroup');\r\n                    break;\r\n                case \"commonDeleteData\":\r\n                    this.commonDeleteData();\r\n                    break;\r\n            }\r\n        },\r\n        sortdata: function (sortBy) {\r\n            this.SortBy = sortBy;\r\n            var sortExp = 'ASC';\r\n            if (this.SortExp == 'ASC') {\r\n                sortExp = 'DESC';\r\n            }\r\n            this.SortExp = sortExp;\r\n            this.SortBy = sortBy;\r\n            this.SortExp = sortExp;\r\n            this.PageNumber = 1;\r\n            this.FetchData();\r\n        },\r\n        pagerMethod: function (value) {            \r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            this.FetchData();\r\n        },\r\n        renderActions: function (row) {\r\n            var self = this;\r\n            let rtnActionArray = [];\r\n            self.listActions.forEach(actionItem => {\r\n                let action = { ...actionItem };\r\n                switch (action.title) {\r\n                    case 'Edit':\r\n                        action.isVisible = true;\r\n                        break;\r\n                    default: {\r\n                        action.isVisible = true;\r\n                    }\r\n                }\r\n                rtnActionArray.push(action);\r\n            });\r\n            return rtnActionArray;\r\n        },\r\n        FetchData: async function () {\r\n            var vueObj = this;\r\n            vueObj.isLoading = true;\r\n            var params = `groupid=${vueObj.groupid}&pageSize=${vueObj.PageSize}&pageNum=${vueObj.PageNumber}&sortBy=${vueObj.SortBy}&sortExp=${vueObj.SortExp}&${vueObj.searchCondition}`\r\n            await DataServices.GroupListing(params).then((response) => {\r\n                if (response.data && response.data.data.length > 0) {\r\n                    vueObj.isLoading = false;\r\n                    vueObj.GroupData = response.data.data;\r\n                    vueObj.GroupData.forEach((item) => {\r\n                        if (item.created_at) {\r\n                            item.created_at= vueObj.formatTimestamp(item.created_at)\r\n                        }\r\n                    })\r\n                    vueObj.TotalRecords = response.data.data[0].totalrecords;\r\n                    vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                    vueObj.CurrentPage = vueObj.PageNumber;\r\n                    vueObj.listheaderbuttons[1].isdisabled = true;\r\n                }\r\n            })\r\n        },\r\n        formatTimestamp: function (input) {                        \r\n            const date = moment(input);\r\n            const formattedDate = date.format('MM/DD/YYYY h:mm A');\r\n            return formattedDate;\r\n        },\r\n        commonDeleteData: function (id) {\r\n            var vm = this;\r\n            var val = \"\";\r\n            vm.isLoading = true;\r\n            if (id == null) {\r\n                $('.chkItems:checkbox:checked').not(\"[id^='chkAll_0']\").each(function () {\r\n                    if (val.length > 0)\r\n                        val += ',';\r\n                    val += $(this).val();\r\n                });\r\n            }\r\n            else {\r\n                val = id;\r\n            }\r\n            if (val != null) {\r\n                vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Group\")), function () {\r\n                    var postJSON = {\r\n                        ids: val,\r\n                        companyId: vm.CompanyId,\r\n                        userId: vm.Userid,\r\n                        moduleName: \"HIRING\",\r\n                        subModuleCode: \"HR_RECRUITER_GROUP\"\r\n                    };\r\n                    var objectPostString = JSON.stringify(postJSON);\r\n                    DataServices.CommonCommonDelete(objectPostString).then(function (response) {\r\n                        if (response.status == 200) {\r\n                            vm.ShowAlert(vm.$t('DeletedSuccess', [vm.$t('Group')]), \"success\", true, vm.$t(\"Alert\"));\r\n                            vm.FetchData();\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t('DeletedError', [vm.$t('Group')]), \"Success\", true, vm.$t(\"Alert\"));\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                vm.ShowAlert(vm.$t(\"Selectanyrecordtodelete\"));\r\n            }\r\n            vm.isLoading = false;\r\n        },\r\n        openAddGroup: function (groupId, TextHeader) {\r\n            this.groupId = groupId;\r\n            this.HeaderText = TextHeader;\r\n            this.IsGroupOpen = true;\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GroupList.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GroupList.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./GroupList.vue?vue&type=template&id=12679ff0\"\nimport script from \"./GroupList.vue?vue&type=script&lang=js\"\nexport * from \"./GroupList.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full  d-flex\"},[_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t(_vm.HeaderText)))]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('span',{staticClass:\"user-guide\"},[_c('a',{staticClass:\"ancuserguide text-white\",attrs:{\"data-toggle\":\"collapse\",\"href\":\"#collapseReplyUG\",\"role\":\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseExample\"}},[_c('em',{staticClass:\"fa fa-files-o pr-2\"}),_vm._v(_vm._s(_vm.$t('GuideForUser')))]),_c('div',{staticClass:\"divancuserguide collapse overflow-auto\",attrs:{\"id\":\"collapseReplyUG\"}},[(_vm.$parent.groupId>0)?_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarreplyuserguideMangeView\"}},[_c('div',{staticClass:\"con\",domProps:{\"innerHTML\":_vm._s(_vm.$t('UgHiringGroupListEdit'))}})]):_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarreplyuserguideMangeView\"}},[_c('div',{staticClass:\"con\",domProps:{\"innerHTML\":_vm._s(_vm.$t('UgHiringGroupListAdd'))}})])])])]),_c('div',{staticClass:\"modal-body\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}})],1)])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"my-popups\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"modal d-block\">\r\n            <div class=\"modal-dialog modal-dialog-centered\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header theme-primary partition-full  d-flex\">\r\n                        <h4 class=\"modal-title\">{{ $t(HeaderText) }}</h4>\r\n                        <button type=\"button\" class=\"close\" v-on:click=\"Close\">\r\n                            <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                        </button>\r\n                        <span class=\"user-guide\">\r\n                            <a class=\"ancuserguide text-white\" data-toggle=\"collapse\" href=\"#collapseReplyUG\"\r\n                                role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"> <em\r\n                                    class=\"fa fa-files-o pr-2\"></em>{{ $t('GuideForUser') }}</a>\r\n                            <div id=\"collapseReplyUG\" class=\"divancuserguide collapse overflow-auto\">\r\n                                <div v-if=\"$parent.groupId>0\" id=\"scrollbarreplyuserguideMangeView\" class=\"custom-scrollbar-js\">\r\n                                    <div class=\"con\" v-html=\"$t('UgHiringGroupListEdit')\"></div>\r\n                                </div>\r\n                                <div v-else id=\"scrollbarreplyuserguideMangeView\" class=\"custom-scrollbar-js\">\r\n                                    <div class=\"con\" v-html=\"$t('UgHiringGroupListAdd')\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\"\r\n                            v-on:OnSubmit=\"onSubmit\"></dynamic-form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nexport default {\r\n    props:{\r\n        HeaderText:{\r\n            Type:String,\r\n            Required:true\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                    {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('GroupName'),\r\n                            name: \"GroupName\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('GroupName'),\r\n                            validationRules: {\r\n                                \"required\": true\r\n                            },\r\n                            config: {\r\n                                onChange: this.IsGroupExists,\r\n                            },\r\n                                                        \r\n                            disabled: false,\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"CustomSelectField\",\r\n                            mode: \"tag\",\r\n                            label: this.$t('Recruiters'),\r\n                            name: \"Recruiters\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Select Recruiters'),\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            isLoading: false,            \r\n            CompanyId:null,\r\n            Userid:null,\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    isVisible:true,                    \r\n                    onClick: this.OnSubmit\r\n                },\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-send pr-2'></i>Update\",\r\n                    isVisible:false, \r\n                    onClick: this.OnSubmit\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close,\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    created:async function () {        \r\n        var vm=this;\r\n        vm.CompanyId= this.GetUserInfo.CompanyId;\r\n        vm.Userid= this.GetUserInfo.ID;\r\n        await vm.GetRecruiters();\r\n        if(vm.$parent.groupId>0){ \r\n            vm.buttons[0].isVisible=false;\r\n            vm.buttons[1].isVisible=true;\r\n            await vm.FetchAddEditGroupData(vm.$parent.groupId);\r\n        }\r\n        else{\r\n            vm.buttons[0].isVisible=true;\r\n            vm.buttons[1].isVisible=false;\r\n        }\r\n    },\r\n    methods: {\r\n        FetchAddEditGroupData:async function(ths){            \r\n            var vm=this;        \r\n            var params=`groupid=${ths}`;\r\n            await DataServices.GroupListing(params).then((response) => { \r\n                if(response.data != ''){                     \r\n                    var recruiterArray=[];            \r\n                    vm.FormSchema[0].Data[0].value=response.data.data[0].group_name;  \r\n                    response.data.recruiterData.forEach(element => {\r\n                        let obj={\r\n                            label:element.name,\r\n                            value:element.value\r\n                        }\r\n                        recruiterArray.push(obj);\r\n                    });\r\n                    vm.FormSchema[1].Data[0].value=recruiterArray;\r\n                }\r\n            })\r\n        },\r\n        GetRecruiters:async function(){\r\n            var vm=this;            \r\n            var params=`moduleName=Hiring`;\r\n            await DataServices.GetRecruiterList(params).then((response) => {\r\n                vm.isLoading = false;\r\n                if(response.data.DATA.length>0){                    \r\n                    vm.FormSchema[1].Data[0].config.options=response.data.DATA;\r\n                }\r\n            })\r\n        },\r\n        async onSubmit(formfields, val) {                        \r\n            var vm = this;  \r\n            vm.isLoading =true;        \r\n            var jsonobj = {\r\n                UserId: vm.Userid,\r\n                CompanyId: vm.CompanyId,\r\n                GroupID: vm.$parent.groupId==undefined?0:vm.$parent.groupId,\r\n                Nametext: formfields.GroupName,\r\n                RecruiterID: formfields.Recruiters,\r\n                Groupdate:  new Date()\r\n            };            \r\n            var params = JSON.stringify(jsonobj);\r\n            await DataServices.SaveRecruiterGroup(params).then((response) => {   \r\n                vm.isLoading =false;              \r\n                if (response.data[0].Status == 'Success') {\r\n                    if(vm.$parent.groupId>0){\r\n                        vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"Group\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                    }else{\r\n                        vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Group\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                    }                   \r\n                    vm.Close();\r\n                    vm.$parent.FetchData();\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t(\"AddedError\", [vm.$t(\"Group\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                    vm.Close();\r\n                }\r\n            });\r\n        },\r\n        Close: function () {\r\n            this.$parent.IsGroupOpen=false;\r\n        },\r\n        IsGroupExists:async function(){            \r\n            var vm=this;\r\n            vm.isLoading = true;\r\n            var params=`groupname=${this.FormSchema[0].Data[0].value}`;\r\n            await DataServices.GroupExists(params).then((response) => { \r\n                if(response.data==\"exists\"){\r\n                    vm.isLoading = false;\r\n                    vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"GroupName\")]), \"warning\", true, vm.$t(\"Alert\"));\r\n                }else{\r\n                    vm.isLoading = false;\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpwnGroupModel.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpwnGroupModel.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./OpwnGroupModel.vue?vue&type=template&id=606f723b\"\nimport script from \"./OpwnGroupModel.vue?vue&type=script&lang=js\"\nexport * from \"./OpwnGroupModel.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}