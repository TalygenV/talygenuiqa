{"version":3,"sources":["webpack:///./src/views/HR/Candidate/ForwardCv.vue?11c6","webpack:///./src/views/HR/Candidate/modaledittemplate.vue?eaba","webpack:///src/views/HR/Candidate/modaledittemplate.vue","webpack:///./src/views/HR/Candidate/modaledittemplate.vue?f5ec","webpack:///./src/views/HR/Candidate/modaledittemplate.vue","webpack:///src/views/HR/Candidate/ForwardCv.vue","webpack:///./src/views/HR/Candidate/ForwardCv.vue?08ed","webpack:///./src/views/HR/Candidate/ForwardCv.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isLoading","staticClass","ref","_v","_s","$t","buttons","FormSchema","MandatoryString","on","onSubmit","scopedSlots","_u","key","fn","data","directives","name","rawName","value","expression","domProps","$event","target","composing","txtEmailTo","IsShowHiddenField","class","isInvalidCCEmail","validateCCEmail","txtEmailCc","isInvalidBCCEmail","validateBCCEmail","txtEmailBcc","txtEmailFrom","txtEmailReplyTo","txtEmailSubject","error","editor","model","callback","$$v","txtEmailDesc","_e","staticRenderFns","Close","IsValidate","SelectedPrefillTemplate","Array","isArray","ChkAllCandidates","_i","$$a","$$el","$$c","checked","$$i","concat","slice","staticStyle","_l","profile","index","Field_Type","Template_fields","selected","onChecked","ChkAllJobs","selectedjobs","onCheckedApplication","item","Name","SaveProfileTemplateData","excelMailBody","candidateDetails","ProfileTemplateddl","candidateData","jobDetails","userId","companyId","aid","pid","created","GetTemplatesFields","GetUserInfo","ID","CompanyId","$route","params","computed","get","length","set","vm","forEach","push","object","id","Custom_Field_Id","isselected","Is_Selected","obj","find","x","undefined","fieldtype","methods","event","Field_Ty","candidateChkAll","filter","$","currentTarget","remove","jobsChkAll","jobData","templateId","url","arrfields","$parent","ddlPrefillTemplate","DataService","GetProfileTemplates","then","response","DATA","showAddEditModal","templateID","selectedColumns","each","TEMPLATEID","SELECTEDCOLUMNS","COMPANYID","USER_ID","TEMPLATE_NAME","objectPostString","JSON","stringify","Status","GetPrefillTemplate","component","components","modaledittemplate","CLASSIC_EDITOR","content","noteDescription","InvalidCCEmail","InvalidBCCEmail","isHidden","isHide","layoutType","Data","astype","label","config","options","onChange","GetEmailTemplate","validationRules","group_name","showAddIcon","onAddButtonClick","openPopUp","OnSelect","onChangeInclude","placeholder","visibility","max","type","text","onClick","resultData","resultEmail","qid","ContainerName","Email","chkProfilesummary","chkCustomizeCVname","ths","GetTemplates","GetResumeTemplates","$router","GetDDLData","element","Obj","$refs","ForwardCV","UpdateKeyValue","email","template_content","emailSubject","template_subject","ExcelData","CandidateProfileFieldDetails","results","jsonToTable","json","maskedProfile","emailData","parsejson","parse","columns","tablethread","document","getElementById","innerHTML","totalRows","table_rows","i","row","d","sty","j","prop","toString","split","join","st","replace","html","onReady","ui","getEditableElement","parentElement","insertBefore","view","toolbar","emailRegex","test","formfields","val","exceldatatemp","UserId","Applicant_Id","Post_Id","Template_Id","PrefillfromTemplate","TemplateId","ChooseTemplate","ResumeTemplateId","ResumeTemplate","Replyon","ReceiveReplyon","AttachProfileFields","AttachProfileFieldsasExcelattacher","Include","IncludedTemplate","AttachCV","AttachedCV","AttachCVUnzip","AttachedCVUnzipped","Profilesummary","CompanyLogo","chkCompanyLogo","CustomizeCVname","MaskProfileDetail","chkMaskProfileDetail","EmailTo","EmailCc","EmailBcc","EmailFrom","EmailReplyTo","EmailSubject","EmailDesc","ApplicantId","moduleName","containerName","SaveEmailData","ShowAlert"],"mappings":"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","file":"js/chunk-2d0d3268.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('section',{staticClass:\"main-content\"},[_c('div',{ref:\"hellp\",attrs:{\"id\":\"divMaindealData\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ForwardCV')))])])])]),_c('div',{staticClass:\"border p-3\"},[_c('dynamic-form',{ref:\"ForwardCV\",attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema,\"mandatorytext\":_vm.MandatoryString},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-ToEmail\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light bg-white\"},[_vm._v(\"To:\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailTo),expression:\"txtEmailTo\"}],staticClass:\"form-control  bg-white\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.txtEmailTo)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailTo=$event.target.value}}}),_c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-white  text-info \"},[_c('a',{staticClass:\"text-info cc\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.IsShowHiddenField('isHidden')}}},[_vm._v(_vm._s(_vm.$t('CCuppercase')))])])]),_c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-white\"},[_c('a',{staticClass:\"text-info bcc\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.IsShowHiddenField('isHide')}}},[_vm._v(_vm._s(_vm.$t('BCCuppercase'))+\" \")])])])])]}},{key:\"tgslot-CC\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white  text-dark font-weight-light\"},[_vm._v(_vm._s(_vm.$t('CCuppercase'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailCc),expression:\"txtEmailCc\"}],staticClass:\"form-control  box-shadow bg-white\",class:{'form-control': true, 'is-invalid': _vm.isInvalidCCEmail},attrs:{\"type\":\"text\",\"id\":\"emails\",\"name\":\"CCemail\"},domProps:{\"value\":(_vm.txtEmailCc)},on:{\"change\":_vm.validateCCEmail,\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailCc=$event.target.value}}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isInvalidCCEmail),expression:\"isInvalidCCEmail\"}],staticClass:\"invalid-feedback\"},[_vm._v(\" \"+_vm._s(_vm.$t('InvalidEmailFormat')))])])]}},{key:\"tgslot-BCC\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white  text-dark font-weight-light\"},[_vm._v(_vm._s(_vm.$t('BCCuppercase'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailBcc),expression:\"txtEmailBcc\"}],staticClass:\"form-control box-shadow bg-white\",class:{'form-control': true, 'is-invalid': _vm.isInvalidBCCEmail},attrs:{\"type\":\"text\",\"id\":\"emails_bcc\",\"name\":\"BCCemail\"},domProps:{\"value\":(_vm.txtEmailBcc)},on:{\"change\":_vm.validateBCCEmail,\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailBcc=$event.target.value}}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isInvalidBCCEmail),expression:\"isInvalidBCCEmail\"}],staticClass:\"invalid-feedback\"},[_vm._v(\" \"+_vm._s(_vm.$t('InvalidEmailFormat')))])])]}},{key:\"tgslot-FromEmail\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light\"},[_vm._v(_vm._s(_vm.$t('From'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailFrom),expression:\"txtEmailFrom\"}],staticClass:\"form-control box-shadow bg-white\",attrs:{\"type\":\"text\",\"disabled\":\"disabled\"},domProps:{\"value\":(_vm.txtEmailFrom)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailFrom=$event.target.value}}})])]}},{key:\"tgslot-ReplyTo\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light \"},[_vm._v(_vm._s(_vm.$t('ReplyTo'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailReplyTo),expression:\"txtEmailReplyTo\"}],staticClass:\"form-control box-shadow bg-white\",attrs:{\"type\":\"text\",\"name\":\"ReplyToEmail\",\"placeholder\":\"me(careers@trentvash.freshersteam.com)\"},domProps:{\"value\":(_vm.txtEmailReplyTo)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailReplyTo=$event.target.value}}})])]}},{key:\"tgslot-Subject\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light\",attrs:{\"id\":\"\"}},[_vm._v(_vm._s(_vm.$t('Subject'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailSubject),expression:\"txtEmailSubject\"}],staticClass:\"form-control box-shadow bg-white\",attrs:{\"type\":\"text\",\"placeholder\":\"Profile for the opening (Job Title/ Designation)\"},domProps:{\"value\":(_vm.txtEmailSubject)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailSubject=$event.target.value}}})])]}},{key:\"tgslot-Description\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('ckeditor',{class:{ 'is-invalid': data.error != '' },attrs:{\"editor\":_vm.editor},model:{value:(_vm.txtEmailDesc),callback:function ($$v) {_vm.txtEmailDesc=$$v},expression:\"txtEmailDesc\"}}),_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(_vm._s(data.error))])]}}])})],1)])]),(_vm.showAddEditModal)?_c('modaledittemplate'):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full  d-flex\"},[_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('ChooseandArrange')))]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]),_c('div',{staticClass:\"col-lg-4 mt-2\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('TemplateName'))+\":\")]),_c('span',{staticClass:\"text-danger\"},[_vm._v(\"*\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.SelectedPrefillTemplate),expression:\"SelectedPrefillTemplate\"}],staticClass:\"form-control\",class:{'form-control': true, 'is-invalid': _vm.IsValidate},attrs:{\"type\":\"text\",\"name\":\"TemplateName\"},domProps:{\"value\":(_vm.SelectedPrefillTemplate)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.SelectedPrefillTemplate=$event.target.value}}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.IsValidate),expression:\"IsValidate\"}],staticClass:\"invalid-feedback\"},[_vm._v(_vm._s(_vm.$t('TemplateNameError')))])])]),_c('div',{staticClass:\"modal-body\"},[_c('div',{staticClass:\"col-md-12 col-lg-12 col-xl-12 float-left px-0\"},[_c('div',{staticClass:\"row card-view bg-border custom-box-width\"},[_c('div',{staticClass:\"col-md-12 col-lg-6 col-xl-4 mb-3 float-left\"},[_c('div',{staticClass:\"card-box blue-bg-light\"},[_c('div',{staticClass:\"card-number\"},[_c('label',{staticClass:\"form-check form-check-inline\"},[_c('div',{staticClass:\"custom-control custom-checkbox custom-control-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ChkAllCandidates),expression:\"ChkAllCandidates\"}],staticClass:\"chkItems custom-control-input\",attrs:{\"id\":\"chkAll_527850\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.ChkAllCandidates)?_vm._i(_vm.ChkAllCandidates,null)>-1:(_vm.ChkAllCandidates)},on:{\"change\":function($event){var $$a=_vm.ChkAllCandidates,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.ChkAllCandidates=$$a.concat([$$v]))}else{$$i>-1&&(_vm.ChkAllCandidates=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.ChkAllCandidates=$$c}}}}),_c('label',{staticClass:\"custom-control-label\",attrs:{\"for\":\"chkAll_527850\"}})])]),_c('span',{staticClass:\"position-relative\"},[_vm._v(_vm._s(_vm.$t('CandidateDetails')))])]),_c('ul',{staticClass:\"list-group card-detail-main\",staticStyle:{\"max-height\":\"262px\"}},_vm._l((_vm.ProfileTemplateddl),function(profile,index){return (profile.Field_Type === 'Candidate Detail')?_c('li',{key:index,staticClass:\"list-group-item\",attrs:{\"id\":\"profiletemp\"}},[_c('label',{staticClass:\"form-check form-check-inline\"},[_c('div',{staticClass:\"custom-control custom-checkbox custom-control-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selected),expression:\"selected\"}],staticClass:\"chkItems custom-control-input\",attrs:{\"id\":\"chkAll_527851\",\"type\":\"checkbox\"},domProps:{\"value\":profile.Template_fields,\"checked\":Array.isArray(_vm.selected)?_vm._i(_vm.selected,profile.Template_fields)>-1:(_vm.selected)},on:{\"change\":[function($event){var $$a=_vm.selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=profile.Template_fields,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.selected=$$a.concat([$$v]))}else{$$i>-1&&(_vm.selected=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.selected=$$c}},function($event){return _vm.onChecked(profile)}]}}),_c('label',{staticClass:\"custom-control-label\",attrs:{\"for\":\"chkAll_527851\"}})])]),_vm._v(\" \"+_vm._s(profile.Template_fields)+\" \")]):_vm._e()}),0)])]),_c('div',{staticClass:\"col-md-12 col-lg-6 col-xl-4 mb-3 float-left\"},[_c('div',{staticClass:\"card-box blue-bg-light\"},[_c('div',{staticClass:\"card-number\"},[_c('label',{staticClass:\"form-check form-check-inline\"},[_c('div',{staticClass:\"custom-control custom-checkbox custom-control-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ChkAllJobs),expression:\"ChkAllJobs\"}],staticClass:\"chkItems custom-control-input\",attrs:{\"id\":\"chkAll_527852\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.ChkAllJobs)?_vm._i(_vm.ChkAllJobs,null)>-1:(_vm.ChkAllJobs)},on:{\"change\":function($event){var $$a=_vm.ChkAllJobs,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.ChkAllJobs=$$a.concat([$$v]))}else{$$i>-1&&(_vm.ChkAllJobs=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.ChkAllJobs=$$c}}}}),_c('label',{staticClass:\"custom-control-label\",attrs:{\"for\":\"chkAll_527852\"}})])]),_c('span',{staticClass:\"position-relative\"},[_vm._v(\"Job Details\")])]),_c('ul',{staticClass:\"list-group card-detail-main\",staticStyle:{\"max-height\":\"262px\"}},_vm._l((_vm.ProfileTemplateddl),function(profile,index){return (profile.Field_Type === 'Job Detail')?_c('li',{key:index,staticClass:\"list-group-item\"},[_c('label',{staticClass:\"form-check form-check-inline\"},[_c('div',{staticClass:\"custom-control custom-checkbox custom-control-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedjobs),expression:\"selectedjobs\"}],staticClass:\"chkItems custom-control-input\",attrs:{\"id\":\"chkAll_527853\",\"type\":\"checkbox\"},domProps:{\"value\":profile.Template_fields,\"checked\":Array.isArray(_vm.selectedjobs)?_vm._i(_vm.selectedjobs,profile.Template_fields)>-1:(_vm.selectedjobs)},on:{\"change\":[function($event){var $$a=_vm.selectedjobs,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=profile.Template_fields,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.selectedjobs=$$a.concat([$$v]))}else{$$i>-1&&(_vm.selectedjobs=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.selectedjobs=$$c}},function($event){return _vm.onCheckedApplication(profile)}]}}),_c('label',{staticClass:\"custom-control-label\",attrs:{\"for\":\"chkAll_527853\"}})])]),_vm._v(\" \"+_vm._s(profile.Template_fields))]):_vm._e()}),0)])]),_c('div',{staticClass:\"col-md-12 col-lg-6 col-xl-4 mb-3 float-left\"},[_c('div',{staticClass:\"card-box blue-bg-light\"},[_c('div',{staticClass:\"card-number\"},[_vm._v(\"Arrange Column for Excel/Mail Body\")]),_c('ul',{staticClass:\"list-group card-detail-main\",staticStyle:{\"max-height\":\"262px\"},attrs:{\"id\":\"sortable\"}},_vm._l((_vm.excelMailBody),function(item,index){return _c('li',{key:index,staticClass:\"list-group-item\",attrs:{\"id\":\"sort\"}},[_vm._v(_vm._s(item.Name)),_c('a',{staticClass:\"float-right\",attrs:{\"href\":\"javascript:;\"}})])}),0)])])])])]),_c('div',{staticClass:\"modal-footer\"},[_c('a',{staticClass:\"btn btn-primary save-btn mr-2\",attrs:{\"href\":\"javascript:;\",\"type\":\"submit\",\"title\":\"Save\"},on:{\"click\":function($event){return _vm.SaveProfileTemplateData();}}},[_c('em',{staticClass:\"fa fa-save pr-2\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',[_vm._v(_vm._s(_vm.$t('Save')))])]),_c('a',{staticClass:\"btn btn-primary delete-btn\",attrs:{\"href\":\"javascript:;\",\"type\":\"submit\",\"title\":\"Cancel\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times pr-2\",attrs:{\"aria-hidden\":\"true\"}}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.$t('Cancel')))])])])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"my-popups\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"modal d-block\">\r\n            <div class=\"modal-dialog modal-dialog-centered\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header theme-primary partition-full  d-flex\">\r\n                        <h4 class=\"modal-title\">{{ $t('ChooseandArrange') }}</h4>\r\n                        <button type=\"button\" class=\"close\" v-on:click=\"Close\">\r\n                            <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                        </button>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-lg-4 mt-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>{{$t('TemplateName')}}:</label><span class=\"text-danger\">*</span>\r\n                            <input type=\"text\" class=\"form-control\" name=\"TemplateName\" v-model=\"SelectedPrefillTemplate\"  :class=\"{'form-control': true, 'is-invalid': IsValidate}\" />\r\n                            <span v-show=\"IsValidate\" class=\"invalid-feedback\">{{ $t('TemplateNameError') }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-body\"> \r\n                        <div class=\"col-md-12 col-lg-12 col-xl-12 float-left px-0\">\r\n                                    <div class=\"row card-view bg-border custom-box-width\">\r\n                                        <div class=\"col-md-12 col-lg-6 col-xl-4 mb-3 float-left\">\r\n                                            <div class=\"card-box blue-bg-light\">\r\n                                                <div class=\"card-number\"> \r\n                                                    <label class=\"form-check form-check-inline\">\r\n                                                        <div class=\"custom-control custom-checkbox custom-control-inline\">\r\n                                                            <input id=\"chkAll_527850\" type=\"checkbox\" v-model=\"ChkAllCandidates\" class=\"chkItems custom-control-input\" />\r\n                                                            <label for=\"chkAll_527850\" class=\"custom-control-label\"></label>\r\n                                                        </div>\r\n                                                    </label> \r\n                                                    <span class=\"position-relative\">{{$t('CandidateDetails')}}</span>\r\n                                                </div>\r\n                                                <ul class=\"list-group card-detail-main\" style=\"max-height:262px;\">\r\n                                                    <li id=\"profiletemp\" v-for=\"(profile,index) in ProfileTemplateddl\" v-if=\"profile.Field_Type === 'Candidate Detail'\" class=\"list-group-item\" :key=\"index\">                                                      \r\n                                                        <label class=\"form-check form-check-inline\">\r\n                                                            <div class=\"custom-control custom-checkbox custom-control-inline\">\r\n                                                                <input id=\"chkAll_527851\" type=\"checkbox\" v-bind:value=\"profile.Template_fields\" @change=\"onChecked(profile)\" v-model=\"selected\" class=\"chkItems custom-control-input\" />\r\n                                                                <label for=\"chkAll_527851\" class=\"custom-control-label\"></label>\r\n                                                            </div>\r\n                                                        </label> \r\n                                                        {{profile.Template_fields}}\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12 col-lg-6 col-xl-4 mb-3 float-left\">\r\n                                            <div class=\"card-box blue-bg-light\">\r\n                                                <div class=\"card-number\">                                                 \r\n                                                    <label class=\"form-check form-check-inline\">\r\n                                                        <div class=\"custom-control custom-checkbox custom-control-inline\">\r\n                                                            <input id=\"chkAll_527852\" type=\"checkbox\" v-model=\"ChkAllJobs\" class=\"chkItems custom-control-input\" />\r\n                                                            <label for=\"chkAll_527852\" class=\"custom-control-label\"></label>\r\n                                                        </div>\r\n                                                    </label> \r\n                                                    <span class=\"position-relative\">Job Details</span>\r\n                                                </div>\r\n                                                <ul class=\"list-group card-detail-main\" style=\"max-height:262px;\">\r\n                                                    <li v-for=\"(profile,index) in ProfileTemplateddl\" :key=\"index\" v-if=\"profile.Field_Type === 'Job Detail'\" class=\"list-group-item\">                                                        \r\n                                                        <label class=\"form-check form-check-inline\">\r\n                                                            <div class=\"custom-control custom-checkbox custom-control-inline\">\r\n                                                                <input id=\"chkAll_527853\" type=\"checkbox\" v-bind:value=\"profile.Template_fields\" @change=\"onCheckedApplication(profile)\" v-model=\"selectedjobs\" class=\"chkItems custom-control-input\" />\r\n                                                                <label for=\"chkAll_527853\" class=\"custom-control-label\"></label>\r\n                                                            </div>\r\n                                                        </label> \r\n                                                        {{profile.Template_fields}}</li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12 col-lg-6 col-xl-4 mb-3 float-left\">\r\n                                            <div class=\"card-box blue-bg-light\">\r\n                                                <div class=\"card-number\">Arrange Column for Excel/Mail Body</div>\r\n                                                <ul class=\"list-group card-detail-main\" id=\"sortable\" style=\"max-height:262px;\">\r\n                                                    <li id=\"sort\" class=\"list-group-item\" v-for=\"(item,index) in excelMailBody\" :key=\"index\">{{item.Name}}<a href=\"javascript:;\" class=\"float-right\"></a></li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>                       \r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <a href=\"javascript:;\" type=\"submit\" class=\"btn btn-primary save-btn mr-2\" @click=\"SaveProfileTemplateData();\" title=\"Save\"><em class=\"fa fa-save pr-2\" aria-hidden=\"true\"></em><span>{{$t('Save')}}</span></a>\r\n                        <a href=\"javascript:;\" type=\"submit\" class=\"btn btn-primary delete-btn\" @click=\"Close\" title=\"Cancel\"> <em class=\"fa fa-times pr-2\" aria-hidden=\"true\"></em> <span>{{$t('Cancel')}}</span></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </template>\r\n    <script>\r\nimport DataService from '../../../services/DataService';\r\n    export default {\r\n        data(){\r\n            return{\r\n                isLoading:false,\r\n                SelectedPrefillTemplate:'',\r\n                selected:'',\r\n                IsValidate:false,\r\n                excelMailBody: [],\r\n                candidateDetails: [],\r\n                ProfileTemplateddl: [],\r\n                candidateData: [],\r\n                jobDetails: [],\r\n                selected:[],\r\n                selectedjobs:[],\r\n                userId: null,\r\n                companyId: null,\r\n                aid:null,\r\n                pid:null,\r\n            }\r\n        },\r\n        created:function(){\r\n            debugger\r\n            this.GetTemplatesFields();\r\n            this.userId = this.GetUserInfo.ID;\r\n            this.companyId = this.GetUserInfo.CompanyId;\r\n            this.aid = this.$route.params.aid;\r\n            this.pid = this.$route.params.pid;\r\n        },\r\n        computed: {\r\n            ChkAllJobs:{\r\n                get: function () {\r\n                                return this.ProfileTemplateddl ? this.selectedjobs.length == this.ProfileTemplateddl.length : false;\r\n                },\r\n                set: function (value) {\r\n                                var vm = this;\r\n                                var selectedjobs = [];\r\n                                vm.jobDetails = [];\r\n                                if (value) {\r\n                                    vm.ProfileTemplateddl.forEach(function (profile) {\r\n                                        selectedjobs.push(profile.Template_fields);\r\n                                        if (profile.Field_Type == 'Job Detail' /*&& profile.Is_Selected != true*/)\r\n                                        {\r\n                                            var object =\r\n                                            {\r\n                                                Name: profile.Template_fields,\r\n                                                id: profile.Custom_Field_Id,\r\n                                                isselected: profile.Is_Selected\r\n                                            }\r\n                                            var obj = vm.excelMailBody.find(x => x.Name == profile.Template_fields);\r\n                                            if (obj == undefined) {\r\n                                                vm.excelMailBody.push(object);\r\n                                                vm.jobDetails.push(object);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                else\r\n                                {\r\n                                    vm.excelMailBody = [];\r\n                                    vm.excelMailBody = vm.candidateDetails;\r\n                                }\r\n                                vm.selectedjobs = selectedjobs;\r\n                }\r\n            },\r\n            ChkAllCandidates: {                \r\n                get: function () {\r\n                    \r\n                    return this.ProfileTemplateddl ? this.selected.length == this.ProfileTemplateddl.length : false;\r\n                },\r\n                set: function (value) {\r\n                    \r\n                    var vm = this;                    \r\n                    var selected = [];\r\n                    vm.candidateDetails = [];\r\n                    if (value) {\r\n                        vm.ProfileTemplateddl.forEach(function (profile) {\r\n                            selected.push(profile.Template_fields);\r\n                            if (profile.Field_Type == 'Candidate Detail')\r\n                            {\r\n                                var object =\r\n                                {\r\n                                    Name: profile.Template_fields,\r\n                                    id: profile.Custom_Field_Id,\r\n                                    isselected: profile.Is_Selected,\r\n                                    fieldtype: profile.Field_Type,\r\n                                }\r\n                                var obj = vm.excelMailBody.find(x => x.Name == profile.Template_fields);\r\n                                if (obj == undefined) {\r\n                                    vm.excelMailBody.push(object);\r\n                                    vm.candidateDetails.push(object);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        vm.excelMailBody = [];\r\n                        vm.excelMailBody = vm.jobDetails;\r\n                    }\r\n                    vm.selected = selected;\r\n                }\r\n            }\r\n        },\r\n        methods:{\r\n            onChecked: function (item){\r\n                \r\n                var vm = this;\r\n                if (event.target.checked === true) {\r\n                    var obj = {\r\n                        Name: item.Template_fields,\r\n                        id: item.Custom_Field_Id,\r\n                        isselected: item.Is_Selected,\r\n                        fieldtype: item.Field_Ty\r\n                    }\r\n                        this.excelMailBody.push(obj);\r\n                        var candidateChkAll = this.excelMailBody.filter(x => x.fieldtype == \"Candidate Detail\");\r\n                        if (vm.candidateData.length == candidateChkAll.length) { vm.ChkAllCandidates = true; }                                \r\n                    }\r\n                    else if (event.target.checked === false) {\r\n                        $('#sortable li:contains(' + event.currentTarget.value + ')').remove();\r\n                    }\r\n               \r\n            },\r\n            onCheckedApplication: function (item) {\r\n                var vm = this;\r\n                if (event.target.checked === true) {\r\n                    var obj = {\r\n                        Name: item.Template_fields,\r\n                        id: item.Custom_Field_Id,\r\n                        isselected: item.Is_Selected,\r\n                        fieldtype: item.Field_Type\r\n                    }\r\n                    this.excelMailBody.push(obj);\r\n                    var jobsChkAll = this.excelMailBody.filter(x => x.fieldtype == \"Job Detail\");\r\n                    if (vm.jobData.length == jobsChkAll.length) { vm.ChkAllJobs = true; }\r\n                }\r\n                else if (event.target.checked === false) {\r\n                    $('#sortable li:contains(' + event.currentTarget.value + ')').remove();\r\n                }\r\n            },\r\n            GetTemplatesFields:function(){                \r\n                var vm = this;\r\n                var templateId = '';\r\n                var url = '';\r\n                var arrfields = [],\r\n                templateId = vm.$parent.ddlPrefillTemplate;\r\n                if(templateId == '')\r\n                {\r\n                    url = `id=`;\r\n                }\r\n                else{\r\n                    url = `id=${templateId}`;\r\n                }\r\n                DataService.GetProfileTemplates(url).then(function (response) {                     \r\n                    if(response.data.DATA.length>0){                        \r\n                        var selected = [];\r\n                        var selectedjobs = [];\r\n                        response.data.DATA.forEach(function (item) {\r\n                            if (item.Is_Selected == true && item.Field_Type == \"Candidate Detail\")\r\n                            {\r\n                                selected.push(item.Template_fields);\r\n                            }\r\n                            if (item.Is_Selected == true && item.Field_Type == \"Job Detail\") {\r\n                                selectedjobs.push(item.Template_fields);\r\n                            }\r\n                            if (item.Is_Selected)\r\n                            {\r\n                                arrfields.push(item.Template_fields);\r\n                                var object =\r\n                                   {\r\n                                       Name: item.Template_fields,\r\n                                       id: item.Custom_Field_Id,\r\n                                       isselected: item.Is_Selected,\r\n                                       fieldtype: item.Field_Type\r\n                                   }\r\n                                vm.excelMailBody.push(object);\r\n                                if (item.Field_Type == \"Candidate Detail\") {\r\n                                    vm.candidateDetails.push(object);\r\n                                }\r\n                                else {\r\n                                    vm.jobDetails.push(object);\r\n                                }\r\n                            }\r\n                        });\r\n                        vm.selected = selected;\r\n                        vm.selectedjobs = selectedjobs;\r\n                        vm.ProfileTemplateddl = response.data.DATA;\r\n                        vm.candidateData = response.data.DATA.filter(x => x.Field_Type == \"Candidate Detail\");\r\n                        vm.jobData = response.data.DATA.filter(x => x.Field_Type == \"Job Detail\");\r\n                        if (vm.candidateData.length == selected.length) { vm.ChkAllCandidates = true; }\r\n                        if (vm.jobData.length == selectedjobs.length) { vm.ChkAllJobs = true; }\r\n                        return vm.ProfileTemplateddl;\r\n                    }\r\n                 })\r\n            },\r\n            Close:function(){\r\n                this.$parent.showAddEditModal=false;\r\n            },\r\n            SaveProfileTemplateData:function(){\r\n                debugger\r\n                var vm=this;\r\n                if(vm.SelectedPrefillTemplate ==''){\r\n                    vm.IsValidate=true;\r\n                    return false;\r\n                }\r\n                var templateID = '';\r\n                templateID = this.$parent.ddlPrefillTemplate;\r\n                var selectedColumns = '';\r\n                $.each(this.excelMailBody, function (key, item){\r\n                    selectedColumns = selectedColumns + ((selectedColumns == \"\") ? item.id : (\",\" + item.id));\r\n                });\r\n                var applicantID = vm.aid ;\r\n                var postID = vm.pid;\r\n                var data = {\r\n                    TEMPLATEID: templateID,\r\n                    SELECTEDCOLUMNS: selectedColumns,\r\n                    COMPANYID: vm.companyId,\r\n                    USER_ID: vm.userId,\r\n                    TEMPLATE_NAME: this.SelectedPrefillTemplate\r\n                };\r\n                var objectPostString = JSON.stringify(data);                \r\n                DataService.SaveProfileTemplateData(objectPostString).then(function (response) {                     \r\n                    if (response.data[0].Status == \"Success\")\r\n                    {\r\n                        vm.$parent.GetPrefillTemplate();\r\n                        vm.Close();\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    </script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modaledittemplate.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modaledittemplate.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./modaledittemplate.vue?vue&type=template&id=6f8d2752\"\nimport script from \"./modaledittemplate.vue?vue&type=script&lang=js\"\nexport * from \"./modaledittemplate.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <section class=\"main-content\">\r\n            <div ref=\"hellp\" id=\"divMaindealData\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 padding-t_8\">\r\n                        <div class=\"theme-primary partition-full\">\r\n                            <span class=\"p-name text-white\">{{ $t('ForwardCV') }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"border p-3\">\r\n                    <dynamic-form ref=\"ForwardCV\" lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\"  v-on:OnSubmit=\"onSubmit\" :mandatorytext='MandatoryString'>\r\n                        <template v-slot:tgslot-ToEmail=\"{ data }\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light bg-white\">To:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailTo\" class=\"form-control  bg-white\">\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text bg-white  text-info \">\r\n                                        <a href=\"javascript:;\" v-on:click=\"IsShowHiddenField('isHidden')\"\r\n                                            class=\"text-info cc\">{{ $t('CCuppercase') }}</a>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text bg-white\">\r\n                                        <a href=\"javascript:;\" v-on:click=\"IsShowHiddenField('isHide')\"\r\n                                            class=\"text-info bcc\">{{ $t('BCCuppercase') }} </a>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-CC=\"{ data }\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white  text-dark font-weight-light\">{{\r\n                                        $t('CCuppercase') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" id=\"emails\" name=\"CCemail\" v-model=\"txtEmailCc\"\r\n                                    class=\"form-control  box-shadow bg-white\" @change=\"validateCCEmail\" :class=\"{'form-control': true, 'is-invalid': isInvalidCCEmail}\"\r\n                                    >\r\n                                    <span v-show=\"isInvalidCCEmail\" class=\"invalid-feedback\">  {{$t('InvalidEmailFormat') }}</span>\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-BCC=\"{ data }\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white  text-dark font-weight-light\">{{\r\n                                        $t('BCCuppercase') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" id=\"emails_bcc\" v-model=\"txtEmailBcc\" name=\"BCCemail\"\r\n                                    class=\"form-control box-shadow bg-white\" @change=\"validateBCCEmail\" :class=\"{'form-control': true, 'is-invalid': isInvalidBCCEmail}\"\r\n                                    >\r\n                                    <span v-show=\"isInvalidBCCEmail\" class=\"invalid-feedback\">  {{$t('InvalidEmailFormat') }}</span>\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-FromEmail=\"{ data }\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light\">{{\r\n                                        $t('From') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailFrom\" class=\"form-control box-shadow bg-white\"\r\n                                    disabled=\"disabled\" >\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-ReplyTo=\"{ data }\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light \">{{\r\n                                        $t('ReplyTo') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailReplyTo\" name=\"ReplyToEmail\"\r\n                                    class=\"form-control box-shadow bg-white\"\r\n                                    placeholder=\"me(careers@trentvash.freshersteam.com)\">\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-Subject=\"{ data }\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light\" id=\"\">{{\r\n                                        $t('Subject') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailSubject\" class=\"form-control box-shadow bg-white\"\r\n                                    placeholder=\"Profile for the opening (Job Title/ Designation)\">\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-Description=\"{ data }\">\r\n                            <ckeditor :editor=\"editor\" v-model=\"txtEmailDesc\"\r\n                                :class=\"{ 'is-invalid': data.error != '' }\">\r\n                            </ckeditor>\r\n                            <span class=\"invalid-feedback\">{{ data.error }}</span>\r\n                        </template>\r\n                    </dynamic-form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        <modaledittemplate v-if=\"showAddEditModal\"></modaledittemplate>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DataService from '../../../services/DataService';\r\nimport modaledittemplate from './modaledittemplate.vue';\r\nexport default {\r\n    components:{modaledittemplate},\r\n    data(){\r\n        return{\r\n            isLoading:false,\r\n            editor: this.CLASSIC_EDITOR,\r\n            content: \"<h1>Some initial content</h1>\",\r\n            MandatoryString:'Fields marked with an asterisk (*) are mandatory.',\r\n            noteDescription: '',\r\n            txtEmailCc: '',\r\n            txtEmailBcc:'',\r\n            InvalidCCEmail:'',\r\n            InvalidBCCEmail:'',\r\n            txtEmailFrom:'',\r\n            isInvalidCCEmail: false,\r\n            isInvalidBCCEmail: false,\r\n            txtEmailReplyTo:'',\r\n            txtEmailSubject:'', \r\n            txtEmailDesc:'',\r\n            txtEmailTo:'',           \r\n            isHidden: false,\r\n            isHide: false,\r\n            showAddEditModal: false,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Choose Template'),\r\n                            name: \"ChooseTemplate\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                onChange:this.GetEmailTemplate\r\n                            },                            \r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Receive Reply on'),\r\n                            name: \"ReceiveReplyon\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },                            \r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"triple\",\r\n                    group_name:this.$t('CustomizeAttachments'),\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Profile from Template'),\r\n                            name: \"PrefillfromTemplate\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon : true,\r\n                                onAddButtonClick : this.openPopUp,\r\n                                onChange:this.OnSelect\r\n                            },                            \r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Resume Template'),\r\n                            name: \"ResumeTemplate\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },                            \r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: this.$t('Attach Profile Fields as Excel attacher'),\r\n                            name: \"AttachProfileFieldsasExcelattacher\",\r\n                            value: \"\",\r\n                            config: {                                \r\n                                options: [\r\n                                    { name: '', value: \"true\" }\r\n                                ]\r\n                            },\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: this.$t(\"Attached CV's (Max 20) to be sent in an Unzipped format:\"),\r\n                            name: \"AttachedCVUnzipped\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [\r\n                                    { name: '', value: \"true\" }\r\n                                ]\r\n                            },\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: this.$t('Attach CVs (maximum 100 characters) in the email'),\r\n                            name: \"AttachedCV\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [\r\n                                    { name: '', value: \"true\" }\r\n                                ]\r\n                            },\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Included Template'),\r\n                            name: \"IncludedTemplate\",\r\n                            value: \"\",\r\n                            config: {\r\n                                onChange:this.onChangeInclude,\r\n                                options: [{name:'Top 5',value:5}]\r\n                            },                            \r\n                            validationRules: { \"required\": true },\r\n                        },                        \r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: this.$t('Add company logo in CV Docx/pdf.'),\r\n                            name: \"chkCompanyLogo\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [\r\n                                    { name: '', value: \"true\" }\r\n                                ]\r\n                            },\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: this.$t('HideProfileDetails'),\r\n                            name: \"chkMaskProfileDetail\",\r\n                            value: \"\",\r\n                            config: {\r\n                                onChange:this.onChangeInclude,\r\n                                options: [\r\n                                    { name: '', value: \"true\" }\r\n                                ]\r\n                            },\r\n                            validationRules: { \"required\": false },\r\n                        }                       \r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"ToEmail\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('Enter To Email'),\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"CC\",\r\n                            value: \"\",\r\n                            visibility: false,\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"BCC\",\r\n                            value: \"\",\r\n                            visibility: false,\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"FromEmail\",\r\n                            value: \"\",\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"ReplyTo\",\r\n                            value: \"\",\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"Subject\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('Enter Subject'),\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('Note Description'),\r\n                            name: \"Description\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: { \"required\": false, max: 5000 },\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [              \r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",                   \r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close,\r\n                },\r\n            ],\r\n            resultData: '',\r\n            resultEmail :'',\r\n            aid:null,\r\n            pid:null,\r\n            qid:null,\r\n            userId: null,\r\n            companyId: null,\r\n            ContainerName: null,\r\n            Email:null,\r\n            chkProfilesummary:0,\r\n            chkCustomizeCVname: 0,\r\n            ddlPrefillTemplate:''\r\n        }\r\n    },\r\n    created:function(){\r\n        var ths=this;\r\n        ths.aid = this.$route.params.aid;\r\n        ths.pid = this.$route.params.pid;\r\n        ths.qid = this.$route.params.qid; \r\n        ths.userId = ths.GetUserInfo.ID;\r\n        ths.companyId = ths.GetUserInfo.CompanyId;\r\n        ths.ContainerName = ths.GetUserInfo.ContainerName;   \r\n        ths.Email=ths.GetUserInfo.Email; \r\n        ths.FormSchema[0].Data[1].value=ths.GetUserInfo.Email; \r\n        ths.txtEmailFrom=ths.GetUserInfo.Email; \r\n        ths.FormSchema[3].Data[0].value=ths.GetUserInfo.Email; \r\n        ths.GetTemplates();\r\n        ths.GetResumeTemplates();\r\n        ths.GetPrefillTemplate();\r\n        //ths.GetQueryString();  \r\n    },\r\n    methods:{ \r\n        Close:function(){\r\n            this.$router.push({ name: 'CandidateList' });\r\n        },\r\n        GetResumeTemplates:function(){\r\n            var vm=this;\r\n            var params = `ids=&moduleName=&type=RESUME_TEMPLATE&search=&refId=`;\r\n            DataService.GetDDLData(params).then(function (response) {                \r\n                if(response.data && response.data.DATA.length>0){\r\n                    response.data.DATA.forEach(element => {\r\n                        var Obj={\r\n                            value:element.value,\r\n                            name:element.name,\r\n                        }\r\n                        vm.FormSchema[1].Data[1].config.options.push(Obj);\r\n                        vm.$refs.ForwardCV.UpdateKeyValue();\r\n                    });                     \r\n                    \r\n                }\r\n            })\r\n        },\r\n        GetTemplates:function(){\r\n            var vm=this;\r\n            var params = `ids=&moduleName=&type=FORWARD_CV_TEMPLATE&search=&refId=`;\r\n            DataService.GetDDLData(params).then(function (response) {                \r\n                if(response.data && response.data.DATA.length>0){\r\n                    response.data.DATA.forEach(element => {\r\n                        var Obj={\r\n                            value:element.value,\r\n                            name:element.name,\r\n                        }\r\n                        vm.FormSchema[0].Data[0].config.options.push(Obj);\r\n                        vm.$refs.ForwardCV.UpdateKeyValue();\r\n                    });  \r\n                }\r\n            })\r\n        },\r\n        GetPrefillTemplate:function(){\r\n            var vm=this;\r\n            var params = `ids=&moduleName=&type=HR_PREFILL_TEMPLATE&search=&refId=`;\r\n            DataService.GetDDLData(params).then(function (response) {                \r\n                if(response.data && response.data.DATA.length>0){\r\n                    response.data.DATA.forEach(element => {\r\n                        var Obj={\r\n                            value:element.value,\r\n                            name:element.name,\r\n                        }\r\n                        vm.FormSchema[1].Data[0].config.options.push(Obj);\r\n                        vm.$refs.ForwardCV.UpdateKeyValue();\r\n                    }); \r\n                }\r\n            })\r\n        },\r\n        // GetQueryString:function(){\r\n\r\n        // },\r\n        GetEmailTemplate:function(){  \r\n            var vm=this;\r\n            var url = `templateId=${vm.FormSchema[0].Data[0].value}`;\r\n            DataService.GetEmailTemplate(url).then(function (response) {                \r\n                if(response.data && response.data.DATA.length>0){\r\n                    var email = response.data.DATA[0].template_content;\r\n                    var emailSubject = response.data.DATA[0].template_subject;\r\n                    vm.resultEmail = email;                  \r\n                    if (email != null) {\r\n                        vm.txtEmailDesc=email;\r\n                        vm.txtEmailSubject = emailSubject;\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        OnSelect:function(){            \r\n            var vm = this;\r\n            vm.ExcelData();\r\n            vm.ddlPrefillTemplate= vm.FormSchema[1].Data[0].value;\r\n        },\r\n        ExcelData:function(){\r\n            var vm=this;\r\n            vm.ddlPrefillTemplate= vm.FormSchema[1].Data[0].value;\r\n            var url = `ApplicantId=${vm.aid}&&PostId=&SelectedColumns=&TemplateId=${vm.FormSchema[1].Data[0].value}`;\r\n            DataService.CandidateProfileFieldDetails(url).then(function (response) {  \r\n                if(response.data !=''){                   \r\n                    var results = JSON.stringify(response.data.DATA);\r\n                    vm.resultData = results;\r\n                    vm.jsonToTable(results, vm.FormSchema[1].Data[5].value, vm.FormSchema[1].Data[7].value=='true'?true:false, vm.resultEmail);\r\n                }  \r\n            })\r\n        },\r\n        onChangeInclude:function(){\r\n            var vm=this;\r\n            var gh=vm.FormSchema[1].Data[6].value;\r\n            vm.jsonToTable(vm.resultData, vm.FormSchema[1].Data[5].value, vm.FormSchema[1].Data[7].value=='true'?true:false, vm.resultEmail);\r\n        },\r\n        jsonToTable:function(json, length, maskedProfile, emailData){\r\n            var parsejson=JSON.parse(json);\r\n            var columns=[];\r\n            var tablethread=\"<thead><tr>\";\r\n            for (x in parsejson[0]) {\r\n                columns.push(x);\r\n                tablethread+=\"<th>\"+x+\"</th>\";\r\n            }\r\n            tablethread += \"</tr></thead>\";\r\n            document.getElementById(\"tableID\").innerHTML = \"\";\r\n            document.getElementById(\"tableID\").innerHTML = tablethread;\r\n            length = length == '' ? 0 : length;\r\n            var totalRows = (parsejson.length > length && length == 5) ? 5 : parsejson.length\r\n            var table_rows = '<tbody>';\r\n                for (var i = 0; i < totalRows; i++) {\r\n                        var x= parsejson[i];\r\n                        var row=\"<tr>\"\r\n                        for (d in x) {\r\n                            var sty = x[d];\r\n                            if ((d == \"Experience\" || d == \"Qualification\") ) {\r\n                                row += \"<td><p><table><thead><tr>\";\r\n                                for (item in  sty[0]) {\r\n                                    row += \"<th>\" + item + \"</th>\"\r\n                                }\r\n                                row += '</tr></thead></tbody>';\r\n                                for (var j = 0; j < sty.length; j++) {\r\n                                    var obj = sty[j];\r\n                                    row += \"<tr>\"\r\n                                    for (prop in obj) {\r\n                                        var value = obj[prop];\r\n                                        if (value != null) {\r\n                                            var value = value.toString();\r\n                                            row += \"<td><p>\" + value.split('<').join('&lt;') + \"</p></td>\";\r\n                                        }\r\n                                        else {\r\n                                            row += \"<td><p>null</p></td>\";\r\n                                        }\r\n                                    }\r\n                                    row += \"</tr>\"\r\n                                }\r\n                                row += \" </tbody></table></p></td>\";\r\n                            }\r\n                            else if ((d == \"Phone Number\" || d == \"Email\") && maskedProfile) {\r\n                                var st = sty.toString();\r\n                                st = st.replace(/.(?=.{0})/g, \"*\");\r\n                                row += \"<td><p>\" + st.split('<').join('&lt;') + \"</p></td>\";\r\n                            }\r\n                            else if (sty!=null) {\r\n                                var st=sty.toString();\r\n                                row+=\"<td><p>\"+st+\"</p></td>\";\r\n                            }\r\n                            else {\r\n                                row+=\"<td><p>null</p></td>\";\r\n                            }\r\n                        }\r\n                        row+=\"</tr>\"\r\n                        table_rows+=row;\r\n                    }\r\n                    table_rows += '</tbody>';\r\n                    document.getElementById(\"tableID\").innerHTML += table_rows;\r\n                    vm.txtEmailDesc = emailData.replace(\"@@details@@\", \" <style>table, th, td {border:1px solid black;}</style > <table>\" + $(\"#tableID\").html() + \"</table>\");\r\n        },\r\n        openPopUp: function (){            \r\n            this.showAddEditModal = true;                            \r\n        },\r\n        onReady(editor) {\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n        },\r\n        IsShowHiddenField: function (type) {            \r\n            var vm = this;\r\n            if (type == 'isHidden') {\r\n                vm.isHidden = !vm.isHidden\r\n               vm.isHidden == true ?vm.FormSchema[3].Data[0].visibility =true:vm.FormSchema[2].Data[0].visibility =false;\r\n            } else if (type == 'isHide') {\r\n                vm.isHide = !vm.isHide\r\n                vm.isHide == true ? vm.FormSchema[4].Data[0].visibility = true : vm.FormSchema[3].Data[0].visibility = false;\r\n            }\r\n        },\r\n        validateCCEmail: function () {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            this.isInvalidCCEmail = !emailRegex.test(this.txtEmailCc);\r\n        },\r\n        validateBCCEmail: function () {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            this.isInvalidBCCEmail = !emailRegex.test(this.txtEmailCc);\r\n        },\r\n        onSubmit: function (formfields, val) {            \r\n            var ths = this;\r\n            ths.isLoading = true;            \r\n            var exceldatatemp = {\r\n                UserId: ths.userId,\r\n                CompanyId: ths.companyId,\r\n                Applicant_Id: ths.aid,\r\n                Post_Id: ths.pid,\r\n                Template_Id: formfields.PrefillfromTemplate\r\n            }\r\n            var data = {\r\n                UserId: ths.userId,\r\n                CompanyId: ths.companyId,\r\n                TemplateId: formfields.ChooseTemplate,\r\n                ResumeTemplateId: formfields.ResumeTemplate,\r\n                Replyon: formfields.ReceiveReplyon,\r\n                AttachProfileFields: formfields.AttachProfileFieldsasExcelattacher=='true'?true:false,\r\n                Include: formfields.IncludedTemplate,\r\n                AttachCV: formfields.AttachedCV=='true'?true:false,\r\n                AttachCVUnzip: formfields.AttachedCVUnzipped=='true'?true:false,\r\n                Profilesummary: ths.chkProfilesummary,\r\n                CompanyLogo: formfields.chkCompanyLogo=='true'?true:false,\r\n                CustomizeCVname: ths.chkCustomizeCVname,\r\n                MaskProfileDetail: formfields.chkMaskProfileDetail=='true'?true:false,\r\n                EmailTo: ths.txtEmailTo,\r\n                EmailCc: ths.txtEmailCc,\r\n                EmailBcc: ths.txtEmailBcc,\r\n                EmailFrom: ths.Email,\r\n                EmailReplyTo: ths.txtEmailReplyTo,\r\n                EmailSubject: ths.txtEmailSubject,\r\n                EmailDesc: ths.txtEmailDesc,\r\n                ApplicantId: ths.aid,\r\n                exceldatatemp: exceldatatemp,\r\n                moduleName: \"Hiring\",\r\n                containerName: ths.ContainerName\r\n            };                    \r\n            var objectPostString = JSON.stringify(data);\r\n            DataService.SaveEmailData(objectPostString).then(function (response) {                        \r\n                ths.isLoading = false;\r\n                if (response.data[0].Status == \"Success\") {                           \r\n                    ths.ShowAlert(ths.$t(\"EmailSent\", [ths.$t(\"Email\")]), \"success\", true, ths.$t(\"Alert\"));\r\n                    ths.Close();\r\n                } \r\n                else {\r\n                    ths.ShowAlert(ths.$t(\"EmailSendError\", [ths.$t(\"Email\")]), \"failure\", true, ths.$t(\"Alert\"));                            \r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ForwardCv.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ForwardCv.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ForwardCv.vue?vue&type=template&id=9b36923c\"\nimport script from \"./ForwardCv.vue?vue&type=script&lang=js\"\nexport * from \"./ForwardCv.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}