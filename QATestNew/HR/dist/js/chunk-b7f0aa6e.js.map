{"version":3,"sources":["webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/core-js/modules/es.string.replace-all.js","webpack:///./node_modules/core-js/internals/regexp-get-flags.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./src/views/HR/Candidate/MailOffer.vue?3e73","webpack:///src/views/HR/Candidate/MailOffer.vue","webpack:///./src/views/HR/Candidate/MailOffer.vue?8cc6","webpack:///./src/views/HR/Candidate/MailOffer.vue"],"names":["uncurryThis","toObject","floor","Math","charAt","replace","stringSlice","slice","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","matched","str","position","captures","namedCaptures","replacement","tailPos","length","m","symbols","undefined","match","ch","capture","n","f","isObject","classof","wellKnownSymbol","MATCH","it","isRegExp","$","call","requireObjectCoercible","isCallable","isNullOrUndefined","toString","getMethod","getRegExpFlags","getSubstitution","IS_PURE","REPLACE","$TypeError","TypeError","indexOf","max","target","proto","replaceAll","searchValue","replaceValue","IS_REG_EXP","flags","replacer","string","searchString","functionalReplace","searchLength","advanceBy","O","this","endOfLastMatch","result","hasOwn","isPrototypeOf","regExpFlags","RegExpPrototype","RegExp","prototype","R","anObject","that","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","render","_vm","_h","$createElement","_c","_self","attrs","isLoading","staticClass","ref","_v","_s","$t","buttons","FormSchema","on","onSubmit","scopedSlots","_u","key","fn","data","directives","name","rawName","value","expression","domProps","$event","composing","txtEmailTo","IsShowHiddenField","class","isInvalidCCEmail","validateCCEmail","txtEmailCc","isInvalidBCCEmail","validateBCCEmail","txtEmailBcc","txtEmailFrom","txtEmailReplyTo","txtEmailSubject","error","editor","model","callback","$$v","noteDescription","staticRenderFns","components","IsVendor","ApplicantId","TemplateId","CLASSIC_EDITOR","isHidden","notify","InvalidCCEmail","InvalidBCCEmail","isHide","CandidateData","JobsData","CompensationDetailObj","PersonalDetailObj","Emailparams","jobtitle","jobtype","userId","companyId","candidateName","candidateDetail","layoutType","Data","astype","label","config","options","placeholder","validationRules","visibility","type","text","isVisible","onClick","OnSubmit","Close","created","vm","GetUserInfo","ID","CompanyId","$route","params","applicantId","Email","JobTitle","JobId","jobid","GetDdlRecords_Template","getForm","GetDdlRecords_jobs","emailValidate","required","regex","mailvalidate","jsonObject","JSON","parse","EmploymentDetailObj","FetchData","methods","onReady","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","url","DataService","GetEmailTemplate","then","response","DATA","template_subject","emailtemplate","email","template_content","includeinOfferletter","COMPENSATIONDATA","INCLUDEOFFERLETTER","amount","STOCKBENEFITDATA","AMOUNT","Intl","NumberFormat","FIRSTNAME","MIDDLENAME","LASTNAME","JOBTITLE","CompanyName","PERSONALEMAIL","dateofbirth","ReportManagerName","DepartmentName","CountryName","STATE","ADDRESS","CITY","ZIPCODE","LOCATION","EmployeeTypeName","JOININGDATE","ENDDATE","CurrencyName","RemunerationName","PeriodName","PaidAsName","STOCKBENEFITQTY","id","CandidateDetails","filter","e","notice_period","notice_period_type","email_id","HRCandidateDetails","json","first_name","last_name","GetDDLData","forEach","item","index","push","ddljobs","dt","x","$refs","AddAsCandidate","UpdateKeyValue","$router","emailRegex","test","bindJobTitle","onChange","event","formfields","val","SelectJob","CandidateID","CandidateName","UserId","SelectTemplate","job_Id","EmailTo","EmailCc","EmailBcc","EmailFrom","EmailReplyTo","EmailSubject","EmailDesc","Notify","objectPostString","stringify","MailOffer","Status","ShowAlert","component"],"mappings":"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","file":"js/chunk-b7f0aa6e.js","sourcesContent":["'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\n// eslint-disable-next-line redos/no-vulnerable -- safe\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","'use strict';\nvar isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) === 'RegExp');\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar $TypeError = TypeError;\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (!isNullOrUndefined(searchValue)) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(searchValue)));\n        if (!~indexOf(flags, 'g')) throw new $TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = indexOf(string, searchString);\n    while (position !== -1) {\n      replacement = functionalReplace\n        ? toString(replaceValue(searchString, position, string))\n        : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = position + advanceBy > string.length ? -1 : indexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});\n","'use strict';\nvar call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('section',{staticClass:\"main-content\"},[_c('div',{ref:\"hellp\",attrs:{\"id\":\"divMaindealData\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('MakeOffer')))])])])]),_c('div',{staticClass:\"border p-3\"},[_c('dynamic-form',{ref:\"AddAsCandidate\",attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-ToEmail\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light bg-white\"},[_vm._v(\"To:\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailTo),expression:\"txtEmailTo\"}],staticClass:\"form-control  bg-white\",attrs:{\"type\":\"text\",\"disabled\":\"disabled\",\"placeholder\":\"zoe@yopmail.com\"},domProps:{\"value\":(_vm.txtEmailTo)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailTo=$event.target.value}}}),_c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-white  text-info \"},[_c('a',{staticClass:\"text-info cc\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.IsShowHiddenField('isHidden')}}},[_vm._v(_vm._s(_vm.$t('CCuppercase')))])])]),_c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-white\"},[_c('a',{staticClass:\"text-info bcc\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.IsShowHiddenField('isHide')}}},[_vm._v(_vm._s(_vm.$t('BCCuppercase'))+\" \")])])])])]}},{key:\"tgslot-CC\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white  text-dark font-weight-light\"},[_vm._v(_vm._s(_vm.$t('CCuppercase'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailCc),expression:\"txtEmailCc\"}],staticClass:\"form-control  box-shadow bg-white\",class:{'form-control': true, 'is-invalid': _vm.isInvalidCCEmail},attrs:{\"type\":\"text\",\"id\":\"emails\",\"name\":\"CCemail\",\"placeholder\":\"Multiple emails can be separated by comma or semicolon.\"},domProps:{\"value\":(_vm.txtEmailCc)},on:{\"change\":_vm.validateCCEmail,\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailCc=$event.target.value}}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isInvalidCCEmail),expression:\"isInvalidCCEmail\"}],staticClass:\"invalid-feedback\"},[_vm._v(\" \"+_vm._s(_vm.$t('InvalidEmailFormat')))])])]}},{key:\"tgslot-BCC\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white  text-dark font-weight-light\"},[_vm._v(_vm._s(_vm.$t('BCCuppercase'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailBcc),expression:\"txtEmailBcc\"}],staticClass:\"form-control box-shadow bg-white\",class:{'form-control': true, 'is-invalid': _vm.isInvalidBCCEmail},attrs:{\"type\":\"text\",\"id\":\"emails_bcc\",\"name\":\"BCCemail\",\"placeholder\":\"Multiple emails can be separated by comma or semicolon.\"},domProps:{\"value\":(_vm.txtEmailBcc)},on:{\"change\":_vm.validateBCCEmail,\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailBcc=$event.target.value}}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isInvalidBCCEmail),expression:\"isInvalidBCCEmail\"}],staticClass:\"invalid-feedback\"},[_vm._v(\" \"+_vm._s(_vm.$t('InvalidEmailFormat')))])])]}},{key:\"tgslot-FromEmail\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light\"},[_vm._v(_vm._s(_vm.$t('From'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailFrom),expression:\"txtEmailFrom\"}],staticClass:\"form-control box-shadow bg-white\",attrs:{\"type\":\"text\",\"disabled\":\"disabled\",\"placeholder\":\"james149adams@gmail.com\"},domProps:{\"value\":(_vm.txtEmailFrom)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailFrom=$event.target.value}}})])]}},{key:\"tgslot-ReplyTo\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light \"},[_vm._v(_vm._s(_vm.$t('ReplyTo'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailReplyTo),expression:\"txtEmailReplyTo\"},{name:\"validate\",rawName:\"v-validate\",value:(_vm.mailvalidate),expression:\"mailvalidate\"}],staticClass:\"form-control box-shadow bg-white\",attrs:{\"type\":\"text\",\"name\":\"ReplyToEmail\",\"placeholder\":\"me(careers@trentvash.freshersteam.com)\"},domProps:{\"value\":(_vm.txtEmailReplyTo)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailReplyTo=$event.target.value}}})])]}},{key:\"tgslot-Subject\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light\",attrs:{\"id\":\"\"}},[_vm._v(_vm._s(_vm.$t('Subject'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailSubject),expression:\"txtEmailSubject\"}],staticClass:\"form-control box-shadow bg-white\",attrs:{\"type\":\"text\",\"placeholder\":\"Profile for the opening (Job Title/ Designation)\"},domProps:{\"value\":(_vm.txtEmailSubject)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailSubject=$event.target.value}}})])]}},{key:\"tgslot-Description\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('ckeditor',{class:{ 'is-invalid': data.error != '' },attrs:{\"editor\":_vm.editor},model:{value:(_vm.noteDescription),callback:function ($$v) {_vm.noteDescription=$$v},expression:\"noteDescription\"}}),_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(_vm._s(data.error))])]}}])})],1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<template>\r\n    <div>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <section class=\"main-content\">\r\n            <div ref=\"hellp\" id=\"divMaindealData\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 padding-t_8\">\r\n                        <div class=\"theme-primary partition-full\">\r\n                            <span class=\"p-name text-white\">{{ $t('MakeOffer') }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"border p-3\">\r\n                    <dynamic-form ref=\"AddAsCandidate\" lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\"  v-on:OnSubmit=\"onSubmit\">\r\n                        <template v-slot:tgslot-ToEmail=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light bg-white\">To:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailTo\" class=\"form-control  bg-white\" disabled=\"disabled\"\r\n                                    placeholder=\"zoe@yopmail.com\">\r\n                                    <!-- <span v-show=\"isInvalidToEmail\" class=\"invalid-feedback\">  {{$t('InvalidEmailFormat') }}</span> -->\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text bg-white  text-info \">\r\n                                        <a href=\"javascript:;\" v-on:click=\"IsShowHiddenField('isHidden')\"\r\n                                            class=\"text-info cc\">{{ $t('CCuppercase') }}</a>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text bg-white\">\r\n                                        <a href=\"javascript:;\" v-on:click=\"IsShowHiddenField('isHide')\"\r\n                                            class=\"text-info bcc\">{{ $t('BCCuppercase') }} </a>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-CC=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white  text-dark font-weight-light\">{{\r\n                                        $t('CCuppercase') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" id=\"emails\" name=\"CCemail\" v-model=\"txtEmailCc\"\r\n                                    class=\"form-control  box-shadow bg-white\" @change=\"validateCCEmail\" :class=\"{'form-control': true, 'is-invalid': isInvalidCCEmail}\"\r\n                                    placeholder=\"Multiple emails can be separated by comma or semicolon.\">\r\n                                    <span v-show=\"isInvalidCCEmail\" class=\"invalid-feedback\">  {{$t('InvalidEmailFormat') }}</span>\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-BCC=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white  text-dark font-weight-light\">{{\r\n                                        $t('BCCuppercase') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" id=\"emails_bcc\" v-model=\"txtEmailBcc\" name=\"BCCemail\"\r\n                                    class=\"form-control box-shadow bg-white\" @change=\"validateBCCEmail\" :class=\"{'form-control': true, 'is-invalid': isInvalidBCCEmail}\"\r\n                                    placeholder=\"Multiple emails can be separated by comma or semicolon.\">\r\n                                    <span v-show=\"isInvalidBCCEmail\" class=\"invalid-feedback\">  {{$t('InvalidEmailFormat') }}</span>\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-FromEmail=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light\">{{\r\n                                        $t('From') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailFrom\" class=\"form-control box-shadow bg-white\"\r\n                                    disabled=\"disabled\" placeholder=\"james149adams@gmail.com\">\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-ReplyTo=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light \">{{\r\n                                        $t('ReplyTo') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailReplyTo\" name=\"ReplyToEmail\"\r\n                                    class=\"form-control box-shadow bg-white\"\r\n                                    placeholder=\"me(careers@trentvash.freshersteam.com)\" v-validate=\"mailvalidate\">\r\n                                <!-- <span v-show=\"errors.has('ManageEmailData.ReplyToEmail')\" class=\"invalid-feedback\">{{ errors.first('ManageEmailData.ReplyToEmail') }}</span> -->\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-Subject=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light\" id=\"\">{{\r\n                                        $t('Subject') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailSubject\" class=\"form-control box-shadow bg-white\"\r\n                                    placeholder=\"Profile for the opening (Job Title/ Designation)\">\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-Description=\"{ data }\">\r\n                            <ckeditor :editor=\"editor\" v-model=\"noteDescription\"\r\n                                :class=\"{ 'is-invalid': data.error != '' }\">\r\n                            </ckeditor>\r\n                            <span class=\"invalid-feedback\">{{ data.error }}</span>\r\n                        </template>\r\n                    </dynamic-form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DataService from \"@/services/DataService\";\r\nexport default {\r\n    components: {\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            IsVendor: '',\r\n            ApplicantId: 0,\r\n            TemplateId:0,\r\n            editor: this.CLASSIC_EDITOR,\r\n            isHidden: false,\r\n            notify:'',\r\n            txtEmailCc: '',\r\n            txtEmailBcc:'',\r\n            InvalidCCEmail:'',\r\n            InvalidBCCEmail:'',\r\n            txtEmailFrom:'',\r\n            isInvalidCCEmail: false,\r\n            isInvalidBCCEmail: false,\r\n            txtEmailReplyTo:'',\r\n            txtEmailSubject:'',\r\n            isHide: false,\r\n            CandidateData: [],\r\n            JobsData: [],\r\n            CompensationDetailObj:[],\r\n            PersonalDetailObj:[],\r\n            Emailparams:'',\r\n            jobtitle: '',\r\n            jobtype:'',\r\n            txtEmailTo: '',\r\n            userId:'',\r\n            companyId:'',\r\n            candidateName:'',\r\n            candidateDetail: null,\r\n            noteDescription: '',\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Job'),\r\n                            name: \"SelectJob\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('SelectJob'),\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Template'),\r\n                            name: \"SelectTemplate\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('SelectTemplate'),\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"ToEmail\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('Enter To Email'),\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"CC\",\r\n                            value: \"\",\r\n                            visibility: false,\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"BCC\",\r\n                            value: \"\",\r\n                            visibility: false,\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"FromEmail\",\r\n                            value: \"\",\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"ReplyTo\",\r\n                            value: \"\",\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"Subject\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('Enter Subject'),\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('Note Description'),\r\n                            name: \"Description\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: { \"required\": false, max: 5000 },\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-send pr-2'></i>Send\",\r\n                    isVisible:true,                    \r\n                    onClick: this.OnSubmit\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close,\r\n                },\r\n            ],\r\n\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        vm.userId = this.GetUserInfo.ID;\r\n        vm.companyId = this.GetUserInfo.CompanyId;\r\n        vm.IsVendor = this.GetUserInfo.IsVendor;\r\n        vm.ApplicantId = this.$route.params.applicantId;\r\n        vm.TemplateId=this.$route.params.TemplateId;\r\n        vm.txtEmailFrom = this.GetUserInfo.Email;\r\n        vm.JobTitle=this.$route.params.JobTitle;\r\n        vm.JobId=this.$route.params.jobid;\r\n        await vm.GetDdlRecords_Template();\r\n        await this.getForm(vm.ApplicantId);\r\n        this.GetDdlRecords_jobs();\r\n        this.emailValidate = {\r\n            required: true,\r\n            regex: /^(\\s?[^\\s,]+[^\\s,]+\\.[^\\s,]+\\s?,)*(\\s?[^\\s,]+[^\\s,]+\\.[^\\s,]+)$/\r\n        };\r\n        this.mailvalidate = {\r\n            regex: /^\\w+([\\.-]?\\w+)*@@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\r\n        };\r\n        vm.Emailparams=this.$route.params.Emailparams;\r\n        const jsonObject = JSON.parse(vm.Emailparams);\r\n        vm.PersonalDetailObj = jsonObject.PersonalDetailObj;\r\n        vm.CompensationDetailObj = jsonObject.CompensationDetailObj;\r\n        vm.EmploymentDetailObj = jsonObject.EmploymentDetailObj;\r\n        vm.FetchData();\r\n\r\n    },\r\n    methods: {\r\n        onReady(editor) {\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n        },\r\n        FetchData: async function () {\r\n            var vm = this;\r\n            var url = `templateId=${vm.TemplateId}`;\r\n            await DataService.GetEmailTemplate(url).then(\r\n                function (response) {\r\n                    if (response.data.DATA.length > 0) {\r\n                        vm.txtEmailSubject=response.data.DATA[0].template_subject;\r\n                        vm.emailtemplate = response.data.DATA[0].template_subject;\r\n                        var email = response.data.DATA[0].template_content;\r\n                        var emailSubject = response.data.DATA[0].template_subject;\r\n                        var includeinOfferletter = vm.CompensationDetailObj.length == 0 ? '' : vm.CompensationDetailObj[0].COMPENSATIONDATA.INCLUDEOFFERLETTER;\r\n                        var stocksData = vm.CompensationDetailObj.length == 0 ? '' : vm.CompensationDetailObj[0].STOCKBENEFITDATA[0];\r\n                        var StocksName = vm.CompensationDetailObj.length == 0 ? '' : vm.CompensationDetailObj[0].STOCKBENEFITDATA[0];\r\n                        var amount = vm.CompensationDetailObj.length == 0 ? '' : vm.CompensationDetailObj[0].COMPENSATIONDATA.AMOUNT;\r\n                        const numberFormatter = Intl.NumberFormat('en-US');\r\n                        var result = email.replaceAll(\"@candidatefirstname@\", vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].FIRSTNAME)\r\n                            .replaceAll(\"@MiddleName@\", vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].MIDDLENAME)\r\n                            .replaceAll(\"@LastName@\", vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].LASTNAME)\r\n                            .replaceAll(\"@jobtitle@\", vm.EmploymentDetailObj.length == 0 ? '' : vm.EmploymentDetailObj[0].JOBTITLE)\r\n                            .replaceAll(\"@companyname@\", vm.CompanyName)\r\n                            .replaceAll(\"@candidateemail@\", vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].PERSONALEMAIL)\r\n                            .replaceAll(\"@candidatedateofbirth@\", vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].dateofbirth)\r\n                            .replaceAll(\"@reportingmanager@\", vm.EmploymentDetailObj.length == 0 ? '' : vm.EmploymentDetailObj[0].ReportManagerName)\r\n                            .replaceAll(\"@candidatedepartment@\", vm.EmploymentDetailObj.length == 0 ? '' : vm.EmploymentDetailObj[0].DepartmentName)\r\n                            .replaceAll(\"@jobdept@\", vm.EmploymentDetailObj.length == 0 ? '' : vm.EmploymentDetailObj[0].DepartmentName)\r\n                            .replaceAll(\"@candidateaddress@\", vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].CountryName + ' ' + vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].STATE + ' ' + vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].ADDRESS + ' ' + vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].CITY + ' ' + vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].ZIPCODE)\r\n                            .replaceAll(\"@candidatelocation@\", vm.EmploymentDetailObj.length == 0 ? '' : vm.EmploymentDetailObj[0].LOCATION.label)\r\n                            .replaceAll(\"@candidateemploymenttype@\", vm.EmploymentDetailObj.length == 0 ? '' : vm.EmploymentDetailObj[0].EmployeeTypeName)\r\n                            .replaceAll(\"@candidatejoiningdate@\", vm.EmploymentDetailObj.length == 0 ? '' : vm.EmploymentDetailObj[0].JOININGDATE)\r\n                            .replaceAll(\"@candidatejobvalidity@\", vm.EmploymentDetailObj.length == 0 ? '' : vm.EmploymentDetailObj[0].ENDDATE)\r\n                            .replaceAll(\"@compensationsalary@\", includeinOfferletter != true ? '' : vm.CompensationDetailObj.length == 0 ? '' : vm.CompensationDetailObj[0].COMPENSATIONDATA.CurrencyName + ' ' + amount)\r\n                            .replaceAll(\"@Remuneration@\", includeinOfferletter != true ? '' : vm.CompensationDetailObj.length == 0 ? '' : vm.CompensationDetailObj[0].COMPENSATIONDATA.RemunerationName)\r\n                            .replaceAll(\"@Currency@\", includeinOfferletter != true ? '' : vm.CompensationDetailObj.length == 0 ? '' : vm.CompensationDetailObj[0].COMPENSATIONDATA.CurrencyName)\r\n                            .replaceAll(\"@compensationperiod@\", includeinOfferletter != true ? '' : vm.CompensationDetailObj.length == 0 ? '' : vm.CompensationDetailObj[0].COMPENSATIONDATA.PeriodName)\r\n                            .replaceAll(\"@PaidAs@\", includeinOfferletter != true ? '' : vm.CompensationDetailObj.length == 0 ? '' : vm.CompensationDetailObj[0].COMPENSATIONDATA.PaidAsName)\r\n                            .replaceAll(\"@compensationstocks@\", includeinOfferletter != true ? '' : vm.CompensationDetailObj.length == 0 ? '' : vm.CompensationDetailObj[0].STOCKBENEFITQTY[0])\r\n                            .replaceAll(\"@CompanyUrl@\", '')\r\n                            .replaceAll(\"@CompanyAddress@\", vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].ADDRESS)\r\n                            .replaceAll(\"@CompanyCity@\", vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].CITY)\r\n                            .replaceAll(\"@CompanyState@\", vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].STATE)\r\n                            .replaceAll(\"@CompanyZip@\", vm.PersonalDetailObj.length == 0 ? '' : vm.PersonalDetailObj[0].ZIPCODE)\r\n\r\n                        vm.noteDescription = result;\r\n                    }\r\n                }\r\n            );\r\n        },\r\n        getForm: async function (id) {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var url = `applicantId=${id}&moduleName=Hiring&subModuleCode=HR_TALENT_POOL&langCode=en`;\r\n            await DataService.CandidateDetails(url).then(async function (response) {\r\n                if (response != null && response.data != null) {\r\n                    let CandidateData = response.data.data.filter(function (e) {\r\n                        e.notice_period = e.notice_period + ' ' + e.notice_period_type;\r\n                        return true;\r\n                    });\r\n                    vm.CandidateData = CandidateData;\r\n                    vm.txtEmailTo = vm.CandidateData[0].email_id;\r\n                    (vm.FormSchema)[0].Data[0].value = vm.JobId;\r\n                    (vm.FormSchema)[0].Data[1].value = vm.TemplateId;\r\n                    vm.isLoading = false;\r\n                } else {\r\n                    vm.CandidateData = [];\r\n                }\r\n            });\r\n            var url = `applicantId=${vm.ApplicantId}&companyId=${vm.companyId}&loggedUserId=${vm.userId}`;\r\n            await DataService.HRCandidateDetails(url).then(\r\n                function (response) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        vm.candidateName = response.data.data[0].first_name + ' ' + response.data.data[0].last_name;\r\n                        vm.candidateDetail = response.data.data[0];\r\n                        }\r\n                });\r\n        },\r\n        GetDdlRecords_jobs: async function () {\r\n            var vm = this;\r\n            var type = vm.IsVendor == 'no' ? \"JOB_POST_APPLICANT\" : \"GET_CONSULTANT_JOBS\";\r\n            var url = `ids=${vm.ApplicantId}&&moduleName=${'Hiring'}&type=${type}&search=&refId=`;\r\n            await DataService.GetDDLData(url).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        response.data.DATA.forEach((item, index) => {\r\n                            vm.FormSchema[0].Data[0].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                        if (vm.ddljobs != null && vm.ddljobs != '') {\r\n                            var dt = vm.JobsData.filter(x => x.value == vm.ddljobs);\r\n                            vm.jobtitle = dt[0].name;\r\n                        }\r\n                    }\r\n                    vm.$refs.AddAsCandidate.UpdateKeyValue();\r\n                }\r\n            });\r\n        },\r\n        GetDdlRecords_Template: async function () {\r\n            var vm = this;\r\n            var url = `ids=&&&type=OFFER_LETTER_TEMPLATE&search=&refId=`;\r\n            await DataService.GetDDLData(url).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        response.data.DATA.forEach((item, index) => {\r\n                            vm.FormSchema[0].Data[1].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                    }\r\n                    vm.$refs.AddAsCandidate.UpdateKeyValue();\r\n                }\r\n            });\r\n        },\r\n        Close: function () {\r\n            var vm=this;\r\n            vm.$router.push({ name: 'HRMakeOffer', params: { id: vm.ApplicantId, JobId: vm.JobId } });\r\n        },\r\n        IsShowHiddenField: function (type) {\r\n            var vm = this;\r\n            if (type == 'isHidden') {\r\n                vm.isHidden = !vm.isHidden\r\n               vm.isHidden == true ?vm.FormSchema[2].Data[0].visibility =true:vm.FormSchema[2].Data[0].visibility =false;\r\n            } else if (type == 'isHide') {\r\n                vm.isHide = !vm.isHide\r\n                vm.isHide == true ? vm.FormSchema[3].Data[0].visibility = true : vm.FormSchema[3].Data[0].visibility = false;\r\n            }\r\n        },\r\n        validateCCEmail: function () {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            this.isInvalidCCEmail = !emailRegex.test(this.txtEmailCc);\r\n        },\r\n        validateBCCEmail: function () {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            this.isInvalidBCCEmail = !emailRegex.test(this.txtEmailCc);\r\n        },\r\n        // validateToEmail: function () {\r\n        //     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        //     this.isInvalidToEmail = !emailRegex.test(this.txtEmailTo);\r\n        // },\r\n        bindJobTitle: function (id) {\r\n            if (vm.ddljobs != null && vm.ddljobs != '') {\r\n                var dt = vm.JobsData.filter(x => x.value == vm.ddljobs);\r\n                vm.jobtitle = dt[0].name;\r\n                this.onChange(event);\r\n            }\r\n        },\r\n        onSubmit: function (formfields, val) {\r\n                var vm = this;\r\n                if(vm.isInvalidCCEmail !=true && vm.isInvalidBCCEmail !=true){\r\n                if (formfields.SelectJob != \"\" && formfields.SelectJob != null) {\r\n                        var data = {\r\n                            CandidateID: vm.ApplicantId,\r\n                            CandidateName:  vm.candidateName,\r\n                            UserId: vm.userId,\r\n                            CompanyId: vm.companyId,\r\n                            TemplateId: formfields.SelectTemplate,\r\n                            job_Id:  formfields.SelectJob,\r\n                            EmailTo: vm.txtEmailTo,\r\n                            EmailCc: vm.txtEmailCc,\r\n                            EmailBcc: vm.txtEmailBcc,\r\n                            EmailFrom: vm.txtEmailFrom,\r\n                            EmailReplyTo: vm.txtEmailReplyTo,\r\n                            EmailSubject: vm.txtEmailSubject,\r\n                            EmailDesc: vm.noteDescription,\r\n                            Notify: vm.notify,\r\n                        };\r\n                        var objectPostString = JSON.stringify(data);\r\n                            DataService.MailOffer(objectPostString).then((response) => {\r\n                            if (response.data[0].Status == \"Success\")\r\n                            {\r\n                                vm.ShowAlert(vm.$t(\"EmailSuccessfullySend\"), \"success\", true,  vm.$t(\"Alert\"));\r\n                                vm.$router.push({ name: 'CandidateList' });\r\n                             }\r\n                            else if (response.data[0].Status == \"Already Exist\") {\r\n                                vm.ShowAlert(vm.$t(\"CandidateAlreadyApplied\"), \"warning\", true,  vm.$t(\"Alert\"));\r\n                            }\r\n                        }, response => {\r\n                        });\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t(\"PleaseCorrectHighlightedErrors\"), \"failure\", true);\r\n                }\r\n            }\r\n            },\r\n    },\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MailOffer.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MailOffer.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./MailOffer.vue?vue&type=template&id=f921c6cc\"\nimport script from \"./MailOffer.vue?vue&type=script&lang=js\"\nexport * from \"./MailOffer.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}