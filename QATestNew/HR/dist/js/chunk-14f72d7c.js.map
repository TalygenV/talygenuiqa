{"version":3,"sources":["webpack:///./src/views/HR/ExitPolicy/AddEmployee.vue?5771","webpack:///src/views/HR/ExitPolicy/AddEmployee.vue","webpack:///./src/views/HR/ExitPolicy/AddEmployee.vue?a9f4","webpack:///./src/views/HR/ExitPolicy/AddEmployee.vue","webpack:///./src/views/HR/ExitPolicy/EmployeeExitListing.vue?2f2f","webpack:///./src/views/HR/ExitPolicy/Schema.js","webpack:///src/views/HR/ExitPolicy/EmployeeExitListing.vue","webpack:///./src/views/HR/ExitPolicy/EmployeeExitListing.vue?e435","webpack:///./src/views/HR/ExitPolicy/EmployeeExitListing.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isLoading","staticClass","ref","_v","_s","$t","on","Close","buttons","FormSchema","MandatoryString","onSubmit","staticRenderFns","data","EmployeeData","UserData","EmployeeExitId","EditEmployeeData","layoutType","group_name","group_display_name","Data","astype","label","name","value","mode","config","options","onChange","onChangeEmployeeName","visibility","validationRules","max","placeholder","type","class","text","isVisible","onClick","created","vm","GetUserList","$route","params","id","EditEmployee","methods","DataService","GetEmployeeExitDetails","then","response","status","result","EMPLOYEE_EXIT_ID","EditEmployeeName","EMPLOYEE_ID","REASON","IS_ALL_TASK_COMPLETED","IS_KNOWLEDGE_TRANSFERRED","IS_DOCUMENT_TRANSFERRED","IS_STAFF_IDENTIFICATION_CARD_COLLECTED","IS_EMAIL_ACCESS_UPDATED","IS_IT_ASSETS_VERIFIED","IS_LEAVE_BALANCE_VARIFIED","IS_ANY_DUES","IS_FINAL_PAYMENT_VARIFIED","forEach","item","push","USERNAME","USERID","$refs","AddEmployee","UpdateKeyValue","userId","currentTarget","_vOptions","GetUserDetailsByUserId","user_emp_id","email_id","DEPARTMENT_NAME","DESIGNATION_NAME","reason","is_all_task_completed","is_knowledge_transferred","is_document_transferred","is_staff_identification_card_collected","is_email_access_updated","is_it_assets_verified","is_leave_balance_varified","is_any_dues","is_final_payment_varified","$router","formfields","val","jsonobj","EmpExitId","undefined","$parent","EmployeeId","EmployeeName","AllTaskCompleted","KnowledgeTransferred","DocumnetTransferred","DocumentTransferred","EmailAccessUpdated","ItAssetsVerified","ITAssetsVerified","LeaveBalanceVarified","LeaveBalanceVerified","AnyDues","FinalPaymentVarified","FinalPaymentVerified","Reason","IsStaffIdentification","StaffIdentificationCardCollected","JSON","stringify","SaveExitEmployee","Column1","ShowAlert","component","renderActions","ItemData","Headers","listheaderbuttons","TotalRecord","leftSearchFields","FetchData","SortExp","SortBy","PageNumber","actionButtonClick","leftCommonSearch","pagerMethod","commonHeaderButtonClick","sortdata","scopedSlots","_u","key","fn","column","COLUMN_NAME","$options","filters","formatDate","row","DATEOFJOIN","_e","RELIEVINGDATE","title","iconClass","callbackfunction","isdisabled","isvisible","checkPrivilege","leftsearchSchema","fieldName","fieldType","fieldIcon","fieldSearchConditionName","isSearch","paramName","listOptions","listActions","href","icon","additionalSpan","async","bindleftCommonSearchdropdown","instance","modulename","filtername","GetDDLData","json","DATA","components","ShowAddEmployee","Schema","PageSize","TotalPages","CurrentPage","empName","deptName","noRecords","EditId","DATA_TYPE","SORTABLE","VISIBLE","DISPLAY_NAME","DISPLAY_ORDER","reqfrom","EditAddEmployee","EXIT_ID","isPaged","searchCondition","includes","str","searchConditionJson","split","s","SortDir","$","attr","event","self","rtnActionArray","actionItem","action","GetEmployeeExitListing","length","settings","isInSlot","TOTAL_RECORD","Math","ceil"],"mappings":"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","file":"js/chunk-14f72d7c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('section',{staticClass:\"main-content\"},[_c('div',{ref:\"hellp\",attrs:{\"id\":\"divMaindealData\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ManageOffboardEmployee')))]),_c('span',{staticClass:\"float-right\"},[_c('a',{staticClass:\"p-action-btn text-white\",attrs:{\"href\":\"javascript:;\",\"title\":_vm.$t('BacktoList')},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-angle-double-left pr-2\",attrs:{\"aria-hidden\":\"true\"}}),_c('br'),_vm._v(_vm._s(_vm.$t('BacktoList'))+\" \")])])])])]),_c('div',{staticClass:\"border p-3\"},[_c('Form',{ref:\"JobPostForm\"},[_c('dynamic-form',{ref:\"AddEmployee\",attrs:{\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema,\"mandatorytext\":_vm.MandatoryString},on:{\"OnSubmit\":_vm.onSubmit}})],1)],1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n<div>\r\n    <loader :is-visible=\"isLoading\"></loader>\r\n    <section class=\"main-content\">\r\n        <div ref=\"hellp\" id=\"divMaindealData\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{ $t('ManageOffboardEmployee') }}</span>\r\n                        <span class=\"float-right\">\r\n                            <a href=\"javascript:;\" class=\"p-action-btn text-white\" :title=\"$t('BacktoList')\" @click=\"Close\">\r\n                                <em class=\"fa fa-angle-double-left pr-2\" aria-hidden=\"true\"></em>\r\n                                <br />{{ $t('BacktoList') }}\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"border p-3\">\r\n                <Form ref=\"JobPostForm\">\r\n                    <dynamic-form ref=\"AddEmployee\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\" :mandatorytext='MandatoryString'>\r\n                    </dynamic-form>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../../services/DataService'\r\nexport default {\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            EmployeeData: [],\r\n            UserData: [],\r\n            EmployeeExitId: 0,\r\n            EditEmployeeData: [],\r\n            MandatoryString:'Fields marked with an asterisk (*) are mandatory.',\r\n            FormSchema: [{\r\n                    layoutType: \"triple\",\r\n                    group_name: 'Separation Form',\r\n                    group_display_name: this.$t('SeparationForm'),\r\n                    Data: [{\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('EmployeeName'),\r\n                            name: \"EmployeeName\",\r\n                            value: \"\",\r\n                            mode: \"tag\",\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.onChangeEmployeeName,\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": true\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('EmployeeId'),\r\n                            name: \"EmployeeId\",\r\n                            value: \"\",\r\n                            validationRules: {\r\n                                \"required\": false,\r\n                                max: 100\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Email'),\r\n                            name: \"Email\",\r\n                            value: \"\",\r\n                            validationRules: {\r\n                                \"required\": false,\r\n                                max: 100\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Department'),\r\n                            name: \"Department\",\r\n                            value: \"\",\r\n                            validationRules: {\r\n                                \"required\": false,\r\n                                max: 100\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Designation'),\r\n                            name: \"Designation\",\r\n                            value: \"\",\r\n                            validationRules: {\r\n                                \"required\": false,\r\n                                max: 100\r\n                            },\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [{\r\n                        astype: \"TextAreaField\",\r\n                        label: this.$t('Reason'),\r\n                        name: \"Reason\",\r\n                        value: \"\",\r\n                        validationRules: \"\",\r\n                    }]\r\n                },\r\n                {\r\n                    layoutType: \"triple\",\r\n                    group_name: 'Employee Checklist',\r\n                    group_display_name: this.$t('EmployeeChecklist'),\r\n                    Data: [{\r\n                        astype: \"RadioField\",\r\n                        label: this.$t('AllTaskCompleted'),\r\n                        name: \"AllTaskCompleted\",\r\n                        value: \"0\",\r\n                        placeholder: \"\",\r\n                        config: {\r\n                            options: [{ value: \"1\", name: \"Yes\" }, { value: \"0\", name: \"No\" }]\r\n                        },\r\n                        visibility: true,\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    },\r\n                    {\r\n                        astype: \"RadioField\",\r\n                        label: this.$t('KnowledgeTransferred'),\r\n                        name: \"KnowledgeTransferred\",\r\n                        value: \"0\",\r\n                        placeholder: \"\",\r\n                        config: {\r\n                            options: [{ value: \"1\", name: \"Yes\" }, { value: \"0\", name: \"No\" }]\r\n                        },\r\n                        visibility: true,\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    },\r\n                    {\r\n                        astype: \"RadioField\",\r\n                        label: this.$t('DocumentTransferred'),\r\n                        name: \"DocumentTransferred\",\r\n                        value: \"0\",\r\n                        placeholder: \"\",\r\n                        config: {\r\n                            options: [{ value: \"1\", name: \"Yes\" }, { value: \"0\", name: \"No\" }]\r\n                        },\r\n                        visibility: true,\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    },\r\n                    {\r\n                        astype: \"RadioField\",\r\n                        label: this.$t('StaffIdentificationCardCollected'),\r\n                        name: \"StaffIdentificationCardCollected\",\r\n                        value: \"0\",\r\n                        placeholder: \"\",\r\n                        config: {\r\n                            options: [{ value: \"1\", name: \"Yes\" }, { value: \"0\", name: \"No\" }]\r\n                        },\r\n                        visibility: true,\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    }]\r\n                },\r\n                {\r\n                    layoutType: \"triple\",\r\n                    group_name: 'IT Department',\r\n                    group_display_name: this.$t('ITDepartment'),\r\n                    Data: [{\r\n                        astype: \"RadioField\",\r\n                        label: this.$t('EmailAccessUpdated'),\r\n                        name: \"EmailAccessUpdated\",\r\n                        value: \"0\",\r\n                        placeholder: \"\",\r\n                        config: {\r\n                            options: [{ value: \"1\", name: \"Yes\" }, { value: \"0\", name: \"No\" }]\r\n                        },\r\n                        visibility: true,\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    },\r\n                    {\r\n                        astype: \"RadioField\",\r\n                        label: this.$t('ITAssetsVerified'),\r\n                        name: \"ITAssetsVerified\",\r\n                        value: \"0\",\r\n                        placeholder: \"\",\r\n                        config: {\r\n                            options: [{ value: \"1\", name: \"Yes\" }, { value: \"0\", name: \"No\" }]\r\n                        },\r\n                        visibility: true,\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    }]\r\n                },\r\n                {\r\n                    layoutType: \"triple\",\r\n                    group_name: 'Account Department',\r\n                    group_display_name: this.$t('AccountDepartment'),\r\n                    Data: [{\r\n                        astype: \"RadioField\",\r\n                        label: this.$t('LeaveBalanceVerified'),\r\n                        name: \"LeaveBalanceVerified\",\r\n                        value: \"0\",\r\n                        placeholder: \"\",\r\n                        config: {\r\n                            options: [{ value: \"1\", name: \"Yes\" }, { value: \"0\", name: \"No\" }]\r\n                        },\r\n                        visibility: true,\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    },\r\n                    {\r\n                        astype: \"RadioField\",\r\n                        label: this.$t('AnyDues'),\r\n                        name: \"AnyDues\",\r\n                        value: \"0\",\r\n                        placeholder: \"\",\r\n                        config: {\r\n                            options: [{ value: \"1\", name: \"Yes\" }, { value: \"0\", name: \"No\" }]\r\n                        },\r\n                        visibility: true,\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    },\r\n                    {\r\n                        astype: \"RadioField\",\r\n                        label: this.$t('FinalPaymentVerified'),\r\n                        name: \"FinalPaymentVerified\",\r\n                        value: \"0\",\r\n                        placeholder: \"\",\r\n                        config: {\r\n                            options: [{ value: \"1\", name: \"Yes\" }, { value: \"0\", name: \"No\" }]\r\n                        },\r\n                        visibility: true,\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    }]\r\n                }\r\n            ],\r\n            buttons: [{\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    isVisible: true,\r\n\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close,\r\n                },\r\n            ]\r\n        }\r\n    },\r\n    created: function () {\r\n        var vm = this;\r\n        vm.GetUserList();\r\n        vm.EmployeeExitId = this.$route.params.id;\r\n        if(vm.EmployeeExitId > 0){\r\n            vm.EditEmployee();\r\n        }\r\n    },\r\n    methods: {\r\n        EditEmployee() {\r\n            var vm = this;\r\n            var params = `Id=${vm.EmployeeExitId}`\r\n            DataService.GetEmployeeExitDetails(params).then((response) => {                \r\n                if(response.data.status = 'Success'){                   \r\n                    vm.EditEmployeeData = response.data.result[0];\r\n                    if(vm.EditEmployeeData.EMPLOYEE_EXIT_ID !=null){                        \r\n                        vm.EditEmployeeName(vm.EditEmployeeData.EMPLOYEE_EXIT_ID);\r\n                    }\r\n                    vm.FormSchema[0].Data[1].value = vm.EditEmployeeData.EMPLOYEE_ID == null ? '--' : vm.EditEmployeeData.EMPLOYEE_ID; \r\n                    vm.FormSchema[1].Data[0].value = vm.EditEmployeeData.REASON; \r\n                    vm.FormSchema[2].Data[0].value = vm.EditEmployeeData.IS_ALL_TASK_COMPLETED == true ? 1 : 0; \r\n                    vm.FormSchema[2].Data[1].value = vm.EditEmployeeData.IS_KNOWLEDGE_TRANSFERRED == true ? 1 : 0; \r\n                    vm.FormSchema[2].Data[2].value = vm.EditEmployeeData.IS_DOCUMENT_TRANSFERRED == true ? 1 : 0; \r\n                    vm.FormSchema[2].Data[3].value = vm.EditEmployeeData.IS_STAFF_IDENTIFICATION_CARD_COLLECTED == true ? 1 : 0; \r\n                    vm.FormSchema[3].Data[0].value = vm.EditEmployeeData.IS_EMAIL_ACCESS_UPDATED == true ? 1 : 0; \r\n                    vm.FormSchema[3].Data[1].value = vm.EditEmployeeData.IS_IT_ASSETS_VERIFIED == true ? 1 : 0; \r\n                    vm.FormSchema[4].Data[0].value = vm.EditEmployeeData.IS_LEAVE_BALANCE_VARIFIED == true ? 1 : 0; \r\n                    vm.FormSchema[4].Data[1].value = vm.EditEmployeeData.IS_ANY_DUES == true ? 1 : 0; \r\n                    vm.FormSchema[4].Data[2].value = vm.EditEmployeeData.IS_FINAL_PAYMENT_VARIFIED == true ? 1 : 0;  \r\n                }\r\n            })\r\n        },\r\n        GetUserList() {\r\n            var vm = this;\r\n            var params = `projectId=&userType=&isActive=1&ticketId=0&moduleName=OffboardEmployee`;\r\n            DataService.GetUserList(params).then((response) => {\r\n                if (response.data != '') {\r\n                    vm.EmployeeData = response.data;\r\n                    vm.EmployeeData.forEach(item => {\r\n                        vm.FormSchema[0].Data[0].config.options.push({\r\n                            name: item.USERNAME,\r\n                            value: item.USERID\r\n                        })\r\n                    })\r\n                }\r\n                vm.$refs.AddEmployee.UpdateKeyValue();\r\n            });\r\n        },       \r\n        onChangeEmployeeName: function (id) {\r\n            var vm = this;\r\n            var userId = id.currentTarget._vOptions[1];\r\n            var params = `UserId=${userId}`\r\n            DataService.GetUserDetailsByUserId(params).then((response) => {\r\n                if(response.data != ''){\r\n                    vm.UserData = response.data[0]; \r\n                    vm.FormSchema[0].Data[1].value = vm.UserData.user_emp_id == null ? '--' : vm.UserData.user_emp_id; \r\n                    vm.FormSchema[0].Data[2].value = vm.UserData.email_id; \r\n                    vm.FormSchema[0].Data[3].value = vm.UserData.DEPARTMENT_NAME == null ? '--' : vm.UserData.DEPARTMENT_NAME; \r\n                    vm.FormSchema[0].Data[4].value = vm.UserData.DESIGNATION_NAME == null ? '--' : vm.UserData.DESIGNATION_NAME; \r\n                    vm.FormSchema[1].Data[0].value = vm.UserData.reason; \r\n                    vm.FormSchema[2].Data[0].value = vm.UserData.is_all_task_completed == true ? 1 : 0; \r\n                    vm.FormSchema[2].Data[1].value = vm.UserData.is_knowledge_transferred == true ? 1 : 0; \r\n                    vm.FormSchema[2].Data[2].value = vm.UserData.is_document_transferred == true ? 1 : 0; \r\n                    vm.FormSchema[2].Data[3].value = vm.UserData.is_staff_identification_card_collected == true ? 1 : 0; \r\n                    vm.FormSchema[3].Data[0].value = vm.UserData.is_email_access_updated == true ? 1 : 0; \r\n                    vm.FormSchema[3].Data[1].value = vm.UserData.is_it_assets_verified == true ? 1 : 0; \r\n                    vm.FormSchema[4].Data[0].value = vm.UserData.is_leave_balance_varified == true ? 1 : 0; \r\n                    vm.FormSchema[4].Data[1].value = vm.UserData.is_any_dues == true ? 1 : 0; \r\n                    vm.FormSchema[4].Data[2].value = vm.UserData.is_final_payment_varified == true ? 1 : 0; \r\n                }\r\n            })\r\n        },\r\n        EditEmployeeName: function (id) {\r\n            var vm = this;\r\n            var userId = id;\r\n            vm.FormSchema[0].Data[0].value=id;\r\n            var params = `UserId=${userId}`\r\n            DataService.GetUserDetailsByUserId(params).then((response) => {\r\n                if(response.data != ''){\r\n                    vm.UserData = response.data[0]; \r\n                    vm.FormSchema[0].Data[1].value = vm.UserData.user_emp_id == null ? '--' : vm.UserData.user_emp_id; \r\n                    vm.FormSchema[0].Data[2].value = vm.UserData.email_id; \r\n                    vm.FormSchema[0].Data[3].value = vm.UserData.DEPARTMENT_NAME == null ? '--' : vm.UserData.DEPARTMENT_NAME; \r\n                    vm.FormSchema[0].Data[4].value = vm.UserData.DESIGNATION_NAME == null ? '--' : vm.UserData.DESIGNATION_NAME;                     \r\n                }\r\n                vm.$refs.AddEmployee.UpdateKeyValue();\r\n            })\r\n        },\r\n        Close: function () {\r\n            this.$router.push({\r\n                name: 'EmployeeExitListing'\r\n            });\r\n        },\r\n        onSubmit(formfields, val) {\r\n            var vm = this;\r\n            var jsonobj = {\r\n                EmpExitId: vm.$parent.EmployeeExitId == undefined ? 0 : vm.$parent.EmployeeExitId,\r\n                EmployeeId: formfields.EmployeeName,\r\n                AllTaskCompleted: formfields.AllTaskCompleted == true ? '1' : '0',\r\n                KnowledgeTransferred: formfields.KnowledgeTransferred == true ? '1' : '0',\r\n                DocumnetTransferred: formfields.DocumentTransferred == true ? '1' : '0',\r\n                EmailAccessUpdated: formfields.EmailAccessUpdated == true ? '1' : '0',\r\n                ItAssetsVerified: formfields.ITAssetsVerified == true ? '1' : '0',\r\n                LeaveBalanceVarified: formfields.LeaveBalanceVerified == true ? '1' : '0',\r\n                AnyDues: formfields.AnyDues == true ? '1' : '0',\r\n                FinalPaymentVarified: formfields.FinalPaymentVerified == true ? '1' : '0',\r\n                Reason: formfields.Reason,\r\n                IsStaffIdentification: formfields.StaffIdentificationCardCollected == true ? '1' : '0'\r\n            };\r\n            var params = JSON.stringify(jsonobj);\r\n            DataService.SaveExitEmployee(params).then((response) => {\r\n                if (response.data[0].Column1 = 1){\r\n                    vm.ShowAlert((vm.$t('SaveoffboardEmployee')), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.Close();\r\n                } else if (response.data[0].Column1 = 2) {\r\n                    vm.ShowAlert((vm.$t('UpdateExit')), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.Close();\r\n                } else {\r\n                    vm.ShowAlert((vm.$t(\"Exit\")), \"failure\", true, vm.$t(\"Alert\"));\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddEmployee.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddEmployee.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddEmployee.vue?vue&type=template&id=5f2bbe85\"\nimport script from \"./AddEmployee.vue?vue&type=script&lang=js\"\nexport * from \"./AddEmployee.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('tg-list',{attrs:{\"IsShowAction\":true,\"ModuleName\":\"Hiring\",\"SubModuleCode\":\"HR_JOB\",\"RenderRowActionMethod\":_vm.renderActions,\"IdentityColumn\":\"EXIT_ID\",\"HeaderText\":_vm.$t('OffboardEmployeeList'),\"listType\":['List'],\"ListData\":_vm.ItemData,\"HeaderData\":_vm.Headers,\"HeaderButtons\":_vm.listheaderbuttons,\"TotalRecords\":_vm.TotalRecord,\"SearchFields\":_vm.leftSearchFields,\"ListDataCallBackFunction\":_vm.FetchData,\"showCheckBox\":false,\"SortExp\":_vm.SortExp,\"SortBy\":_vm.SortBy,\"NorecordfoundText\":_vm.$t('NoRecordfound'),\"CurrentPageNumber\":_vm.PageNumber},on:{\"ActionButtonClick\":_vm.actionButtonClick,\"LeftsearchButtonClick\":_vm.leftCommonSearch,\"PagerButtonClick\":_vm.pagerMethod,\"HeaderButtonClick\":_vm.commonHeaderButtonClick,\"SortdataButtonClick\":_vm.sortdata},scopedSlots:_vm._u([{key:\"slotdata\",fn:function(ref){\nvar data = ref.data;\nreturn [(data.column.COLUMN_NAME == 'DATEOFJOIN')?[_c('td',{staticClass:\"text-center single-action tourguide_a\"},[_vm._v(\" \"+_vm._s(_vm.$options.filters.formatDate(data.row.DATEOFJOIN))+\" \")])]:_vm._e(),(data.column.COLUMN_NAME == 'RELIEVINGDATE')?[_c('td',{staticClass:\"text-center single-action tourguide_a\"},[_vm._v(\" \"+_vm._s(_vm.$options.filters.formatDate(data.row.RELIEVINGDATE))+\" \")])]:_vm._e()]}}])}),(_vm.ShowAddEmployee)?_c('AddEmployee'):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import DataService from \"../../../services/DataService\";\r\nlet buttons =\r\n    [\r\n    {\r\n        title: 'Add Offboard Employee ',\r\n        iconClass: 'fa-plus',\r\n        callbackfunction: 'AddEmployee',\r\n        isdisabled: false,\r\n        isvisible: true,\r\n        checkPrivilege: false,\r\n        id:''\r\n    }\r\n];\r\nlet leftsearchSchema =[{\r\n        fieldName: 'EMPLOYEE NAME', \r\n        fieldType: \"text\", \r\n        fieldIcon: \"fa fa-vcard\",\r\n        fieldSearchConditionName: ['EmpName'],\r\n        isSearch: false,\r\n        paramName:\"search\",\r\n        value: \"\",\r\n        listOptions: [],\r\n    },\r\n    {\r\n        fieldName: 'DEPARTMENT', \r\n        fieldType: \"ddl-check\", \r\n        fieldIcon: \"fa fa-users\",\r\n        fieldSearchConditionName: ['DeptName'],\r\n        paramName:\"search\",\r\n        isSearch: false,\r\n        value: \"\",\r\n        listOptions: [],\r\n    }\r\n];    \r\nlet listActions = [\r\n    {\r\n        title:'Edit',\r\n        callbackfunction:'Edit',\r\n        href: 'javascript:void(0)',\r\n        icon: 'fa fa-pencil text-success action-icon',\r\n        additionalSpan:'',\r\n        isvisible: true,\r\n        isdisabled: false,\r\n    }\r\n];\r\nasync function  bindleftCommonSearchdropdown(instance,modulename, filtername) {\r\n    var vm = instance;\r\n    let params= `ids=&moduleName=${modulename}&type=${filtername}&search=&refId=`\r\n    await DataService.GetDDLData(params).then(function (response) {\r\n    var json = response.data;\r\n        if (json != null) {\r\n            if (filtername == \"DEPARTMENT\") {\r\n                if(json !=\"\"){\r\n                    vm.leftSearchFields[1].listOptions = json.DATA;\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\nexport default { buttons,leftsearchSchema,listActions, bindleftCommonSearchdropdown};","<template>\r\n    <section>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <tg-list :IsShowAction=\"true\" ModuleName=\"Hiring\" SubModuleCode=\"HR_JOB\" :RenderRowActionMethod=\"renderActions\" \r\n            v-on:ActionButtonClick=\"actionButtonClick\" IdentityColumn=\"EXIT_ID\" :HeaderText=\"$t('OffboardEmployeeList')\" :listType=\"['List']\"\r\n            :ListData=\"ItemData\" :HeaderData=\"Headers\" :HeaderButtons=\"listheaderbuttons\" :TotalRecords=\"TotalRecord\"\r\n            :SearchFields=\"leftSearchFields\" :ListDataCallBackFunction=\"FetchData\" :showCheckBox=\"false\" :SortExp=\"SortExp\" \r\n            :SortBy=\"SortBy\" :NorecordfoundText=\"$t('NoRecordfound')\" :CurrentPageNumber=\"PageNumber\" v-on:LeftsearchButtonClick=\"leftCommonSearch\"\r\n            v-on:PagerButtonClick=\"pagerMethod\" v-on:HeaderButtonClick=\"commonHeaderButtonClick\" v-on:SortdataButtonClick=\"sortdata\"> \r\n            <template v-slot:slotdata=\"{ data }\">\r\n                <template v-if=\"data.column.COLUMN_NAME == 'DATEOFJOIN'\">\r\n                    <td class=\"text-center single-action tourguide_a\">\r\n                        {{ $options.filters.formatDate(data.row.DATEOFJOIN) }}\r\n                    </td>\r\n                </template>\r\n                <template v-if=\"data.column.COLUMN_NAME == 'RELIEVINGDATE'\">\r\n                    <td class=\"text-center single-action tourguide_a\">\r\n                        {{ $options.filters.formatDate(data.row.RELIEVINGDATE) }}\r\n                    </td>\r\n                </template>\r\n            </template> \r\n        </tg-list>\r\n        <AddEmployee v-if=\"ShowAddEmployee\"></AddEmployee>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport Schema from '../ExitPolicy/Schema';\r\nimport DataService from '../../../services/DataService';\r\nimport AddEmployee from './AddEmployee.vue';\r\n\r\nexport default {\r\n    components: {\r\n        AddEmployee\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            ShowAddEmployee: false,\r\n            ItemData: [],\r\n            listheaderbuttons: Schema.buttons,\r\n            leftSearchFields: Schema.leftsearchSchema,\r\n            listActions: Schema.listActions,\r\n            TotalRecord: 0,\r\n            SortExp: '',\r\n            SortBy: '',\r\n            PageNumber: 1,\r\n            PageSize: 10,\r\n            TotalPages: 0,\r\n            CurrentPage: 1,\r\n            empName: '',\r\n            deptName: '',\r\n            noRecords: '',\r\n            EditId: 0,\r\n            Headers: [{\r\n                    COLUMN_NAME: \"EMPLOYEENAME\",\r\n                    DATA_TYPE: \"text\",\r\n                    SORTABLE: true,\r\n                    VISIBLE: true,\r\n                    DISPLAY_NAME: \"Employee Name\",\r\n                    DISPLAY_ORDER: 1\r\n                },\r\n                {\r\n                    COLUMN_NAME: \"DEPARTMENTNAME\",\r\n                    DATA_TYPE: \"text\",\r\n                    SORTABLE: true,\r\n                    VISIBLE: true,\r\n                    DISPLAY_NAME: \"Department\",\r\n                    DISPLAY_ORDER: 2\r\n                },\r\n                {\r\n                    COLUMN_NAME: \"DATEOFJOIN\",\r\n                    DATA_TYPE: \"text\",\r\n                    SORTABLE: true,\r\n                    VISIBLE: true,\r\n                    DISPLAY_NAME: \"Date of Hire\",\r\n                    DISPLAY_ORDER: 3\r\n                },\r\n                {\r\n                    COLUMN_NAME: \"RELIEVINGDATE\",\r\n                    DATA_TYPE: \"text\",\r\n                    SORTABLE: true,\r\n                    VISIBLE: true,\r\n                    DISPLAY_NAME: \"Relieving Date\",\r\n                    DISPLAY_ORDER: 4\r\n                },\r\n                {\r\n                    COLUMN_NAME: \"EMPTENURE\",\r\n                    DATA_TYPE: \"text\",\r\n                    SORTABLE: true,\r\n                    VISIBLE: true,\r\n                    DISPLAY_NAME: \"Employee Tenure\",\r\n                    DISPLAY_ORDER: 5\r\n                },\r\n                {\r\n                    COLUMN_NAME: \"REASON\",\r\n                    DATA_TYPE: \"text\",\r\n                    SORTABLE: true,\r\n                    VISIBLE: true,\r\n                    DISPLAY_NAME: \"Reason\",\r\n                    DISPLAY_ORDER: 6\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    async created() {\r\n        var vm = this;\r\n        await vm.FetchData();\r\n        await Schema.bindleftCommonSearchdropdown(vm, \"HIRING\", \"DEPARTMENT\");\r\n    },\r\n    methods: {\r\n        AddEmployee: function (EditId) {\r\n            this.EditId = EditId;\r\n            this.ShowAddEmployee = true;\r\n            this.$router.push({ name: 'AddEmployee', params: { reqfrom: 'ExitPolicy/AddEmployee', id: EditId} });\r\n        },\r\n        EditAddEmployee: function (EXIT_ID) {\r\n            var vm = this;\r\n            if (EXIT_ID > 0) {\r\n                var id = EXIT_ID;\r\n\r\n                vm.$router.push({\r\n                    name: 'AddEmployee',\r\n                    params: {\r\n                        id: id,\r\n                        reqfrom: 'ExitPolicy/AddEmployee'\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        leftCommonSearch: function (value) {\r\n            var vm = this;\r\n            this.PageNumber = value.PageNumber;\r\n            this.isPaged = 1;\r\n            if (typeof value.searchCondition != 'undefined') {\r\n                let searchCondition = value.searchCondition;\r\n                if (searchCondition.includes(\"EmpName\")) {\r\n                    let str = value.searchConditionJson;\r\n                    let result = str.split('=')[1];\r\n                    vm.empName = result;\r\n                } else {\r\n                    vm.empName = '';\r\n                }\r\n            } \r\n            if (typeof value.searchCondition != 'undefined') {\r\n                let searchCondition = value.searchCondition;\r\n                if (searchCondition.includes(\"DeptName\")) {\r\n                    let str = value.searchConditionJson;\r\n                    let result = str.split('=')[1];\r\n                    vm.deptName = result;\r\n                } else {\r\n                    vm.deptName = '';\r\n                }\r\n            }\r\n            this.FetchData();\r\n        },\r\n        pagerMethod: function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            this.FetchData();\r\n        },\r\n        sortdata: function (s) {\r\n            var SortDir = \"sort tb_headerSortDown\";\r\n            this.SortBy = s;\r\n            if (s === this.SortBy) {\r\n                if (this.SortExp == \"\") {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                } else if (this.SortExp == \"ASC\") {\r\n                    this.SortExp = \"DESC\";\r\n                    SortDir = \"sort tb_headerSortUp\";\r\n                } else {\r\n                    this.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n            }\r\n            this.FetchData();\r\n            $(\"#\" + s + '  span:first-child').attr(\"class\", SortDir);\r\n        },\r\n        commonHeaderButtonClick: function (event) {\r\n            switch (event.callbackfunction) {\r\n                case \"AddEmployee\":\r\n                    this.AddEmployee(0, 'AddEmployee');\r\n                break;\r\n            }\r\n        },\r\n        actionButtonClick: function (callbackfunction, item) {\r\n            switch (callbackfunction) {\r\n                case 'Edit':\r\n                    this.EditAddEmployee(item.EXIT_ID)\r\n                break;\r\n            }\r\n        },\r\n        renderActions: function (row) {\r\n            var self = this;\r\n            let rtnActionArray = [];\r\n            self.listActions.forEach(actionItem => {\r\n                let action = {\r\n                    ...actionItem\r\n                };\r\n                switch (action.title) {\r\n                    case 'Edit':\r\n                        action.isVisible = true;\r\n                        break;\r\n                    default: {\r\n                        action.isVisible = true;\r\n                    }\r\n                }\r\n                rtnActionArray.push(action);\r\n            });\r\n            return rtnActionArray;\r\n        },\r\n        FetchData: async function () {\r\n            var vm = this;\r\n            var params = `employee=${vm.empName}&department=${vm.deptName}&sortBy=${vm.SortBy}&sortExp=${vm.SortExp}&pageSize=${vm.PageSize}&pageNumber=${vm.PageNumber}`\r\n            await DataService.GetEmployeeExitListing(params).then((response) => {\r\n                if (response.data && response.data.length > 0) {\r\n                    vm.ItemData = [];\r\n                    vm.Headers.forEach((column) => {\r\n                        column.settings = null;\r\n                        if (column.COLUMN_NAME == \"DATEOFJOIN\") {\r\n                            column.settings = {\r\n                                isInSlot: true,\r\n                            };\r\n                        }\r\n                        if (column.COLUMN_NAME == \"RELIEVINGDATE\") {\r\n                            column.settings = {\r\n                                isInSlot: true,\r\n                            };\r\n                        }\r\n                    });\r\n                    vm.ItemData = response.data;\r\n                    vm.TotalRecord = response.data[0].TOTAL_RECORD;\r\n                    vm.TotalPages = Math.ceil(vm.TotalRecord / vm.PageSize);\r\n                    vm.CurrentPage = vm.PageNumber;\r\n                    vm.noRecords = false;\r\n                } else {\r\n                    vm.ItemData = [];\r\n                    vm.TotalRecord = 0\r\n                    vm.noRecords = true;\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EmployeeExitListing.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EmployeeExitListing.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./EmployeeExitListing.vue?vue&type=template&id=235406ce\"\nimport script from \"./EmployeeExitListing.vue?vue&type=script&lang=js\"\nexport * from \"./EmployeeExitListing.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}