{"version":3,"sources":["webpack:///./src/views/HR/Vendoruser/AddVendor.vue?bf94","webpack:///src/views/HR/Vendoruser/AddVendor.vue","webpack:///./src/views/HR/Vendoruser/AddVendor.vue?5840","webpack:///./src/views/HR/Vendoruser/AddVendor.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isLoading","staticClass","_v","_s","$t","on","Close","ref","buttons","FormSchema","scopedSlots","_u","key","fn","data","directives","name","rawName","value","expression","class","CheckEmailtab","domProps","validateEmail","$event","target","composing","txtEmail","_e","checkPasswordtab","validatePassword","txtPassword","checkConPasswordtab","validateConPassword","txtconfirmPassword","SubmitData","staticRenderFns","EditFunctionalArea","AddFunctionalArea","checkEmail","checkPassword","checkConPassword","IsEmailExist","isInvalidEmail","isInvalidPassword","layoutType","Data","astype","label","validationRules","max","config","options","onChange","GetCountryName","type","text","isVisible","onClick","CountryName","companyId","userId","RequisitionId","created","vm","ShowCountry","methods","CountryData","params","DataService","GetDDLData","then","response","DATA","length","$refs","AddVendor","UpdateKeyValue","emailRegex","test","isConfirmPassword","x","y","id","filterEventName","OptionsForBind","filter","z","form","validate","errors","Email","Password","result","url","CheckEmail","ShowAlert","jsonobj","PackageId","CompanyName","FirstName","LastName","ConfirmPassword","CountryId","State","City","Address1","Address2","ZipCode","Phone","AccountStatus","NetAmount","CompDescription","Price","TimeZoneId","TotalNoOfLicense","PasswordSalt","PaymentOption","BillingAnniversaryDate","CompanyType","BatchId","PackageQueryString","IsClientToCa","NoOfLicense","OneTimePayment","IsTrial","ip","Token","SubscriptionId","PaymentStatus","Requestfrom","NoOfUsers","AddOnIds","RefCode","TalygenAmount","AgentId","ParentCompanyId","CustomizeAddOn","AnniversaryDateList","BillingScheduleType","PackageName","ProNetAmount","PackageWithLicense","os","BAddress1","BAddress2","BCountry","BCountryName","BCity","BState","BZipCode","UserId","JSON","stringify","$parent","FetchData","$router","push","component"],"mappings":"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","file":"js/chunk-2d0e8c5c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('section',{staticClass:\"main-content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('AddVendor')))]),_c('span',{staticClass:\"p-actions float-right\"},[_c('a',{staticClass:\"p-action-btn text-white\",attrs:{\"title\":\"Back to List\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-angle-double-left\"}),_c('br'),_c('span',[_vm._v(_vm._s(_vm.$t('BacktoList'))+\" \")])])])])])]),_c('div',{staticClass:\"border p-3\"},[_c('Form',{ref:\"form\"},[_c('dynamic-form',{ref:\"AddVendor\",attrs:{\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},scopedSlots:_vm._u([{key:\"tgslot-Email\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('Field',{attrs:{\"name\":\"Email\",\"rules\":{ 'required': true }}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmail),expression:\"txtEmail\"}],staticClass:\"form-control box-shadow bg-white\",class:{ 'form-control': true, 'is-invalid': _vm.CheckEmailtab },attrs:{\"type\":\"text\",\"name\":\"Email\"},domProps:{\"value\":(_vm.txtEmail)},on:{\"change\":_vm.validateEmail,\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmail=$event.target.value}}})]),(_vm.isInvalidEmail)?_c('span',{staticClass:\"invalid-feedback d-block\"},[_vm._v(\" \"+_vm._s(_vm.$t('EnterValidEmail')))]):_vm._e(),(_vm.checkEmail)?_c('span',{staticClass:\"invalid-feedback d-block\",attrs:{\"name\":\"Email\"}},[_vm._v(\" \"+_vm._s(_vm.$t('EmailRequired')))]):_vm._e()]}},{key:\"tgslot-Password\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('Field',{attrs:{\"name\":\"Password\",\"rules\":{ 'required': true }}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtPassword),expression:\"txtPassword\"}],staticClass:\"form-control box-shadow bg-white\",class:{ 'form-control': true, 'is-invalid': _vm.checkPasswordtab },attrs:{\"type\":\"Password\",\"name\":\"Password\"},domProps:{\"value\":(_vm.txtPassword)},on:{\"change\":_vm.validatePassword,\"input\":function($event){if($event.target.composing){ return; }_vm.txtPassword=$event.target.value}}})]),(_vm.isInvalidPassword)?_c('span',{staticClass:\"invalid-feedback d-block\"},[_vm._v(\" \"+_vm._s(_vm.$t('PasswordValidation')))]):_vm._e(),(_vm.checkPassword)?_c('span',{staticClass:\"invalid-feedback d-block\",attrs:{\"name\":\"Email\"}},[_vm._v(\" \"+_vm._s(_vm.$t('PasswordRequired')))]):_vm._e()]}},{key:\"tgslot-ConfirmPassword\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('Field',{attrs:{\"name\":\"Password\",\"rules\":{ 'required': true }}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtconfirmPassword),expression:\"txtconfirmPassword\"}],staticClass:\"form-control box-shadow bg-white\",class:{ 'form-control': true, 'is-invalid': _vm.checkConPasswordtab },attrs:{\"type\":\"Password\",\"name\":\"ConfirmPassword\"},domProps:{\"value\":(_vm.txtconfirmPassword)},on:{\"change\":_vm.validateConPassword,\"input\":function($event){if($event.target.composing){ return; }_vm.txtconfirmPassword=$event.target.value}}})]),(_vm.isConfirmPassword)?_c('span',{staticClass:\"invalid-feedback d-block\"},[_vm._v(\" \"+_vm._s(_vm.$t('PwdConfPwdMatching')))]):_vm._e(),(_vm.checkConPassword)?_c('span',{staticClass:\"invalid-feedback d-block\",attrs:{\"name\":\"Email\"}},[_vm._v(\" \"+_vm._s(_vm.$t('ConfirmPasswordRequired')))]):_vm._e()]}}])}),_c('div',{staticClass:\"row flex-row-reverse mt-2\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success mr-2 addSalesOrder_a\",attrs:{\"href\":\"javascript:;\",\"title\":\"Save\"},on:{\"click\":function($event){return _vm.SubmitData()}}},[_c('em',{staticClass:\"fa fa-save pr-2\"}),_vm._v(_vm._s(_vm.$t('Save'))+\" \")]),_c('a',{staticClass:\"btn btn-danger\",attrs:{\"href\":\"javascript:void(0)\",\"title\":\"Cancel\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-close pr-2\"}),_vm._v(_vm._s(_vm.$t('Cancel'))+\" \")])]),_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"py-2\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])])])],1)],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <section class=\"main-content\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{ $t('AddVendor') }}</span>\r\n                        <span class=\"p-actions float-right\">\r\n                            <a class=\"p-action-btn text-white\" @click=\"Close\" title=\"Back to List\"><em\r\n                                    class=\"fa fa-angle-double-left\"></em><br /><span>{{ $t('BacktoList') }} </span></a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"border p-3\">\r\n                <Form ref=\"form\">\r\n                    <dynamic-form ref=\"AddVendor\" :buttons=\"buttons\" :schema=\"FormSchema\">\r\n                        <template v-slot:tgslot-Email=\"{ data }\">\r\n                            <Field name=\"Email\" :rules=\"{ 'required': true }\">\r\n                                <input type=\"text\" v-model=\"txtEmail\" name=\"Email\" class=\"form-control box-shadow bg-white\"\r\n                                    @change=\"validateEmail\" :class=\"{ 'form-control': true, 'is-invalid': CheckEmailtab }\">\r\n                            </Field>\r\n\r\n                            <span v-if=\"isInvalidEmail\" class=\"invalid-feedback d-block\"> {{ $t('EnterValidEmail') }}</span>\r\n                            <span v-if=\"checkEmail\" name=\"Email\" class=\"invalid-feedback d-block\"> {{ $t('EmailRequired')\r\n                            }}</span>\r\n                        </template>\r\n                        <template v-slot:tgslot-Password=\"{ data }\">\r\n                            <Field name=\"Password\" :rules=\"{ 'required': true }\">\r\n                                <input type=\"Password\" v-model=\"txtPassword\" name=\"Password\"\r\n                                    class=\"form-control box-shadow bg-white\" @change=\"validatePassword\"\r\n                                    :class=\"{ 'form-control': true, 'is-invalid': checkPasswordtab }\">\r\n                            </Field>\r\n                            <span v-if=\"isInvalidPassword\" class=\"invalid-feedback d-block\"> {{ $t('PasswordValidation')\r\n                            }}</span>\r\n                            <span v-if=\"checkPassword\" name=\"Email\" class=\"invalid-feedback d-block\"> {{\r\n                                $t('PasswordRequired') }}</span>\r\n                        </template>\r\n                        <template v-slot:tgslot-ConfirmPassword=\"{ data }\">\r\n                            <Field name=\"Password\" :rules=\"{ 'required': true }\">\r\n                                <input type=\"Password\" v-model=\"txtconfirmPassword\" name=\"ConfirmPassword\"\r\n                                    class=\"form-control box-shadow bg-white\" @change=\"validateConPassword\"\r\n                                    :class=\"{ 'form-control': true, 'is-invalid': checkConPasswordtab }\">\r\n                            </Field>\r\n                            <span v-if=\"isConfirmPassword\" class=\"invalid-feedback d-block\"> {{ $t('PwdConfPwdMatching')\r\n                            }}</span>\r\n                            <span v-if=\"checkConPassword\" name=\"Email\" class=\"invalid-feedback d-block\"> {{\r\n                                $t('ConfirmPasswordRequired') }}</span>\r\n                        </template>\r\n\r\n                    </dynamic-form>\r\n                    <div class=\"row flex-row-reverse mt-2\">\r\n                        <div class=\"col-lg-6 text-right\">\r\n                            <a href=\"javascript:;\" v-on:click=\"SubmitData()\" class=\"btn btn-success mr-2 addSalesOrder_a\"\r\n                                title=\"Save\">\r\n                                <em class=\"fa fa-save pr-2\"></em>{{ $t('Save') }}\r\n                            </a>\r\n                            <a href=\"javascript:void(0)\" class=\"btn btn-danger\" title=\"Cancel\" @click=\"Close\">\r\n                                <em class=\"fa fa-close pr-2\"></em>{{ $t('Cancel') }}\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"col-lg-6\">\r\n                            <div class=\"py-2\">\r\n                                <small class=\"text-danger\">{{ $t('MandatoryString') }}</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DataService from '../../../services/DataService'\r\nexport default {\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            EditFunctionalArea: false,\r\n            AddFunctionalArea: true,\r\n            txtEmail: '',\r\n            txtPassword: '',\r\n            txtconfirmPassword: '',\r\n            checkEmail: false,\r\n            CheckEmailtab: false,\r\n            checkPassword: false,\r\n            checkPasswordtab: false,\r\n            checkConPassword: false,\r\n            checkConPasswordtab: false,\r\n            IsEmailExist:true,\r\n            isInvalidEmail: '',\r\n            isInvalidPassword: '',\r\n            FormSchema: [{\r\n                layoutType: \"triple\",\r\n                Data: [{\r\n                    astype: \"TextField\",\r\n                    label: this.$t('CompanyName'),\r\n                    name: \"CompanyName\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"TextField\",\r\n                    label: this.$t('FirstName'),\r\n                    name: \"FirstName\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"TextField\",\r\n                    label: this.$t('LastName'),\r\n                    name: \"LastName\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                ]\r\n            },\r\n            {\r\n                layoutType: \"triple\",\r\n                Data: [{\r\n                    astype: \"SlotField\",\r\n                    label: this.$t('Email'),\r\n                    name: \"Email\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"SlotField\",\r\n                    label: this.$t('Password'),\r\n                    name: \"Password\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"SlotField\",\r\n                    label: this.$t('ConfirmPassword'),\r\n                    name: \"ConfirmPassword\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                ]\r\n            },\r\n            {\r\n                layoutType: \"triple\",\r\n                Data: [{\r\n                    astype: \"SelectField\",\r\n                    label: this.$t('Country'),\r\n                    name: \"Country\",\r\n                    value: \"\",\r\n                    config: {\r\n                        options: [],\r\n                        onChange: this.GetCountryName\r\n                    },\r\n                    validationRules: { \"required\": true },\r\n                },\r\n                {\r\n                    astype: \"TextField\",\r\n                    label: this.$t('State'),\r\n                    name: \"State\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"TextField\",\r\n                    label: this.$t('City'),\r\n                    name: \"City\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                ]\r\n            },\r\n            {\r\n                layoutType: \"triple\",\r\n                Data: [{\r\n                    astype: \"TextField\",\r\n                    label: this.$t('Address 1'),\r\n                    name: \"Address1\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"TextField\",\r\n                    label: this.$t('Address 2'),\r\n                    name: \"Address2\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": false,\r\n                        max: 100\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"NumericField\",\r\n                    label: this.$t('ZipCode'),\r\n                    name: \"ZipCode\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                ]\r\n            },\r\n            {\r\n                layoutType: \"triple\",\r\n                Data: [{\r\n                    astype: \"NumericField\",\r\n                    label: this.$t('PhoneNumber'),\r\n                    name: \"PhoneNumber\",\r\n                    value: \"\",\r\n                    validationRules: {\r\n                        \"required\": true,\r\n                        max: 100\r\n                    },\r\n                },\r\n                ]\r\n            },\r\n            ],\r\n            buttons: [{\r\n                type: \"submit\",\r\n                class: \"btn btn-success\",\r\n                text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                isVisible: false,\r\n\r\n            },\r\n            {\r\n                type: \"button\",\r\n                class: \"btn btn-danger\",\r\n                text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                isVisible: false,\r\n                onClick: this.Close,\r\n            },\r\n            ],\r\n            CountryName:'',\r\n            companyId: null,\r\n            userId: null,\r\n            RequisitionId: 0\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        await vm.ShowCountry();\r\n    },\r\n    methods: {\r\n        ShowCountry: async function () {\r\n            var vm = this;\r\n            vm.CountryData = [];\r\n            var params = `ids=&moduleName=&type=COUNTRIES&search=&refId=`\r\n            await DataService.GetDDLData(params).then(function (response) {\r\n                if (response.data.DATA.length > 0) {\r\n                    vm.FormSchema[2].Data[0].config.options = response.data.DATA;\r\n                    vm.CountryData = response.data.DATA;\r\n                }\r\n                vm.$refs.AddVendor.UpdateKeyValue();\r\n            })\r\n        },\r\n        validateEmail: function () {\r\n            var vm = this;\r\n            vm.checkEmail = false;\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            vm.isInvalidEmail = !emailRegex.test(this.txtEmail);\r\n            vm.CheckEmailtab=vm.isInvalidEmail;\r\n        },\r\n        validatePassword: function () {\r\n            var vm = this;\r\n            vm.txtconfirmPassword = '';\r\n            vm.checkPassword = false;\r\n            const emailRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\r\n            vm.isInvalidPassword = !emailRegex.test(this.txtPassword);\r\n            vm.checkPasswordtab=  vm.isInvalidPassword;\r\n        },\r\n        validateConPassword: function () {\r\n            var vm = this;\r\n            if (vm.txtconfirmPassword != vm.txtPassword) {\r\n                vm.checkConPassword = false;\r\n                vm.isConfirmPassword = true;\r\n                vm.checkConPasswordtab=true;\r\n            } else {\r\n                vm.isConfirmPassword = false;\r\n                vm.checkConPasswordtab=false;\r\n            }\r\n        },\r\n        GetCountryName: function (x, y, id) {\r\n            var vm = this;\r\n                var filterEventName = {};\r\n                filterEventName = y.config.OptionsForBind.filter(z => z.value == y.value);\r\n                vm.CountryName = filterEventName[0].name;\r\n        },\r\n        SubmitData: async function() {\r\n            var vm = this;\r\n            vm.$refs.form.validate().then(async result => {\r\n                if (vm.$refs.form.errors.Email.length > 0) {\r\n                    vm.checkEmail = true;\r\n                    vm.isInvalidEmail = false;\r\n                    vm.CheckEmailtab =true;\r\n                } else {\r\n                    vm.checkEmail = false;\r\n                    vm.CheckEmailtab =false;\r\n                }\r\n                if (vm.$refs.form.errors.Password.length > 0) {\r\n                    vm.checkPassword = true;\r\n                    vm.isInvalidPassword = false;\r\n                    vm.checkPasswordtab=true;\r\n                } else {\r\n                    vm.checkPassword = false;\r\n                    vm.checkPasswordtab=false;\r\n                }\r\n                if (vm.txtconfirmPassword =='') {\r\n                    vm.checkConPassword = true;\r\n                    vm.isConfirmPassword = false;\r\n                    vm.checkConPasswordtab=true;\r\n                } else {\r\n                    vm.checkConPassword = false;\r\n                }\r\n                if (result) {\r\n                    var url = `Email=${vm.txtEmail}`\r\n                    await DataService.CheckEmail(url).then((response) => {\r\n                        if(response.data.length>0){\r\n                            vm.IsEmailExist=true;\r\n                        }else{\r\n                            vm.IsEmailExist=false;\r\n                        }\r\n\r\n                    });\r\n\r\n                    if(vm.IsEmailExist==false){\r\n                    var jsonobj = {\r\n                        PackageId:'',\r\n                        CompanyName: vm.FormSchema[0].Data[0].value,\r\n                        FirstName: vm.FormSchema[0].Data[1].value,\r\n                        LastName: vm.FormSchema[0].Data[2].value,\r\n                        Email: vm.txtEmail,\r\n                        Password: vm.txtPassword,\r\n                        ConfirmPassword:vm.txtconfirmPassword,\r\n                        CountryId: vm.FormSchema[2].Data[0].value,\r\n                        State: vm.FormSchema[2].Data[1].value,\r\n                        City: vm.FormSchema[2].Data[2].value,\r\n                        Address1: vm.FormSchema[3].Data[0].value,\r\n                        Address2: vm.FormSchema[3].Data[1].value,\r\n                        ZipCode:vm.FormSchema[3].Data[2].value,\r\n                        Phone: vm.FormSchema[4].Data[0].value, \r\n                        AccountStatus:'',\r\n                        NetAmount:0,\r\n                        CompDescription:'',\r\n                        Price:0,\r\n                        TimeZoneId:'',\r\n                        TotalNoOfLicense:'',\r\n                        PasswordSalt:'',\r\n                        PaymentOption:'', \r\n                        BillingAnniversaryDate:'',\r\n                        CompanyType : \"Vendor\",\r\n                        BatchId: 0,\r\n                        PackageQueryString:'',\r\n                        IsClientToCa:'',\r\n                        NoOfLicense:'',\r\n                        OneTimePayment:'',\r\n                        IsTrial:'',\r\n                        ip: '',\r\n                        Token:'',\r\n                        SubscriptionId:0,\r\n                        PaymentStatus:'',\r\n                        Requestfrom:'',\r\n                        NoOfUsers:'',\r\n                        AddOnIds:0,\r\n                        RefCode:'', \r\n                        TalygenAmount:'',\r\n                        AgentId:'',\r\n                        ParentCompanyId:'',\r\n                        CustomizeAddOn:'',\r\n                        AnniversaryDateList:'',\r\n                        BillingScheduleType:'',\r\n                        PackageName: '',\r\n                        BillingAnniversaryDate:'',\r\n                        ProNetAmount:0,\r\n                        PackageWithLicense:'',\r\n                        os:'',\r\n                        CountryName:vm.CountryName,\r\n                        BAddress1:vm.FormSchema[3].Data[0].value,\r\n                        BAddress2:vm.FormSchema[3].Data[1].value,\r\n                        BCountry: vm.FormSchema[2].Data[0].value,\r\n                        BCountryName: vm.CountryName,\r\n                        BCity:vm.FormSchema[2].Data[2].value,\r\n                        BState: vm.FormSchema[2].Data[1].value,\r\n                        BZipCode:vm.FormSchema[3].Data[2].value,\r\n                        UserId:0\r\n                    };\r\n                    var params = JSON.stringify(jsonobj);\r\n                    DataService.AddVendor(params).then((response) => {\r\n                        if (response.data == 'success') {\r\n                            vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Vendor\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                            vm.Close();\r\n                            vm.$parent.FetchData();\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t(\"AddedError\", [vm.$t(\"Vendor\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                            vm.Close();\r\n                        }\r\n                    }); \r\n                    }else{\r\n                        vm.ShowAlert(vm.$t(\"EmailAlreadyExist\"), \"warning\", true, vm.$t(\"Alert\"));\r\n                        return false;\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        Close: function () {\r\n            this.$router.push({\r\n                name: 'VendorListing'\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddVendor.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddVendor.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddVendor.vue?vue&type=template&id=8e37cbc2\"\nimport script from \"./AddVendor.vue?vue&type=script&lang=js\"\nexport * from \"./AddVendor.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}