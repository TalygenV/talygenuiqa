{"version":3,"sources":["webpack:///./src/views/HR/TalentPool/AddAsCandidate.vue?07ab","webpack:///src/views/HR/TalentPool/AddAsCandidate.vue","webpack:///./src/views/HR/TalentPool/AddAsCandidate.vue?1a7d","webpack:///./src/views/HR/TalentPool/AddAsCandidate.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isLoading","staticClass","ref","_v","_s","$t","buttons","FormSchema","on","onSubmit","scopedSlots","_u","key","fn","data","directives","name","rawName","value","expression","domProps","$event","target","composing","txtEmailTo","IsShowHiddenField","class","isInvalidCCEmail","validateCCEmail","txtEmailCc","isInvalidBCCEmail","validateBCCEmail","txtEmailBcc","txtEmailFrom","txtEmailReplyTo","txtEmailSubject","error","editor","model","callback","$$v","noteDescription","staticRenderFns","components","IsVendor","ApplicantId","CLASSIC_EDITOR","isHidden","notify","InvalidCCEmail","InvalidBCCEmail","isHide","CandidateData","JobsData","jobtitle","jobtype","userId","companyId","layoutType","Data","astype","label","config","options","placeholder","validationRules","visibility","max","type","text","isVisible","onClick","OnSubmit","Close","created","vm","GetUserInfo","ID","CompanyId","Email","$route","params","id","getForm","GetDdlRecords_jobs","GetDdlRecords_Template","emailValidate","required","regex","mailvalidate","methods","onReady","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","url","DataService","CandidateDetails","then","response","filter","e","notice_period","notice_period_type","email_id","GetDDLData","json","DATA","forEach","item","index","push","ddljobs","dt","x","$refs","AddAsCandidate","UpdateKeyValue","$router","emailRegex","test","bindJobTitle","onChange","event","formfields","val","tempElement","document","createElement","innerHTML","result","textContent","trim","isSendEmail","SelectJob","CandidateID","UserId","TemplateId","SelectTemplate","job_Id","EmailTo","EmailCc","EmailBcc","EmailFrom","EmailReplyTo","EmailSubject","EmailDesc","Notify","is_sendEmail","objectPostString","JSON","stringify","Status","ShowAlert","component"],"mappings":"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","file":"js/chunk-2d0dece4.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('section',{staticClass:\"main-content\"},[_c('div',{ref:\"hellp\",attrs:{\"id\":\"divMaindealData\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('CandidateAsInternal')))])])])]),_c('div',{staticClass:\"border p-3\"},[_c('dynamic-form',{ref:\"AddAsCandidate\",attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-ToEmail\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light bg-white\"},[_vm._v(\"To:\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailTo),expression:\"txtEmailTo\"}],staticClass:\"form-control  bg-white\",attrs:{\"type\":\"text\",\"disabled\":\"disabled\",\"placeholder\":\"zoe@yopmail.com\"},domProps:{\"value\":(_vm.txtEmailTo)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailTo=$event.target.value}}}),_c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-white  text-info \"},[_c('a',{staticClass:\"text-info cc\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.IsShowHiddenField('isHidden')}}},[_vm._v(_vm._s(_vm.$t('CCuppercase')))])])]),_c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-white\"},[_c('a',{staticClass:\"text-info bcc\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.IsShowHiddenField('isHide')}}},[_vm._v(_vm._s(_vm.$t('BCCuppercase'))+\" \")])])])])]}},{key:\"tgslot-CC\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white  text-dark font-weight-light\"},[_vm._v(_vm._s(_vm.$t('CCuppercase'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailCc),expression:\"txtEmailCc\"}],staticClass:\"form-control  box-shadow bg-white\",class:{'form-control': true, 'is-invalid': _vm.isInvalidCCEmail},attrs:{\"type\":\"text\",\"id\":\"emails\",\"name\":\"CCemail\",\"placeholder\":\"Multiple emails can be separated by comma or semicolon.\"},domProps:{\"value\":(_vm.txtEmailCc)},on:{\"change\":_vm.validateCCEmail,\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailCc=$event.target.value}}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isInvalidCCEmail),expression:\"isInvalidCCEmail\"}],staticClass:\"invalid-feedback\"},[_vm._v(\" \"+_vm._s(_vm.$t('InvalidEmailFormat')))])])]}},{key:\"tgslot-BCC\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white  text-dark font-weight-light\"},[_vm._v(_vm._s(_vm.$t('BCCuppercase'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailBcc),expression:\"txtEmailBcc\"}],staticClass:\"form-control box-shadow bg-white\",class:{'form-control': true, 'is-invalid': _vm.isInvalidBCCEmail},attrs:{\"type\":\"text\",\"id\":\"emails_bcc\",\"name\":\"BCCemail\",\"placeholder\":\"Multiple emails can be separated by comma or semicolon.\"},domProps:{\"value\":(_vm.txtEmailBcc)},on:{\"change\":_vm.validateBCCEmail,\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailBcc=$event.target.value}}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isInvalidBCCEmail),expression:\"isInvalidBCCEmail\"}],staticClass:\"invalid-feedback\"},[_vm._v(\" \"+_vm._s(_vm.$t('InvalidEmailFormat')))])])]}},{key:\"tgslot-FromEmail\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light\"},[_vm._v(_vm._s(_vm.$t('From'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailFrom),expression:\"txtEmailFrom\"}],staticClass:\"form-control box-shadow bg-white\",attrs:{\"type\":\"text\",\"disabled\":\"disabled\",\"placeholder\":\"james149adams@gmail.com\"},domProps:{\"value\":(_vm.txtEmailFrom)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailFrom=$event.target.value}}})])]}},{key:\"tgslot-ReplyTo\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light \"},[_vm._v(_vm._s(_vm.$t('ReplyTo'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailReplyTo),expression:\"txtEmailReplyTo\"},{name:\"validate\",rawName:\"v-validate\",value:(_vm.mailvalidate),expression:\"mailvalidate\"}],staticClass:\"form-control box-shadow bg-white\",attrs:{\"type\":\"text\",\"name\":\"ReplyToEmail\",\"placeholder\":\"me(careers@trentvash.freshersteam.com)\"},domProps:{\"value\":(_vm.txtEmailReplyTo)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailReplyTo=$event.target.value}}})])]}},{key:\"tgslot-Subject\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text bg-white text-dark font-weight-light\",attrs:{\"id\":\"\"}},[_vm._v(_vm._s(_vm.$t('Subject'))+\":\")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.txtEmailSubject),expression:\"txtEmailSubject\"}],staticClass:\"form-control box-shadow bg-white\",attrs:{\"type\":\"text\",\"placeholder\":\"Profile for the opening (Job Title/ Designation)\"},domProps:{\"value\":(_vm.txtEmailSubject)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.txtEmailSubject=$event.target.value}}})])]}},{key:\"tgslot-Description\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('ckeditor',{class:{ 'is-invalid': data.error != '' },attrs:{\"editor\":_vm.editor},model:{value:(_vm.noteDescription),callback:function ($$v) {_vm.noteDescription=$$v},expression:\"noteDescription\"}}),_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(_vm._s(data.error))])]}}])})],1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<template>\r\n    <div>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <section class=\"main-content\">\r\n            <div ref=\"hellp\" id=\"divMaindealData\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 padding-t_8\">\r\n                        <div class=\"theme-primary partition-full\">\r\n                            <span class=\"p-name text-white\">{{ $t('CandidateAsInternal') }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"border p-3\">\r\n                    <dynamic-form ref=\"AddAsCandidate\" lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\"  v-on:OnSubmit=\"onSubmit\">\r\n                        <template v-slot:tgslot-ToEmail=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light bg-white\">To:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailTo\" class=\"form-control  bg-white\" disabled=\"disabled\"\r\n                                    placeholder=\"zoe@yopmail.com\">\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text bg-white  text-info \">\r\n                                        <a href=\"javascript:;\" v-on:click=\"IsShowHiddenField('isHidden')\"\r\n                                            class=\"text-info cc\">{{ $t('CCuppercase') }}</a>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text bg-white\">\r\n                                        <a href=\"javascript:;\" v-on:click=\"IsShowHiddenField('isHide')\"\r\n                                            class=\"text-info bcc\">{{ $t('BCCuppercase') }} </a>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-CC=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white  text-dark font-weight-light\">{{\r\n                                        $t('CCuppercase') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" id=\"emails\" name=\"CCemail\" v-model=\"txtEmailCc\"\r\n                                    class=\"form-control  box-shadow bg-white\" @change=\"validateCCEmail\" :class=\"{'form-control': true, 'is-invalid': isInvalidCCEmail}\"\r\n                                    placeholder=\"Multiple emails can be separated by comma or semicolon.\">\r\n                                    <span v-show=\"isInvalidCCEmail\" class=\"invalid-feedback\">  {{$t('InvalidEmailFormat') }}</span>\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-BCC=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white  text-dark font-weight-light\">{{\r\n                                        $t('BCCuppercase') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" id=\"emails_bcc\" v-model=\"txtEmailBcc\" name=\"BCCemail\"\r\n                                    class=\"form-control box-shadow bg-white\" @change=\"validateBCCEmail\" :class=\"{'form-control': true, 'is-invalid': isInvalidBCCEmail}\"\r\n                                    placeholder=\"Multiple emails can be separated by comma or semicolon.\">\r\n                                    <span v-show=\"isInvalidBCCEmail\" class=\"invalid-feedback\">  {{$t('InvalidEmailFormat') }}</span>\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-FromEmail=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light\">{{\r\n                                        $t('From') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailFrom\" class=\"form-control box-shadow bg-white\"\r\n                                    disabled=\"disabled\" placeholder=\"james149adams@gmail.com\">\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-ReplyTo=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light \">{{\r\n                                        $t('ReplyTo') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailReplyTo\" name=\"ReplyToEmail\"\r\n                                    class=\"form-control box-shadow bg-white\"\r\n                                    placeholder=\"me(careers@trentvash.freshersteam.com)\" v-validate=\"mailvalidate\">\r\n                                <!-- <span v-show=\"errors.has('ManageEmailData.ReplyToEmail')\" class=\"invalid-feedback\">{{ errors.first('ManageEmailData.ReplyToEmail') }}</span> -->\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-Subject=\"{ data }\">\r\n                            <div class=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text bg-white text-dark font-weight-light\" id=\"\">{{\r\n                                        $t('Subject') }}:</span>\r\n                                </div>\r\n                                <input type=\"text\" v-model=\"txtEmailSubject\" class=\"form-control box-shadow bg-white\"\r\n                                    placeholder=\"Profile for the opening (Job Title/ Designation)\">\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-Description=\"{ data }\">\r\n                            <ckeditor :editor=\"editor\" v-model=\"noteDescription\"\r\n                                :class=\"{ 'is-invalid': data.error != '' }\">\r\n                            </ckeditor>\r\n                            <span class=\"invalid-feedback\">{{ data.error }}</span>\r\n                        </template>\r\n                    </dynamic-form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DataService from \"@/services/DataService\";\r\nexport default {\r\n    components: {\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            IsVendor: '',\r\n            ApplicantId: 0,\r\n            editor: this.CLASSIC_EDITOR,\r\n            isHidden: false,\r\n            notify:'',\r\n            txtEmailCc: '',\r\n            txtEmailBcc:'',\r\n            InvalidCCEmail:'',\r\n            InvalidBCCEmail:'',\r\n            txtEmailFrom:'',\r\n            isInvalidCCEmail: false,\r\n            isInvalidBCCEmail: false,\r\n            txtEmailReplyTo:'',\r\n            txtEmailSubject:'',\r\n            isHide: false,\r\n            CandidateData: [],\r\n            JobsData: [],\r\n            jobtitle: '',\r\n            jobtype:'',\r\n            txtEmailTo: '',\r\n            userId:'',\r\n            companyId:'',\r\n            noteDescription: '',\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Job'),\r\n                            name: \"SelectJob\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('SelectJob'),\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Template'),\r\n                            name: \"SelectTemplate\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('SelectTemplate'),\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"ToEmail\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('Enter To Email'),\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"CC\",\r\n                            value: \"\",\r\n                            visibility: false,\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"BCC\",\r\n                            value: \"\",\r\n                            visibility: false,\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"FromEmail\",\r\n                            value: \"\",\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"ReplyTo\",\r\n                            value: \"\",\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            name: \"Subject\",\r\n                            value: \"\",\r\n                            placeholder: this.$t('Enter Subject'),\r\n                            validationRules: { \"required\": false },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('Note Description'),\r\n                            name: \"Description\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: { \"required\": false, max: 5000 },\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save and Skip Email\",\r\n                    isVisible:true,                    \r\n                    onClick: this.OnSubmit\r\n                },\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    isVisible:true, \r\n                    onClick: this.OnSubmit\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close,\r\n                },\r\n            ],\r\n\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        vm.userId = this.GetUserInfo.ID;\r\n        vm.companyId = this.GetUserInfo.CompanyId;\r\n        vm.IsVendor = this.GetUserInfo.IsVendor;\r\n        vm.txtEmailFrom = this.GetUserInfo.Email;\r\n        vm.ApplicantId = this.$route.params.id;\r\n        await this.getForm(vm.ApplicantId);\r\n        this.GetDdlRecords_jobs();\r\n        this.GetDdlRecords_Template();\r\n        this.emailValidate = {\r\n            required: true,\r\n            regex: /^(\\s?[^\\s,]+[^\\s,]+\\.[^\\s,]+\\s?,)*(\\s?[^\\s,]+[^\\s,]+\\.[^\\s,]+)$/\r\n        };\r\n        this.mailvalidate = {\r\n            regex: /^\\w+([\\.-]?\\w+)*@@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\r\n        }\r\n    },\r\n    methods: {\r\n        onReady(editor) {\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n        },\r\n        getForm: function (id) {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var url = `applicantId=${id}&moduleName=Hiring&subModuleCode=HR_TALENT_POOL&langCode=en`;\r\n            DataService.CandidateDetails(url).then(function (response) {\r\n                if (response != null && response.data != null) {\r\n                    let CandidateData = response.data.data.filter(function (e) {\r\n                        e.notice_period = e.notice_period + ' ' + e.notice_period_type;\r\n                        return true;\r\n                    });\r\n                    vm.CandidateData = CandidateData;\r\n                    vm.txtEmailTo = vm.CandidateData[0].email_id;\r\n                    vm.isLoading = false;\r\n                } else {\r\n                    vm.CandidateData = [];\r\n                }\r\n            });\r\n        },\r\n        GetDdlRecords_jobs: async function () {\r\n            var vm = this;\r\n            var type = vm.IsVendor == 'no' ? \"JOB_POST_APPLICANT\" : \"GET_CONSULTANT_JOBS\";\r\n            var url = `ids=${vm.ApplicantId}&&moduleName=${'Hiring'}&type=${type}&search=&refId=`;\r\n            await DataService.GetDDLData(url).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        response.data.DATA.forEach((item, index) => {\r\n                            vm.FormSchema[0].Data[0].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                        if (vm.ddljobs != null && vm.ddljobs != '') {\r\n                            var dt = vm.JobsData.filter(x => x.value == vm.ddljobs);\r\n                            vm.jobtitle = dt[0].name;\r\n                        }\r\n                    }\r\n                    vm.$refs.AddAsCandidate.UpdateKeyValue();\r\n                }\r\n            });\r\n        },\r\n        GetDdlRecords_Template: async function () {\r\n            var vm = this;\r\n            var url = `ids=&&&type=ADD_AS_CANDIDATE_TEMPLATE&search=&refId=`;\r\n            await DataService.GetDDLData(url).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        response.data.DATA.forEach((item, index) => {\r\n                            vm.FormSchema[0].Data[1].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                    }\r\n                    vm.$refs.AddAsCandidate.UpdateKeyValue();\r\n                }\r\n            });\r\n        },\r\n        Close: function (type) {\r\n            if(type=='inter'){\r\n                this.$router.push({ name: 'JobListing' });\r\n            }else{\r\n                this.$router.push({ name: 'TalentPoolList' });\r\n            }\r\n        },\r\n        IsShowHiddenField: function (type) {\r\n            var vm = this;\r\n            if (type == 'isHidden') {\r\n                vm.isHidden = !vm.isHidden\r\n               vm.isHidden == true ?vm.FormSchema[2].Data[0].visibility =true:vm.FormSchema[2].Data[0].visibility =false;\r\n            } else if (type == 'isHide') {\r\n                vm.isHide = !vm.isHide\r\n                vm.isHide == true ? vm.FormSchema[3].Data[0].visibility = true : vm.FormSchema[3].Data[0].visibility = false;\r\n            }\r\n        },\r\n        validateCCEmail: function () {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            this.isInvalidCCEmail = !emailRegex.test(this.txtEmailCc);\r\n        },\r\n        validateBCCEmail: function () {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            this.isInvalidBCCEmail = !emailRegex.test(this.txtEmailCc);\r\n        },\r\n        bindJobTitle: function (id) {\r\n            if (vm.ddljobs != null && vm.ddljobs != '') {\r\n                var dt = vm.JobsData.filter(x => x.value == vm.ddljobs);\r\n                vm.jobtitle = dt[0].name;\r\n                this.onChange(event);\r\n            }\r\n        },\r\n        onSubmit: function (formfields, val) {\r\n                var vm = this;\r\n                var tempElement = document.createElement('div');\r\n                tempElement.innerHTML = val;\r\n                var result = tempElement.textContent.trim();\r\n                var isSendEmail='';\r\n                result=='Save'?isSendEmail=true:isSendEmail=false;\r\n                if(vm.isInvalidCCEmail !=true && vm.isInvalidBCCEmail !=true){\r\n                if (formfields.SelectJob != \"\" && formfields.SelectJob != null) {\r\n                    //vm.txtEmailDesc = CKEDITOR.instances['txtemailDescription'].getData();\r\n                        var data = {\r\n                            CandidateID: vm.ApplicantId,\r\n                            UserId: vm.userId,\r\n                            CompanyId: vm.companyId,\r\n                            TemplateId: formfields.SelectTemplate,\r\n                            job_Id: formfields.SelectJob,\r\n                            EmailTo: vm.txtEmailTo,\r\n                            EmailCc: vm.txtEmailCc,\r\n                            EmailBcc: vm.txtEmailBcc,\r\n                            EmailFrom: vm.txtEmailFrom,\r\n                            EmailReplyTo: vm.txtEmailReplyTo,\r\n                            EmailSubject: vm.txtEmailSubject,\r\n                            EmailDesc: vm.noteDescription,\r\n                            Notify: vm.notify,\r\n                            is_sendEmail:isSendEmail\r\n                        };\r\n                        var objectPostString = JSON.stringify(data);\r\n                            DataService.AddAsCandidate(objectPostString).then((response) => {\r\n                            if(result!='Save'){\r\n                            if (response.data[0].Status == \"Success\")\r\n                            {\r\n                                vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Candidate\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                                vm.Close();\r\n                             }\r\n                            else if (response.data[0].Status == \"Already Exist\") {\r\n                                vm.ShowAlert(vm.$t(\"CandidateAlreadyApplied\"), \"warning\", true,  vm.$t(\"Alert\"));\r\n                            }\r\n                        }else{\r\n                            if (response.data[0].Status == \"Success\") {\r\n                                if (vm.jobtype == \"inter\") {\r\n                                    vm.Close('inter');\r\n                                    vm.ShowAlert(vm.$t(\"EmailSuccessfullySend\"), \"success\", true,  vm.$t(\"Alert\"));\r\n                                    return true;\r\n                                }\r\n                                    vm.Close();\r\n                                    vm.ShowAlert(vm.$t(\"EmailSuccessfullySend\"), \"success\", true,  vm.$t(\"Alert\"));\r\n                                }\r\n                            if (response.data[0].Status == \"Already Exist\") {\r\n                                vm.ShowAlert(vm.$t(\"CandidateAlreadyApplied\"), \"warning\", true,  vm.$t(\"Alert\"));\r\n                                }\r\n\r\n                        }\r\n                        }, response => {\r\n                        });\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t(\"PleaseCorrectHighlightedErrors\"), \"failure\", true);\r\n                }\r\n            }\r\n            },\r\n    },\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddAsCandidate.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddAsCandidate.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddAsCandidate.vue?vue&type=template&id=9761f628\"\nimport script from \"./AddAsCandidate.vue?vue&type=script&lang=js\"\nexport * from \"./AddAsCandidate.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}