{"version":3,"sources":["webpack:///./src/views/HR/JobPost/AddDesignation.vue?64cb","webpack:///src/views/HR/JobPost/AddDesignation.vue","webpack:///./src/views/HR/JobPost/AddDesignation.vue?5afd","webpack:///./src/views/HR/JobPost/AddDesignation.vue","webpack:///./src/views/HR/JobPost/AddDeppartment.vue?8116","webpack:///src/views/HR/JobPost/AddDeppartment.vue","webpack:///./src/views/HR/JobPost/AddDeppartment.vue?1f8c","webpack:///./src/views/HR/JobPost/AddDeppartment.vue","webpack:///./src/views/HR/JobPost/AddRequisition.vue?d966","webpack:///src/views/HR/JobPost/AddRequisition.vue","webpack:///./src/views/HR/JobPost/AddRequisition.vue?9eb1","webpack:///./src/views/HR/JobPost/AddRequisition.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","_e","on","Close","buttons","FormSchema","onSubmit","staticRenderFns","props","DesignationId","type","Object","required","data","EditDesignation","AddDesignation","layoutType","Data","astype","label","name","value","placeholder","validationRules","disabled","class","text","isVisible","onClick","companyId","userId","created","vm","GetUserInfo","ID","CompanyId","designation_name","designation_desc","methods","formfields","val","jsonobj","designationname","Designation","description","Description","id","designation_id","params","JSON","stringify","DataService","SaveDesignation","then","response","Status","Code","ShowAlert","$parent","FetchData","ShowAddDesignation","component","DepartmentId","AddDepartment","EditDepartment","config","options","DEPARTMENT_NAME","IS_VISIBILE_TO_CLIENT","DEPARTMENT_DESC","departmentname","Department","isvisible","departmentId","DEPARTMENT_ID","SaveDepartment","ShowAddDepartment","ref","components","AddDeppartment","EditFunctionalArea","AddFunctionalArea","mode","onChange","onChangeProfile","showAddIcon","onAddButtonClick","visibility","max","RequisitionId","GetDesignation","GetDepartments","GetLocation","GetSkill","GetRecommendations","getExperienceOptions","ManageDesignation","DesignData","DATA","forEach","item","push","$refs","AddRequisition","UpdateKeyValue","ManageDepartment","DeptData","GetLocationList","LocData","ManageSkills","title","skill_id","GetLicencedUserList","username","userid","i","Positions","LocationId","Location","map","location","join","SalaryFrom","AnnualSalary","SalaryTo","Salary","ExpFrom","ExpForm","ExpTo","Skills","Skill","Recommendations","Reason","StatusId","StatusCode","$router"],"mappings":"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","file":"js/chunk-49543b0a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full  d-flex\"},[(_vm.AddDesignation)?_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('AddDesignation')))]):_vm._e(),(_vm.EditDesignation)?_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('EditDesignation')))]):_vm._e(),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]),_c('div',{staticClass:\"modal-body\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}}),_c('div',{staticClass:\"left-content row flex-row-reverse mt-3\"},[_c('div',{staticClass:\"col-lg-12 text-left\"},[_c('div',{staticClass:\"py-2 mandatory\"},[_vm._v(\" \"+_vm._s(_vm.$t('MandatoryString'))+\" \")])])])],1)])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"en\">\r\n<div class=\"my-popups\">\r\n    <loader :is-visible=\"isLoading\"></loader>\r\n    <div class=\"modal d-block\">\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header theme-primary partition-full  d-flex\">\r\n                    <h4 v-if=\"AddDesignation\"class=\"modal-title\">{{ $t('AddDesignation') }}</h4>\r\n                    <h4 v-if=\"EditDesignation\" class=\"modal-title\">{{ $t('EditDesignation') }}</h4>\r\n                    <button type=\"button\" class=\"close\" v-on:click=\"Close\">\r\n                        <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                    </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\"></dynamic-form>\r\n                    <div class=\"left-content row flex-row-reverse mt-3\">\r\n                        <div class=\"col-lg-12 text-left\">\r\n                            <div class=\"py-2 mandatory\">\r\n                                {{ $t('MandatoryString') }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../../services/DataService'\r\nexport default {\r\n    props: {\r\n        DesignationId: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            EditDesignation: false,\r\n            AddDesignation: true,\r\n            FormSchema: [{\r\n                    layoutType: \"single\",\r\n                    Data: [{\r\n                        astype: \"TextField\",\r\n                        label: this.$t('Designation'),\r\n                        name: \"Designation\",\r\n                        value: \"\",\r\n                        placeholder: this.$t('Enter Designation'),\r\n                        validationRules: {\r\n                            \"required\": true\r\n                        },\r\n                        disabled: false,\r\n                    }, ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [{\r\n                        astype: \"TextAreaField\",\r\n                        label: this.$t('Description'),\r\n                        name: \"Description\",\r\n                        value: \"\",\r\n                        placeholder: this.$t('Enter Description'),\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    }]\r\n                }\r\n            ],\r\n            buttons: [{\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    isVisible: true,\r\n\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close,\r\n                },\r\n            ],\r\n            companyId: null,\r\n            userId: null\r\n        }\r\n    },\r\n    created: function () {\r\n        var vm = this;\r\n        vm.userId = vm.GetUserInfo.ID;\r\n        vm.companyId = vm.GetUserInfo.CompanyId;\r\n        if (vm.DesignationId != null) {\r\n            vm.FormSchema[0].Data[0].value = vm.DesignationId.designation_name;\r\n            vm.FormSchema[1].Data[0].value = vm.DesignationId.designation_desc;\r\n            vm.AddDesignation = false;\r\n            vm.EditDesignation = true;\r\n        }\r\n    },\r\n    methods: {\r\n        onSubmit(formfields, val) {\r\n            var vm = this;\r\n            var jsonobj = {\r\n                userId: vm.userId,\r\n                companyId: vm.companyId,\r\n                designationname: formfields.Designation,\r\n                description: formfields.Description,\r\n                id: vm.DesignationId != null ? vm.DesignationId.designation_id : 0\r\n            };\r\n            var params = JSON.stringify(jsonobj);\r\n            DataService.SaveDesignation(params).then((response) => {\r\n                if (response.data.Status == \"Success\") {\r\n                    if (response.data.Code == 0) {\r\n                        vm.ShowAlert(vm.$t('DesignationAlreadyExist', [vm.$t('AddDesignation')]), \"warning\", true, vm.$t(\"Alert\"));\r\n                    } else {\r\n                        if (vm.DesignationId != null) {\r\n                            vm.ShowAlert(vm.$t('UpdatedSuccess', [vm.$t('AddDesignation')]), \"success\", true, vm.$t(\"Alert\"));\r\n                        } else {\r\n                            vm.ShowAlert(vm.$t('AddedSuccess', [vm.$t('AddDesignation')]), \"success\", true, vm.$t(\"Alert\"));\r\n                        }\r\n                        vm.$parent.FetchData();\r\n                        vm.Close();\r\n                    }\r\n                }\r\n            });\r\n\r\n        },\r\n        Close: function () {\r\n            this.$parent.ShowAddDesignation = false;\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddDesignation.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddDesignation.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddDesignation.vue?vue&type=template&id=29f4b36d&lang=en\"\nimport script from \"./AddDesignation.vue?vue&type=script&lang=js\"\nexport * from \"./AddDesignation.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full  d-flex\"},[(_vm.AddDepartment)?_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('AddDepartment')))]):_vm._e(),(_vm.EditDepartment)?_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('EditDepartment')))]):_vm._e(),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]),_c('div',{staticClass:\"modal-body\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}}),_c('div',{staticClass:\"left-content row flex-row-reverse mt-3\"},[_c('div',{staticClass:\"col-lg-12 text-left\"},[_c('div',{staticClass:\"py-2 mandatory\"},[_vm._v(\" \"+_vm._s(_vm.$t('MandatoryString'))+\" \")])])])],1)])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"en\">\r\n<div class=\"my-popups\">\r\n    <loader :is-visible=\"isLoading\"></loader>\r\n    <div class=\"modal d-block\">\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header theme-primary partition-full  d-flex\">\r\n                    <h4 v-if=\"AddDepartment\" class=\"modal-title\">{{ $t('AddDepartment') }}</h4>\r\n                    <h4 v-if=\"EditDepartment\" class=\"modal-title\">{{ $t('EditDepartment') }}</h4>\r\n                    <button type=\"button\" class=\"close\" v-on:click=\"Close\">\r\n                        <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                    </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\"></dynamic-form>\r\n                    <div class=\"left-content row flex-row-reverse mt-3\">\r\n                        <div class=\"col-lg-12 text-left\">\r\n                            <div class=\"py-2 mandatory\">\r\n                                {{ $t('MandatoryString') }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../../services/DataService'\r\nexport default {\r\n    props: {\r\n        DepartmentId: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            AddDepartment: true,\r\n            EditDepartment: false,\r\n            FormSchema: [{\r\n                    layoutType: \"single\",\r\n                    Data: [{\r\n                        astype: \"TextField\",\r\n                        label: this.$t('Department'),\r\n                        name: \"Department\",\r\n                        value: \"\",\r\n                        placeholder: this.$t('Enter Department'),\r\n                        validationRules: {\r\n                            \"required\": true\r\n                        },\r\n                        disabled: false,\r\n                    }, ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [{\r\n                        astype: \"CheckBoxField\",\r\n                        label: this.$t('isVisibleToClient'),\r\n                        name: \"isvisible\",\r\n                        value: \"\",\r\n                        config: {\r\n                            options: [{\r\n                                value: \"true\",\r\n                                name: \"\"\r\n                            }]\r\n                        },\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    }]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [{\r\n                        astype: \"TextAreaField\",\r\n                        label: this.$t('Description'),\r\n                        name: \"Description\",\r\n                        value: \"\",\r\n                        placeholder: this.$t('Enter Description'),\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                    }]\r\n                }\r\n            ],\r\n            buttons: [{\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    isVisible: true,\r\n\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close,\r\n                },\r\n            ],\r\n            companyId: null,\r\n            userId: null\r\n        }\r\n    },\r\n    created: function () {\r\n        var vm = this;\r\n        vm.userId = vm.GetUserInfo.ID;\r\n        vm.companyId = vm.GetUserInfo.CompanyId;\r\n        if (vm.DepartmentId != null) {\r\n            vm.FormSchema[0].Data[0].value = vm.DepartmentId.DEPARTMENT_NAME;\r\n            vm.FormSchema[1].Data[0].value = vm.DepartmentId.IS_VISIBILE_TO_CLIENT == 'Yes' ? 'true' : 'false';\r\n            vm.FormSchema[2].Data[0].value = vm.DepartmentId.DEPARTMENT_DESC;\r\n            vm.AddDepartment = false;\r\n            vm.EditDepartment = true;\r\n        }\r\n    },\r\n    methods: {\r\n        onSubmit(formfields, val) {\r\n            var vm = this;\r\n            var jsonobj = {\r\n                userId: vm.userId,\r\n                companyId: vm.companyId,\r\n                departmentname: formfields.Department,\r\n                isvisible: formfields.isvisible == true ? 'true' : 'false',\r\n                description: formfields.Description,\r\n                departmentId: vm.DepartmentId != null ? vm.DepartmentId.DEPARTMENT_ID : 0\r\n            };\r\n            var params = JSON.stringify(jsonobj);\r\n            DataService.SaveDepartment(params).then((response) => {\r\n                if (response.data.Status == \"Success\") {\r\n                    if (response.data.Code == 0) {\r\n                        vm.ShowAlert(vm.$t('DepartmentAlreadyExist', [vm.$t('AddDepartment')]), \"warning\", true, vm.$t(\"Alert\"));\r\n                    } else {\r\n                        if (vm.DepartmentId != null) {\r\n                            vm.ShowAlert(vm.$t('UpdatedSuccess', [vm.$t('AddDepartment')]), \"success\", true, vm.$t(\"Alert\"));\r\n                        } else {\r\n                            vm.ShowAlert(vm.$t('AddedSuccess', [vm.$t('AddDepartment')]), \"success\", true, vm.$t(\"Alert\"));\r\n                        }\r\n                        vm.$parent.FetchData();\r\n                        vm.Close();\r\n                    }\r\n                }\r\n            });\r\n\r\n        },\r\n        Close: function () {\r\n            this.$parent.ShowAddDepartment = false;\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddDeppartment.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddDeppartment.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddDeppartment.vue?vue&type=template&id=4a5a81b8&lang=en\"\nimport script from \"./AddDeppartment.vue?vue&type=script&lang=js\"\nexport * from \"./AddDeppartment.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('section',{staticClass:\"main-content\"},[_c('div',{ref:\"hellp\",attrs:{\"id\":\"divMaindealData\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('AddRequisition')))])])])]),_c('div',{staticClass:\"border p-3\"},[_c('Form',{ref:\"JobPostForm\"},[_c('dynamic-form',{ref:\"AddRequisition\",attrs:{\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}}),_c('div',{staticClass:\"left-content row flex-row-reverse mt-3\"},[_c('div',{staticClass:\"col-lg-12 text-left\"},[_c('div',{staticClass:\"py-2 mandatory\"},[_vm._v(\" \"+_vm._s(_vm.$t('MandatoryString'))+\" \")])])])],1)],1)]),(_vm.ShowAddDesignation)?_c('AddDesignation'):_vm._e(),(_vm.ShowAddDepartment)?_c('AddDeppartment'):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n<div>\r\n    <loader :is-visible=\"isLoading\"></loader>\r\n    <section class=\"main-content\">\r\n        <div ref=\"hellp\" id=\"divMaindealData\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{ $t('AddRequisition') }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"border p-3\">\r\n                <Form ref=\"JobPostForm\">\r\n                    <dynamic-form ref=\"AddRequisition\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\"></dynamic-form>\r\n                    <div class=\"left-content row flex-row-reverse mt-3\">\r\n                        <div class=\"col-lg-12 text-left\">\r\n                            <div class=\"py-2 mandatory\">\r\n                                {{ $t('MandatoryString') }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n        <AddDesignation v-if=\"ShowAddDesignation\"></AddDesignation>\r\n        <AddDeppartment v-if=\"ShowAddDepartment\"></AddDeppartment>\r\n    </section>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../../services/DataService'\r\nimport AddDeppartment from './AddDeppartment.vue';\r\nimport AddDesignation from './AddDesignation.vue';\r\nexport default {\r\n    components: {\r\n        AddDesignation,\r\n        AddDeppartment\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            EditFunctionalArea: false,\r\n            AddFunctionalArea: true,\r\n            ShowAddDesignation: false,\r\n            ShowAddDepartment: false,\r\n            FormSchema: [{\r\n                    layoutType: \"triple\",\r\n                    Data: [{\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Designation'),\r\n                            name: \"Designation\",\r\n                            value: \"\",\r\n                            mode: \"tag\",\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.onChangeProfile,\r\n                                showAddIcon: true,\r\n                                onAddButtonClick: this.AddDesignation,\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": true\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Positions'),\r\n                            name: \"Positions\",\r\n                            value: \"\",\r\n                            validationRules: {\r\n                                \"required\": true,\r\n                                max: 100\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Department'),\r\n                            name: \"Department\",\r\n                            value: \"\",\r\n                            mode: \"tag\",\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.onChangeProfile,\r\n                                showAddIcon: true,\r\n                                onAddButtonClick: this.AddDepartment,\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": true\r\n                            },\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"triple\",\r\n                    Data: [{\r\n                            astype: \"MultiSelectField\",\r\n                            label: this.$t('Location'),\r\n                            name: \"Location\",\r\n                            value: \"\",\r\n                            mode: \"tag\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"MultiSelectField\",\r\n                            label: this.$t('Skill'),\r\n                            name: \"Skill\",\r\n                            value: \"\",\r\n                            mode: \"tag\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"MultiSelectField\",\r\n                            label: this.$t('Recommendations'),\r\n                            name: \"Recommendations\",\r\n                            value: \"\",\r\n                            mode: \"tag\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"four\",\r\n                    Data: [{\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Annual Salary (in thousand(s)) From'),\r\n                            name: \"AnnualSalary\",\r\n                            value: \"\",\r\n                            validationRules: {\r\n                                \"required\": false,\r\n                                max: 100\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            name: \"Salary\",\r\n                            value: \"\",\r\n                            validationRules: {\r\n                                \"required\": false,\r\n                                max: 100\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Experience (in year(s)) From:'),\r\n                            name: \"ExpForm\",\r\n                            value: \"\",\r\n                            mode: \"tag\",\r\n                            config: {\r\n                                options: [],\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            name: \"ExpTo\",\r\n                            value: \"\",\r\n                            mode: \"tag\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [{\r\n                        astype: \"TextAreaField\",\r\n                        label: this.$t('Reason'),\r\n                        name: \"Reason\",\r\n                        value: \"\",\r\n                        validationRules: \"\",\r\n                    }]\r\n                }\r\n            ],\r\n            buttons: [{\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    isVisible: true,\r\n\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close,\r\n                },\r\n            ],\r\n            companyId: null,\r\n            userId: null,\r\n            RequisitionId: 0\r\n        }\r\n    },\r\n    created: function () {\r\n        var vm = this;\r\n        vm.userId = vm.GetUserInfo.ID;\r\n        vm.companyId = vm.GetUserInfo.CompanyId;\r\n        // vm.RequisitionId = this.$route.REQUISITION_ID;\r\n        vm.GetDesignation();\r\n        vm.GetDepartments();\r\n        vm.GetLocation();\r\n        vm.GetSkill();\r\n        vm.GetRecommendations();\r\n        vm.getExperienceOptions();\r\n        if (vm.RequisitionId != null) {\r\n            vm.FormSchema[0].Data[0].value = vm.DepartmentId.DEPARTMENT_NAME;\r\n            vm.FormSchema[1].Data[0].value = vm.DepartmentId.IS_VISIBILE_TO_CLIENT == 'Yes' ? 'true' : 'false';\r\n            vm.FormSchema[2].Data[0].value = vm.DepartmentId.DEPARTMENT_DESC;\r\n            vm.AddDepartment = false;\r\n            vm.EditDepartment = true;\r\n        }\r\n    },\r\n    methods: {\r\n        AddDesignation() {\r\n            var vm = this;\r\n            vm.ShowAddDesignation = true;\r\n        },\r\n        AddDepartment() {\r\n            var vm = this;\r\n            vm.ShowAddDepartment = true;\r\n        },\r\n        GetDesignation() {\r\n            var vm = this;\r\n            var params = `companyId=${vm.companyId}&pageSize=100&pageNumber=1&designationname=`;\r\n            DataService.ManageDesignation(params).then((response) => {\r\n                if (response.data != '') {\r\n                    vm.DesignData = response.data.DATA;\r\n                    vm.DesignData.forEach(item => {\r\n                        vm.FormSchema[0].Data[0].config.options.push({\r\n                            name: item.designation_name,\r\n                            value: item.designation_id\r\n                        })\r\n                    })\r\n                }\r\n                vm.$refs.AddRequisition.UpdateKeyValue();\r\n            });\r\n        },\r\n        GetDepartments() {\r\n            var vm = this;\r\n            var params = `companyId=${vm.companyId}&pageSize=100&pageNumber=1&departmentname=`;\r\n            DataService.ManageDepartment(params).then((response) => {\r\n                if (response.data != '') {\r\n                    vm.DeptData = response.data.DATA;\r\n                    vm.DeptData.forEach(item => {\r\n                        vm.FormSchema[0].Data[2].config.options.push({\r\n                            name: item.DEPARTMENT_NAME,\r\n                            value: item.DEPARTMENT_ID\r\n                        })\r\n                    })\r\n                }\r\n                vm.$refs.AddRequisition.UpdateKeyValue();\r\n            });\r\n        },\r\n        GetLocation() {\r\n            var vm = this;\r\n            var params = `moduleName=Hiring&id=&type=HR_LOCAT&search=&isFor=preferred_location&refId=`;\r\n            DataService.GetLocationList(params).then((response) => {\r\n                if (response.data != '') {\r\n                    vm.LocData = response.data;\r\n                    vm.LocData.forEach(item => {\r\n                        vm.FormSchema[1].Data[0].config.options.push({\r\n                            name: item.name,\r\n                            value: item.value\r\n                        })\r\n                    })\r\n                }\r\n                vm.$refs.AddRequisition.UpdateKeyValue();\r\n            });\r\n        },\r\n        GetSkill() {\r\n            var vm = this;\r\n            var params = `companyId=${this.companyId}&pageSize=100&pageNumber=1&designationname=`;\r\n            DataService.ManageSkills(params).then((response) => {\r\n                if (response.data != '') {\r\n                    vm.LocData = response.data.DATA;\r\n                    vm.LocData.forEach(item => {\r\n                        vm.FormSchema[1].Data[1].config.options.push({\r\n                            name: item.title,\r\n                            value: item.skill_id\r\n                        })\r\n                    })\r\n                }\r\n                vm.$refs.AddRequisition.UpdateKeyValue();\r\n            });\r\n        },\r\n        GetRecommendations() {\r\n            var vm = this;\r\n            var params = `is_include_login_user_id=1&moduleName=JobPost`;\r\n            DataService.GetLicencedUserList(params).then((response) => {\r\n                if (response.data != '') {\r\n                    vm.LocData = response.data;\r\n                    vm.LocData.forEach(item => {\r\n                        vm.FormSchema[1].Data[2].config.options.push({\r\n                            name: item.username,\r\n                            value: item.userid\r\n                        })\r\n                    })\r\n                }\r\n                vm.$refs.AddRequisition.UpdateKeyValue();\r\n            });\r\n        },\r\n        getExperienceOptions() {\r\n            var vm = this;\r\n            for (let i = 0; i <= 50; i++) {\r\n                vm.FormSchema[2].Data[2].config.options.push({\r\n                    value: i,\r\n                    name: `${i}`\r\n                });\r\n                vm.FormSchema[2].Data[3].config.options.push({\r\n                    value: i,\r\n                    name: `${i}`\r\n                });\r\n            }\r\n        },\r\n        onSubmit(formfields, val) {\r\n            var vm = this;\r\n            var jsonobj = {\r\n                userId: vm.userId,\r\n                companyId: vm.companyId,\r\n                DesignationId: formfields.Designation,\r\n                Positions: formfields.Positions,\r\n                DepartmentId: formfields.Department,\r\n                LocationId: formfields.Location.map(location => location.value).join(','),\r\n                SalaryFrom: formfields.AnnualSalary,\r\n                SalaryTo: formfields.Salary,\r\n                ExpFrom: formfields.ExpForm,\r\n                ExpTo: formfields.ExpTo,\r\n                Skills: formfields.Skill.map(Skill => Skill.value).join(','),\r\n                Recommendations: formfields.Recommendations.map(Recommendations => Recommendations.value).join(','),\r\n                Reason: formfields.Reason,\r\n                RequisitionId: vm.RequisitionId,\r\n                StatusId: null\r\n            };\r\n            var params = JSON.stringify(jsonobj);\r\n            DataService.AddRequisition(params).then((response) => {\r\n                if (response.data != '') {\r\n                    if (response.data[0].StatusCode == 1) {\r\n                        vm.ShowAlert(vm.$t('AddedSuccess', [vm.$t('AddRequisition')]), \"success\", true, vm.$t(\"Alert\"));\r\n                    } else if (response.data[0].StatusCode == -11) {\r\n                        vm.ShowAlert(vm.$t('RequisitionAlreadyExist', [vm.$t('AddRequisition')]), \"warning\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                    vm.Close();\r\n                }\r\n            });\r\n        },\r\n        Close: function () {\r\n            this.$router.push({\r\n                name: 'JobRequisitionList'\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddRequisition.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddRequisition.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddRequisition.vue?vue&type=template&id=9f04b144\"\nimport script from \"./AddRequisition.vue?vue&type=script&lang=js\"\nexport * from \"./AddRequisition.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}